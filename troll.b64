What an evasive answer.  I want to know if you have been the parent of a 
child who has been terminally or chronically ill.  That is a yes or no 
answer.  What is subjective about that?  Do you have kids or not?  Did you 
have sick siblings as a child or not?  If you answer with "I've pretty much 
been...." then you are a coward and a pretentious idiot-fuck.  Answer the 
fucking question.  I find your answer pretty condescending to the Robbins's 
situation, and it really struck me raw.  If you can't empathize, you can't.  
Just  say that it sounds terrible.  Don't say that you have "a pretty good 
idea" and that it is "subjective."  Would you tell J. that you know how it 
is?

You didn't reflect at all with sympathy; you directed the attention back to 
yourself.  I'm just curious if you are pathological or if you have a story.
%
That's why when I was wrestling half my training regimen was spent 
strengthening my sphincter muscles. One of the better excercises was 
sticking a roll of quarters up my ass, then I would slowly and deliberately 
push it back out. I got so good at this the guys would hand me a dollar 
after practice, asking for change for the soda machine. The first time this 
was meant to be a joke but when my muscles became so refined that I could 
give the change to them one quarter at a time, the joke was on them.

The end result was that I became strong enough to lock-in my opponents 
finger(s) when he tried to check my oil, thereby incapacitating half of his 
mobility and strength. I can't tell you how many reversal points I scored 
off this, but it was worth at least two every match.
%
I was at the mall today buying some yugioh cards (tryin' to complete my CDIP 
set) & this kid standing next to me in line at the game shop says "Man, that 
yugiHO s**t is homo, you shouldn't be wasting your faggot cash on some lame 
fucking s**t crap like that. Fuckin' cocksucker." I turned around, saw no 
one, then peered down at a child who looked about 10 years old holding many 
packs of Pokemon Unseen Forces.

I then got into a debate (for what seemed like 30 minutes or so) on the 
superiority of Yugioh to poke'mon. And at the end he just called me a "fag" 
and proceeded to punch my in the stomach. I finally crawled on my bruised 
stomach to a nearby mall cop, and pointed to that snot nosed brat, last I 
saw of him he was on the mall cops shoulder cying for his mother. Ha...kids..
%
i'm sick and tired of people thinking being ugly is just "how god made 
you"!!! Here's two prime examples of how this statement is false, please 
feel free to add yer own. :P

How one gets fat:

    eating WAY too fucking much

[or]

    they are genetically HUGE [lol only in very few cases]

>>Conclusion: lol, fat=no self control to stop fucking eating; no self 
control=not very attractive; fat=not pretty.

How one gets acne:

    oily icky gross dirty skin that isn't washed and has dead skin 
clogging pores

[or]

    genetically gross [lol, in some cases, yet they can be 'fixed' so 
it's still no excuse]

>>>Conclusion: lol, wash yur fucking face! acne=no self responsibity to wash 
yur fucking face!; no responsibility=lol not very attractive; acne=not pretty
THUS, /end rant, but yes, people who don't have the self control to be at a 
reasonable weight are icky icky gross, and dirty people ho don't wash, lol 
ew, yea, gross.
%
Anime isn't just a bunch of cheap American ripoffs of cartoons, it's art. 
Next time you American sheeple are watching your simpsons or south park or 
whatever mindless American cartoons that have plots, storylines and comedy, 
I'll be Admiring the wonderful and superior art of Chinese cartoons.
%
oh and to people who are worried about games looking childish its usually a 
good indication that your a just a kid who thinks he's grown up cause he can 
shoot hookers in GTA
%
There is very little of value in blogging.  There are some real journalists 
who have an online newsletter, and real writers who post articles 
independently -- that they happen to be classified as blogs flatters the 
sycophantic self-indulgent blogosphere at large.  Imagine if you serialized 
your blog and emailed all your friends with it every time you updated it?  
If they wouldn't welcome such a diary, don't bother with your blog.  The 
people who care are the people no one cares about.
%
The problem is all bloggers have a following -- other bloggers.  Should we 
allow every member of NAMBLA his own page on Wikipedia because he has a few 
dozen acquaintances at NAMBLA?  No.  Nearly all bloggers who are nothing but 
should be eliminated from Wikipedia.  Published journalists and legitimate 
authors who happened to be classified as "bloggers" are welcome, of course.
%
I'm not trying to brag or anything, but yeah, I smoke weed. I don't give a 
damn what anyone says regarding marijuana laws. Go ahead, trace my ip. Tell 
the cops where I live, I should be able to put whatever i want in my body, 
may it be marijuana, a 10 year olds childs semi erect penis, or cocaine. The 
government doesn't have any right telling us what is "ok" to consume.
%
I asked my friend for a sip of his pepsi and he gave me the can. Afterward 
he accused me of 'nigger lipping' his pepsi and refused to take it back. In 
a rage, I filed a hate crime report with the NYPD and had his racist ass 
hauled off to juvee where I'm sure disgusting faggots are anally violating 
him even as I type these words. I abhor bigots.
%
Oh great another holiday for christians to force their believes on me. 
Christmas is just another day for us atheists, i'll be listening to atheist 
radio and maybe watch a little tv. I'll let the brainwashed Christians have 
"cheer and good fun".
%
Once, when i was changing my little brother's diaper, i jacked him off. I 
don't know what drove me to do it, but I did. now i can't stop thinking 
about his little penis. I think i want him to grow up and fuck me.
%
How could Sony betray me like this?!? I waited in line for three 
months--yes, I started the very first line for the PS3 way before anyone 
else. I endured the elements, the snide comments, and unemployment (I was 
fired from my job after the first week) because I wanted to be the very 
first person to play what I imagined would be the salvation to all my 
dearest dreams. Rumor had it that playing a videogame on the PS3 would be 
like injecting heroin directly into your eyeball. I believed the hype and 
worshipped Sony as my god.

Finally, with nearly every credit card maxed out and two debt consolidation 
plans under my belt, the great day arrived and I fought my way into the 
store to get my hands on this wonder console. Leaving the store I did a 
little victory dance and then drove up and down the parking lot taunting 
those who did not get a PS3. Then it was off to home to play this little 
beauty.

I hooked everything up while my wife and children watched and applauded at 
my direction. It was time to play the first game! After two hours I noticed 
that waves of heat were pouring off the console, so I told my daughter to 
hold it up in the air in front of a fan while I continued playing, waiting 
for the opiate-like ecstasy that was soon to overwhelm me after I shot to 
death another video game enemy. Things went fine for awhile; an hour later 
the box began whistling and my daughter complained that it was getting too 
hot to hold. I figured this was just what they called "burning in" and 
continued playing.

Then, at the four hour mark, my daughter began complaining of blisters and 
within fifteen minutes the entire console burst into flames, the plastic 
casing scorching and bubbling as I rushed to complete the level. But I was 
too late, and my precious daughter burned to death. Wracked with sadness at 
not being able to save my game, I immediately called my lawyer to review my 
options for a massive lawsuit.

I am sure we all expected a few "bugs" and "glitches" and "inconveniences", 
but that does not excuse Sony for selling what appears to be a blazing DEATH 
TRAP.

Caveat emptor!
%
Nigger? So you think you are superior not only because you're white! it's 
because you read! ha! I didn't know they were people like you in this 
website, and I hope you learn more about our people, because I'm very 
ofended now. Racism is illegal, you know? if they were enough technologies 
to know who is behind that "anonymus", no doubt you would be behind bars 
now! Please respect others, even if they don't like reading like you do.
%
I m a hindu religious girl. I don't when i got the habit of masturbation.Now 
i feeling guilty.?
I have always wear panty while doing it. use pillow to masturbate.I think 
some white discharge is there when i do this.doesn't know whether pillow 
became wet or not. I have left this habit when i came to know that it is not 
good. my problem is now i think if anybody touches those pillow he or she 
will become impure. similar is the with the things whom i used to touch that 
time.what to do.I m getting mad. how to solve this issue.I promise not to 
masturbate again. I cannot wash them all.Plz HELP AS SOON AS POSSIBLE. mAY 
gOD BLESS U ALL
%
a rabbi told me the other day the deffinitive prove to demon's existance. 
you have to get a black female cat (daughter of a black cat), kill it and 
burn it. put your bed in the middle of your room so that it's not touching 
any walls, and then spread the ash in a circle surrounding it. sleep there. 
the next day if you're still alive you will see the marks of demon's feet: 
they'll look like hen claws. and that's it, I really talked to a rabbi 
asking him to prove his  wonderful religion and this is the best he could 
come with (it is written on the guemara wich is like the torah i think).
%
You can spot a Nintendo 64 game from a mile away. If the textures look like 
they were photographed with a cell phone camera, copied to VHS tape, copied 
to another VHS tape, imported into the computer and saved as a low quality 
JPEG, and then the computer was chucked into a fire, you know you're playing 
a Nintendo 64 game.
%
I am sick to death of the ludicrous anti-Nintendo ravings of you pissed-off 
geeks. Do you really believe the rest of us don't see right through your 
mental pathology? Your entire conosole philosophy boils down to this: "The 
cool kids picked on me in high school, and I can't get over it. I hate the 
Wii"
%
girl you must be the aeon flux movie because i never wanna see you again
%
IM SO SICK AND TIRED OF CHRISTIANS PUSHING THEIR BELIEFS ON ME, i mean every 
year i go to buy something at the store and I see HAPPY HOLLIDAYS and it 
pisses me off so muchhh i mean christians are everywhere i mean its like 
UHHGGGGG but anyway this year its gonna be different. i just got down 
purchasing my ANTI-god pin. im going to every place where they sell 
christmas trees and all the "happy" (yeah more like BRAINWASHED) familys 
will see my anti-god pin and i will silently protest this stupid holliday 
yeah go atheists!
%
Tokyo is a great country. I have been there. Its provinces (shinagawa, 
shinjuku, roppongi) are incredibly vast and there is an inter-provincial 
high speed train that links them all! The best part is that the train also 
allows you to travel to neighboring countries, for example if you wanted to 
visit the country of Osaka you could do so because they use the same 
currency. Amazing, isn't it? I wish Canada would use the same dollars that 
the US does.
%
Now disguised fully as some sort of shabbily dressed derelict, I quickly 
made off with my shopping cart and ran full tilt back to the park. With no 
hesitation I dug through the trash barrel I'd found earlier, seizing every 
last can and bottle from the fetid depths of the garbage. I was almost 
deterred when my hand plunged into a soiled diaper, obviously unimproved 
from the three days of rain we'd received prior, but I had my eyes on the 
prize. I rolled my cart down the paths of the park, past the lemmings of our 
society as they strolled idly past jackpot after jackpot, lacking sense and 
ambition enough to loot them for their own benefit. Many of them could not 
contain their envy, looking at me with disgusted jealousy as I filled my 
cart with money. One phenomenon I cannot explain: a Catholic nun handed me a 
one dollar bill and told me I could get a free meal at St. Joseph's parish 
every Sunday afternoon. I took the cash, obviously, and thanked her for the 
tip on the new scam. I figure they must make you sign up for some shit 
before you get the free food, and that the nun must get a kickback for every 
new signup. Slick setup, but I'll just keep the buck, Sister Sucker!

When I thought I'd plucked the final gem from this treasure chest, I slowly 
paced my way towards the most convenient road out of the park. I passed by a 
man drinking from a brown paper bag. I wasn't born yesterday, so I knew that 
he had a bottle in it (and probably not Chocolate Yoohoo if you get my 
drift). I tried to look very patient and unassuming while I waited for him 
to finish his bottle and discard it, so that I might add it to my coffers. 
After ten or so minutes he did something shocking and unexpected: he walked 
into a nearby Port-A-Potty and took the bottle in with him. Seven minutes 
later, exactly, he re-emerged without his bottle. The disgusting truth was 
obvious, he had finished his bottle while on the latrine and tossed the 
empty down into the hole. I nearly wrote that one off as a loss, but then my 
inner puppet spoke once again, chiding me for the sheer Hagginsian nature of 
my hesistation. Suffice to say, I was shoulder deep in shit before I even 
had time to regret my moment of weakness. Was the resulting bottle of Olde 
English 800 Malt Liquor worth the effort? You bet your ass, buddy.

Alright, so even the faithful are probably getting impatient by now. I'm 
sure you want to know what my take was after all that time and effort and 
both occassions of having a limb thrust into fecal matter. Let's just say 
that Andrew Jackson and I have a dinner date tonight (though I'll only be 
needing his vagrant friend Alexander Hamilton once I apply my coupon). On 
second thought, Kroger's has On-Cor Salisbury Steaks for 2.50, and I have a 
manufacturer's coupon which I attained by lying to their customer care line. 
In case you're wondering, saying you found a condom in your chicken parmesan 
is only worth a dollar off your next purchase.
%
girl you must be a playground slide because i want to go down on you 
repeatedly
%
Honestly, I'd like to hear some commentary from someone who hasn't been 
caught trying to suck their own dick.
%
YEAH RIGHT SO I STRAIGHT STABBED SOME PROSTITUTE WITH A FORK. IT AINT NOTHIN 
THOUGH NAWMEAN. BITCH ASS JUDGE HIT ME WITH 3 YEARS OF PROBATION AND 80 
HOURS OF COMMUNITY SERVICE. 80 HOURS? NIGGA I BENCHPRESS 80 HOURS. NIGGAS 
THINK I AINT GONNA WILD OUT AND FORK SOMEONE ELSE CUZ I'M ON PAROLE SO I'M 
JUST LAUGHIN YO. I LAUGH AT THESE ACTORS. FUCKIN P.O THINKING I AINT GON 
COME IN HIGH AS SHIT OFF THE TREES JUST BECAUSE I GOT PEE IN A CUP. I DO 
THAT AND THROW IT IN A NIGGA'S FACE. PUNK LOOKIN OFFENDED AND SHIT I'M JUST 
LIKE DAMN SON, YOU SHOULD FEEL BLESSED TO BE COVERED IN MY URINE. FAGGOT 
DON'T KNOW WHERE MY DICK'S BEEN. IT AINT NOTHIN TO A G LIKE ME NAWMEAN
%
In the 1960s, a student at Harvard Law School addressed the parents and 
alumni with these words:

The streets of our country are in turmoil. The universities are filled with 
students rebelling and rioting. Communists are seeking to destroy our 
country. Russia is threatening us with her might. And the republic is in 
danger. Yes! danger from within and without. We need law and order! Without 
law and order our nation cannot survive.

There was prolonged applause. When the applause died down, the student 
quietly told his listeners: "These word were spoken in 1932 by Adolf Hitler."
%
Hmm, are you implying that people with long hair are gay? That's pretty 
hilarious if so, seeing as how most gay people have basic short hair.
%
I am a BIG FAT GAY VAMPIRE in the BOSTON AREA. What I am looking for is 
other QUEER VAMPIRES to be GAY with and to DRINK BLOOD out of foofy martini 
glasses and maybe to use it as ingredients in a cosmopolitan. OR MAYBE ONE 
OF THOSE DRINKS WITH ALL THE UMBRELLAS AND THINGS. Then we will go DISCO 
DANCING to HOT DISCO TRACKS and talk about how TOTALLY AWESOME Madonna is. I 
guess after doing that we will have to get a PLATE OF NACHOS or something 
EQUALLY FATTENING and then stuff them into our BIG FAT GAY FACES. The nachos 
should have SOUR CREAM on them because that is the best way to eat them. I 
am looking for someone who will let me DRINK THEIR QUEER BLOOD. In addition 
to being QUEER you must also be FAT, this is very important. Ideally I would 
also get fatter from drinking your STUPID CHUBBY GAY BLOOD. You can drink 
mine too but only if I get to wear your GAY UNDERWEAR on my head while you 
do.
%
hey gurl what kind of sex locations you into? im all about the dorm 
room/hotel room/dark corner/men's bathroom/janitor's closet/parent's 
bedroom/kindergarten classroom/bus shelter/deserted corner of the park/arby's
%
While many parents are digging deep and forgoing luxuries in order to buy 
their children the newest videogame console, I've decided to build my own 
interactive entertainment device for my children. It's a desk with a copy of 
the holy bible on it. I call it the "Praystation 3"
%
girl you must be a rodeo bull because i want to ride you for 8 seconds and 
then get off
%
Keep at it! I'm sure someday you'll be mentioned in a blog.
%
girl, you must be rearden metal because i'd like to run a train on you.
%
windows genuine advantage, created so geeks have a genuine advantage when it 
comes to getting in a womans pants.  Masterminded by Bill Gates who wanted 
to give something back to the community.  He devised a plot which would 
force women to speak to lowly geeks world wide
%
shut the fuk up bitch u get a lyf dumass ur a fkn hipacrit u sed to keep 
shyt to urself well u didnt do that n ur lyk aw get over it well u fkn get 
over it 2 then dont go fkn ritin shyt lyk u sed fkn looza
%
I admit, I love the natural smells of a man. Nothing turns me on more. A 
healthy funk in a mans armpit or a working-mans sweaty balls are like 
nothing else to me. They are easily more effective than poppers, legal and 
dont give me a headache. Speaking of armpits, I dont like deodorant either, 
mostly because it tastes so terrible.
%
When I was in 7th grade my Social Studies teacher asked me what my favorite 
system of government was. Luckily I was wearing my Anti-Flag tee that day. I 
cracked my knuckles and reclined in my desk and replied cooly, "Anarchy."
%
Linux Is your wife, I swear. I stride nude in your computer room ; yet you 
dont care. Transfixed with penguins on the screen. This Open Source makes me 
scream. Im tossing your computer in the trash. RMS is whose genitals you 
tongue lash. Enemy of Our Freedom you say? I dont care. You're just gay.
%
Yes I too fell victim to internet cruelty. Only in my case it was IRC abuse. 
To make a long story short I was willing to do anything to get +V and some 
'people' took advantage of that.
%
Roll Playing (RP) turns into real life tragedies and Real people get hurt or 
die. If you want to RP why not try to Roll Play real life situations such as 
how to pay the electric bill, house payment, and car payment, insurance and 
so on. Roll Play your parents working hard to give you a better education 
and life.
%
Yesterday after coming home from an extremely long, stressful day of work, I 
plopped down on the couch to relax for a bit. Laying in front of the TV is 
great, but an orgasm would really help me blow off some steam. Lucky for me, 
I had recently purchased a rabbit, so I retrieved that from my bedroom, 
returned to the couch, and brought up some gay porn on my laptop(side rant-- 
will someone please make porn tailored to women?) Just as I was beginning to 
get that tingling feeling that happens before I come, I heard the sound of 
someone trying to unlock the door to my apartment. WHATTHEFUCKISTHIS!? Shit! 
I am naked from the waist down holding a loud-ass vibrator standing in front 
of a laptop on which a man is moaning loudly and telling another man how he 
wants him to "put it in my ass!" SHIT! WHO THE FUCK IS COMING IN THE DOOR 
RIGHT NOW?

I completely panic. My shaking hands try desperately to turn the vibrator 
off, but in my excited state I completely forget how to do it..there are so 
many buttons!! why did I buy the fancy model??? I rip the batteries out of 
the stupid thing after fumbling with it and wasting precious seconds. I 
throw everything in the closet of my bedroom, close the door, and start to 
look for some pants. Then I remember that gay porn is still being played 
loudly on my couch. FUCK! FUCK! FUCK! I could hear the sound of the second 
lock unlocking. I dash back into the livingroom and try with my again 
shaking hands to at least turn the volume down. The door is opening at this 
point so I snatch the laptop and scurry half-nakedly back to my bedroom 
while depressing the volume button. Unfortuately, I hit the wrong side of 
the volume button and deafeningly loud moans are now emanating from my 
bedroom--gay men moans. Shit! People are in my living room now. I yell "ONE 
MOMENT!!!!" as loud as I can, trying to try to drown the sounds of Brad 
getting slammed in the ass. In a complete state of terror I make the unwise 
decision of throwing the laptop as far under my bed as I can, hoping that 
the boxspring and mattress would be enough to muffle the sound of my laptop 
at full volume. Sadly, it was not. People are milling about in the apartment 
now, so I grab some shorts from my bureau and emerge from my bedroom to 
greet the realtor and prospective new tenants in a dress shirt and shorts, 
flushed, and visibly shaken. I introduce myself over the sounds of an 
apparent orgy in my bedroom to a profusely apologizing realtor and a 
smirking couple. I summoned as much dignity as I could, smiled devilishly, 
and returned to the fake orgy in my bedroom as they showed themselves out.
%
I like to put excessively large ammounts of Vaseline on my cock and fuck 
empty toilet paper rolls. I think my parents are starting to notice that 
we're running out of Vaseline every 4 days or so.
%
One time I was performing anal sex on my best friends dog like I always did 
on the weekends, but this most recent time I must of thrusted too hard and I 
think I damaged the internals of the labrador. It then got a horrible hernia 
and soon died after my friend was attempting to coax it back to life. It 
felt great.
%
i just took a shit and my toilet didn't really flush, i got pretty 
frustrated and now im going to masturbate to internet porn galleries. Good 
day to you.
%
I bought this book to teach my child about her body, and I was excited about 
the opportunity to bond with her in this fashion. However, little did I know 
about all of the pictures of nude women in this book. The almost 'erotic' 
quality of these photos were not for children! Then when we got to the parts 
that involved naked men, I shut the book. She didn't need to see those 
pictures. Later, when she was asleep - I looked at the book alone and found 
unbelievable pictures of naked men and women performing the strangest acts 
on each other with pieces of fruit and a vacuum cleaner! What is my child 
going to learn from this? How to be a Kuma Sutra expert? No, thanks. She 
gets plenty of that from her father.
%
you walk in( the door will be open for you) you come to my bedrom where porn 
will be playing.......you begin to suck this big black dick...no damn small 
talk...just walk in and start sucking........i cum on your face and then you 
can leave or then when can have small talk.....be ready.....i dont want a 
lot of emails back and forth..just let me know if your ready for a 
address.....
%
gurl what design patterns u into?  i'm into:  bridge / command / interpreter 
/ prototype / flyweight / strategy / builder / abstract factory / proxy / 
facade / composite / chain of responsibility / decorator / adapter / factory 
method / observer / memento / template method / visitor / iterator / 
mediator / state / singleton
%
i keep baking fucking cakes.  this pink wig tart keeps me up nights and 
since i can't jack off any more since the operation i just keep fucking 
making cakes.  everyone at the office thinks that i'm some sort of faggot 
becuase i bring in cakes every day. they're all fat forty-five year old 
tits-sagging-to-the-floor soccer moms and if they knew that cake-baking was 
my masturbatory substitute they probably wouldn't even eat them.  probably 
also if they knew i pissed in the cake mix.
%
did you guys hear on the news? usually i don't watch the news, i just heard 
my friend's brother freaking out about it. it's on right now. North Korea 
shot a three missiles at Japan, but MISSED!! XD what would happen if they 
didn't miss?? one of them was aimed for America, too. It's on Fox News right 
now. THey're talking about shooting back at Korea. STUPID KOREA! dude, 
manhwa vs manga. XD awesome.
what if they actually didn't miss?? what would happen to everyone's favorite 
mangas and animes. i pray to God this isn't the end of humanity. Wait, i 
don't care if humanity ends. Humanity sucks. I just don't want JAPAN TO END! 
or the world. i haven't even had a chance to glomp Inuyasha. I DON'T HAVE 
PROBLEMS!!!! :ninja:
%
The first step is to heat 3 or 4 hot dogs to body temperature. Don't make 
them too hot or it won't work -- about 30 seconds will do. When they're 
done, stick all the hot dogs into a condom. Lube your penis and slide it 
into the middle of the hot dogs, so they're surrounding your penis. Then 
pump the entire package. And don't worry, the condom won't break.
%
Hey /b/, I have a very serious problem. I'm fucking crying because of how 
stupid I am.

Okay, so my girlfriend was supposed to come over to my house today because I 
was going to go take her to a movie. She lives about 20 minutes away, and 
the movie we were supposed to see started at 4:15, which was in about 40 
minutes. I figured "cool, I'll just play Pokemon while I wait".

So I'm playing Pokemon, and having a pretty damn good time. Anyway, she 
finally does show up, except she's crying as she walks into my room. Instead 
of doing the right thing by comforting her, I half-focus on my game and her. 
She starts telling me her cat died, and just as she was getting into it, I 
get into a random encounter in my game.

A shiny pidgey. Holy shit. (For those of you who don't know/care, shiny 
pokemon have less than a 1/1000 chance of appearing). I stare into my screen 
in amazement, yelling "holy shit, YES", interrupting her mid-story. She sobs 
more, and she starts to yell "You don't even fucking care! YOU JUST WANT TO 
PLAY YOUR FUCKING GAME!" I'm still looking at my screen, still focusing on 
catching my shiny pidgey, when she walks over, and tosses the game against 
the wall. I run over and pick up my DS hoping that nothing has changed on 
screen, and quickly noticed that she broke it. My system and my shiny 
pidgey, gone forever.

I start screaming every obsenity I know, and started flailing my arms 
around. I didn't know she was behind me, and appearantly I backhanded her in 
the face while I was being a dumbass and swinging my fists around. She yells 
out "FUCK YOU", and runs out of my house in tears.

What have I done? I've fucked up so badly, and I need to know how to 
approach her. I don't want a game of Pokemon to be respoinsible for ruining 
my best relationship ever. Help me /b/.
%
Over the years, the bathrooms at the Church have fallen into ill repair and 
we decided to completely replace them with more conveniently located 
bathrooms across the Church.  To make a use for our old bathrooms, I've 
decided to convert them into novel "Glory holes", where children may 
celebrate the Glory of God by speaking to a priest or other spiritual 
advisor through a hole in the wall.
%
Well, it finally happened. Women got as horny as us. All it took was five 
years of dry humping in high school, one or two boyfriends in college, a 
failed career, three giant kids, and a divorce. Now they?re so horny they?re 
willing to pay for it. Nice timing, God.
%
FUBU BIG CHAINZ DUBZ $BLING$ $BLING$ FUCK DA 5-0 BITCHES BLUNTS 40Z KICIKIN 
IT BLUNTED JARNELL BABY MAMMA CHILD SUPPORT CHICKEN AN WATERMELON KOOL AID 
DA RED KIND FOOD STAMPS WESTSIDE $$CASH MONIES$$ DRIVE BY RYDE OR DIE NIGGA 
RUFF RYDA 4 LYFE PHAT ICE PHAT BLUNT DENZEL WASHINGTON ROCAWEAR ICE BLING 
BLING 5-0 187 MURDA MURDA FOOD STAMPS BLUNTS PAPERZ BLAZED WELFARE CHITLINS 
GRITS KOOL AID HOLLA BACK FUCK DA POLICE ROLLIN IN DA BENZ-O
%
Sometims when I feel an unusually large bowel movement coming soon, I'll 
weigh myself before and after to determine the magnitude of the feces I'm 
shedding
%
I like fucking pregnant women. If they�re having a boy it ain�t fun, but if 
they have a girl then it�s two pussies for the price of one.
%
I have put you on a permanent ignore, public and private. I have found you 
disturbing, rude and generally not worth talking to. According to the 
channels you hang on, it strengtens the effect of wanting to put you on 
ignore because of my lack of interest in you as a person. This message is 
not meant to be rude to you, just to inform you that i won't see anything of 
what you type from now on.
%
one time i found a bum passed out. i thought it would be one hell of a gag 
to take him and put him in my roomates bed with him so i did. he woke up to 
the shock of a naked bum and couldnt stand the thought of what might have 
happend that night. he then killed himself before i could enjoy my little 
practical joke
%
She's so fucking cute and sweet. I'd treat her to some fancy restaurant, 
then take a long romantic walk with her, holding hands and talking about 
philosophy, art and dreams. Then I'd invite her to my home and ravage her 
hot ass for hours, and forcing my cock down her throat so she choked on both 
the throbbing cock and her own rectal juice. I'd then proceed to cum on her 
cute innocent face. Then, as the ultimate love gift, I'd carry her in my 
arms to the tub and let my piss wash away the semen and last dignity from 
her. I'd whisper "I love you" and give her a tender smile, and cut her 
throat from ear to ear with a knife. Covered in her own warm blood, she'd 
look straight into my very soul, forgiving, understanding. A bubble from 
blood and saliva would burst between her lips, then she'd die. After some 
additional lovemaking, I'd stuff her in a bin bag. Three Weeks later, some 
playing children will find her mutilated and desecrated body in the forest. 
They will be scarred for life.
%
I thought gmail was, like, gangsta mail. I signed up expecting to get g'd up 
with bitches, gangstas and guns but it's just an email service.
%
hey girl, what kind of religions you into, i\;m all about Judaism, 
Contemporary divisions, Rabbinic Judaism, Orthodox Judaism, Modern Orthodox 
Judaism, Haredi Judaism, Hassidic Judaism, Conservative Judaism (Masorti), 
Reform Judaism, Reconstructionist Judaism, Humanistic Judaism, Karaite 
Judaism, Historical groups, Hasmoneans, Essenes, Pharisees, Sadducees, 
Zealots, Sicarii, Ebionites, Elkasites, Nazarenes, Crypto-Jews, Marranos, 
Conversos, Christianity, Eastern Orthodoxy, Roman Catholicism, Oriental 
Orthodoxy, Monophysitism, Nestorianism, Arianists, Arian Catholicism, 
Unitarians, Protestantism, High Protestantism, Lutherans, Anglicans, 
Calvinist sects, Reformed, Presbyterian, Low Protestantism, Methodists, 
Baptists, Radical Low Protestantism, Anabaptists, Mennonites, Amish, 
Religious Society of Friends, Evangelicalism, Pentecostals, Apostolic 
Churches, Unitarians, Waldensians, Latter-day Saints, Church of Jesus Christ 
of Latter-day Saints, Community of Christ, Fundamentalist Church of Jesus 
Christ of Latter Day Saints, Seventh-day Adventist, Jehovah's Witnesses, 
Mama Tata, Messianic Judaism, Islam, Kharijites, Shiite, Alawites, Ismailis, 
Jafari, Zaiddiyah, Ghulat including, Alevi / Bektashi, Ahl-e Haqq, Yazidi, 
Druze, Ahmadi, Sunni, Berailvi, Deobandi, Hanafi, Hanbali, Maliki, 
Mu'tazili, Shafi'i, Wahhabi, Sufism, Naqshbandi, Bektashi, Chishti, Mevlevi, 
Tijani, Zikri, Mandaeanists, Hinduism, Agama Hindu Dharma, Shaivism, 
Shaktism, Smartism, Vaishnavism, Lingayatism, Gaudiya Vaishnavism, ISKCON 
(Hare Krishna), Sri Krishna Chaitanya Mission, Samkhya, Nyaya, Vaisheshika, 
Purva mimamsa, Vedanta (Uttar Mimamsa), Dvaita Vedanta, Advaita Vedanta, 
Integral Yoga, Yoga, Ashtanga Yoga, Hatha yoga, Siddha Yoga, Tantric Yoga, 
Ayyavazhi, Shramana Religions, Buddhism, Mahayana, Nikaya schools, 
Theravada, Vajrayana, Jainism, Digambara, Shvetambara, Panth Religions, 
Sikhism, Nirankari, Kabir Panth, Dadu Panth, Zoroastrianism, Magus, 
Gnosticism, Basilidians, Bogomils, Borborites, Cainites, Carpocratians, 
Cathars, Marcionism, Ophites, Valentinians, Hermeticism, Vaishnavism, 
African religions, Akamba mythology, Akan mythology, Ashanti mythology, 
Bushongo mythology, Bwiti, Dahomey mythology, Dinka mythology, Efik 
mythology, Egyptian mythology, Ibo mythology, Isoko mythology, Khoikhoi 
mythology, Lotuko mythology, Lugbara mythology, Pygmy mythology, Tumbuka 
mythology, Yoruba mythology, Zulu mythology, African diaspora religions, 
Kumina, Obeah, Santería (Lukumi), Vodou, Candomblé, Macumba, Umbanda and 
Quimbanda, Xango, Anglo-Saxon mythology, Basque mythology, Druidry (Celtic 
Religion), Finnish mythology, Germanic paganism, Norse mythology, Greek 
religion, Greek mythology, Mystery religions, Eleusinian Mysteries, 
Mithraism, Pythagoreanism, Roman religion, Roman mythology, Slavic 
mythology, Babylonian mythology, Chaldean mythology, Sumerian mythology, 
Chinese mythology, Shinto, Oomoto, Tengriism, Yezidis, Abenaki mythology, 
Aztec mythology, Blackfoot mythology, Chippewa mythology, Creek mythology, 
Crow mythology, Guarani mythology, Haida mythology, Ho-Chunk mythology, 
Huron mythology, Inuit mythology, Iroquois mythology, Kwakiutl mythology, 
Lakota mythology, Lenape mythology, Navaho mythology, Nootka mythology, 
Pawnee mythology, Salish mythology, Selk'nam religion, Seneca mythology, 
Tsimshian mythology, Ute mythology, Zuni mythology, Australian Aboriginal 
mythology, Balinese mythology, Maori mythology, Modekngei (Republic of 
Palau), Nauruan indigenous religion, Polynesian mythology, Church of All 
Worlds, Dievturiba, Germanic neopaganism, Heathenry, Odinism, Theodism, 
Wotanism, Judeo-Paganism, Maausk, Neo-druidism, Summum, Taarausk, Wicca, 
Alexandrian Wicca, Dianic Wicca (Feminist Wicca), Gardnerian Wicca, Faery 
Wicca, Feri Tradition, Carvaka, Confucianism, Deism, Ethical Culture, 
Fellowship of Reason, Spiritual Humanism, Mohism, Taoism, Dragon Rouge, 
Satanism, LaVeyan Satanism, Church of Satan, Order of Nine Angles, 
Setianism, Temple of Set, The Storm, Quimbanda, Luciferianism, Syncretic 
religions, Cao Dai, Falun Dafa, Huna, Konkokyo, Manichaeism, Unitarian 
Universalism, Universal Life Church, Tenrikyo, Theosophy, Seicho-No-Ie, 
Burkhanism, Cargo cults, Ghost Dance, Native American Church, Rastafari 
movement, Umbanda, Candomble, Pastafarianism, Church of Emacs, Polytheism, 
Mysticism, Atheism,  you know
%
The relationship between gamer and game is much unlike the relationship 
between needle and record-groove (that is to say, the needle loves the 
record groove and vice-versa, so says Tamio Okuda); the game has to love the 
player even when the player hates the game.
%
im from louisiana.drank killed my boyfriend sippin isnt for everyone so be 
careful
%
LAWL I ONCE HEARD AN AOL COMMERCIAL THAT SAID "AOL IS GOOD" AND I LAUGHED MY 
ASS OFF AND I LITERALLY PISSED AND SHAT MY PANTS SIMULTANEOUSLY AND THEN I 
THREW UP IN MY MOUTH A LITTLE AND IT WAS THE FUNNIEST THING I HAVE EVER 
HEARD OH MY GOD THAT WAS FUNNY
%
one time i invited two of my friends (well, my only two friends) over for 
dinner at my apartment. i was in a bad mood that day and while they were in 
the living room playing sword quest 4, i masturbated into the milk in the 
measuring cup before making the mashed potatoes. all three of us enjoyed the 
meal, myself doubly so... in part because i secretly knew my friends now 
have my seed in them, and also in part because i ate the mashed potatoes too 
and the thought of consuming my own seed makes me want to masturbate into 
more food. i fear i am in a vicious cycle at this point. someone help me? 
please?
%
DEAR ABBY: I recently met a gorgeous woman I'll call "Giselle." After we had 
dated for a couple of months and became physically involved, she told me she 
had had gender reassignment surgery and used to be a man! I was, to say the 
least, shocked and deeply disturbed. I did not punch out Giselle as I would 
have liked to -- which brings me to my question. What is the etiquette 
regarding physically confronting someone like that? Is it the same as 
hitting a girl? We're roughly the same size. -- DISTRESSED IN VIRGINIA
%
I have neither the time nor the inclination to explain myself to a man who 
rises and sleeps under the blanket of the very freedom I provide, then 
questions the manner in which I provide it.
%
Women make up 51 percent of the population, and because of this, Linux 
should be banned in government. Operating Systems like Linux discriminate 
against women because of a built in difficulty  compared with Windows and 
Apple's OS X.

Women pay taxes, and therefore shouldn't be discriminated against in getting 
employment with government agencies. If these agencies had used Windows or 
OS X, more women would be able to persue dreams of a full time job in 
government. Linux is by its nature a man's domain. Women are designed to use 
social interaction and emotions to deal with complex tasks, things the 
command line are ill suited.

OS X, and Windows have friendly and female-intuitive designs that take into 
account a woman's understanding of objects, ie. folders, desktops, Clippy, 
the XP search dog.  These help women operate the computer by giving her a 
relationship with these icons, and helpful animated pets. It makes a woman 
feel at home with her computer by allowing her to relate to it.

Linux, on the other hand is designed for command line and programming. Sure, 
it may have a fugly GUI to hide its true being, but to get any serious work 
done you must know a bunch of arcane commands with hundreds of options that 
change with every command. Something like this: chmod a+rwx. Only engineers 
can understand this. And most engineers are still men. This puts the female 
population at a great disadvantage when applying for work. Men know this, 
and that's why they deliberately try to install linux in the workplace.

How would women's groups react when they read the studies that are being 
commissioned by industry on this very subject? Surely, women, when they 
learn of this, will outvote men and ban linux from the government.
%
I work for a shipping company that deals specifically with the delivery of 
animals, mostly lab animals but we get some zoo business. Occasionaly some 
of these animals die during shipping, and we do some paperwork and have them 
creamated and no one ever misses them. Once I stole a monkey and marked it 
as dead and burned on the paperwork. I took it because it was a very large 
monkey and I thought it might make a cool pet. After I got tired of taking 
care of a huge monkey I shaved it and took it to a prostitute. I told her it 
was my deformed younger brother and that I would pay her extra to take his 
virginity. It cost me a lot of money but I got her to do it and let me 
watch. She was trying to pretend she liked it but she looked sick and 
Manny(the monkey) was confused at first but he really started to get into 
it. The whole experience makes me sick when I think about it. The fact that 
I watched and that I did that to that girl, I wonder if she beleived it was 
really my brother or if she just needed more crack. But also when I think 
about it I laugh so fucking hard. I shot the monkey and left it in the woods 
afterword, I guess Manny died happy.
%
THERE IS NO JUSTIFICAITON FOR ATTACKING SOMEONE. NOT EVEN IF YOU'RE USING A 
COMPUTER TO DO IT. BECAUSE YOU'RE STLL HUMAN, AND THE PERSON YOU'RE 
ATTACKING IS STILL HUMAN, AND YOU BOTH STILL HAVE MINDS AND FEELINGS.
%
PS3 is shaping out to be a true status symbol for those who are very well 
off. I earn a salary reaching 75k per year and that's without my annual 
bonus.

I'll be getting three PS3 systems (two for back up purposes). The games are 
rumoured to be locked $89 and upwards for each copy. The software price is 
expected to never go down over time ending the practice of consumers waiting 
for prices to fall. Each system can not play used, rented, or borrowed games.

Having said that, this is a dream come true. This is a true fan system for 
hardcore gamers only. No longer will I have to suffer being in the company 
of pretenders. Finally we'll have a system to be truly proud to say we own. 
Just like the Neo Geo, except successful.

For those poor people who cannot afford the ride, Microsoft and Nintendo 
will accomodate your needs.

For the rest of us that understand that you get what you pay for... I reckon 
we're going to be in for a ride of our life.

Count on it.
%
Yes, Firefox is for people who like one tab to use 75 MB of memory, since 
some people like it when apps take advantage of memory installed in their 
system instead of having 800 MB sitting there doing dick-all.
%
Look at that little string of text between my screenname and personal pic. 
See that? That's living proof that I donated some of my own money to help 
get these boards up. Because I love these boards. And you know what you just 
did? You just wasted a handful of bandwith and database storage space to 
post that uncannily awful waste of an attempt at an insult. In a sense, you 
just wasted a fraction of my money. See that it
%
When my parents were tight on cash, I attempted to save money on our water 
bill by pissing in the sink, and shitting on paper plates and dumping them 
in the field behind our house.
%
My nephew used to work as a waiter in a seafood restaurant. And we all know 
how niggers love "skrimps".....well, there was a huge nigger family one day 
and they shared meals (typical) as well as ordering water as their drinks. 
When they finally finished their meals, my nephew walked over to the huge 
mess on the table. They stiffed him on the tip , and lo and behold EMPTY 
KOOL-AID PACKETS !!!!! The niggers made their own Kool-Aid with the water 
and sugar on the table. I couldn't believe my ears...but then 
again............TNB
%
Well, $600 will buy you a fair amount of fish and will feed a bunch of 
people once. However, you could also buy a PS3 and SimFishing then invite 
all the starving over to have a competitive game and, in the process, teach 
them how to fish which is infinitely more valuable.
%
HI! ANY 1 HERE WAN 2 CHAT??I AM 13/F/BRASIL KEKEKEJUZ LOOKIN FOR SUM1 2 TALK 
2.NO OLD GUYSDATS GROSS!!!GOT 2 SEND PIX 2 GET PIXNO PRIVATESTHATS GROSS 
TOO!PLZ /MSG ME 4 CHATim actually a 52 year old balding port-a-let cleaner
%
Eat shit, you greasy pacifist hippies. I am sick to death of the ludicrous 
anti-American ravings of you pissed-off geeks. Do you really believe the 
rest of us don't see right through your mental pathology? Your entire 
political philosophy boils down to this: "The cool kids picked on me in high 
school, and I can't get over it. I hate America"
%
Why cant the indians be like the blacks, coming to america in white-owned 
ships to do our work because we're too lazy to do it. Those cheap ass 
indians hoofed it across some hippy nature bridge
%
I see what you are trying to do and I advise you to stop at once.  You may 
think your Mr. Slick and that you have some kind of advantage over me in 
this situation but you couldn't be further from the truth. Just because you 
got a higher score on the SAT does not mean that you are intellectually 
superior to me. I have 3 degrees in physics and biomedical engineering and I 
just can�t believe that you try and pull something like this over on me. Now 
stop acting like you�re the king shit and remove that cock from my ass 
immediately. It�s my turn.
%
I like to give my self paper cuts on the head of my cock. Then have 
ferocious sex to feel the burn. Think about your breathing
%
I get off on sticking my dick into house hold appliances. one day i put it 
in a blender, i was really drunk. When i woke up in the hospital my forskin 
was gone and they had to put in 50+ stiches. Needless to say, i enjoyed it 
thoroughly.
%
Why is the idea of laying in the bathtub for an entire day, naked, pissing 
and shitting and ejaculating, and being just filthy, seem so appealing?
%
Oh, Brad Pitt? I don't see what's so good about this old dude. He doesn't 
have half the charm of what I got. Lol, I know for sure women are attracted 
to him because of his material wealth. Look at all these hideous, butt-ugly 
rich motha f*ckas and how many women go chasing after them.

I'm just tired of all the shallow people, I have never met somebody as deep 
as me. All my friends and girls I've been with never think like I do. Well, 
baby, I got a spiritual, physical, and mental treasure just waiting to be 
discovered right here. I'm like a comet in the sky, passing you by, 
vanishing like the twilight at night. You've got to hop on the train before 
it's too late, it's like the chance of a lifetime. .

By the way, to whatever asked me why I was on this forum... Let me tell you 
this, man. I've come here to learn more about astrophysics not ASStroholes. 
Do you feel me? There's no fear as long as your vision is crystal-clear.
%
Also, what�s with posting your own blog to digg? �Hey, I shamlessly 
advertise my own ridiculous existance on the intarweb! Please blogroll me 
and dl my podcast!�
%
why dont animated gifs come with sound :(
%
i brush my teeth standing up. i also like to pee or shit standing up while 
doing so. sometimes i spit backwash on my penis and let it dry. it looks 
like that one time i slept over my uncle's house. oh btw i live in the 
freshman dorms. room 310. stop by and see me sometime.
%
I am officer David Green, badge no. 1039283 you are in violation of 
Intellectual Property and High Technology Technical Amendments Act of 2002, 
Division C, Title III, Subtitle B of the 21st Century Department of Justice 
Appropriations Authorization. I must ask that you cease and desist 
immediately if not we will take action and contact the server that this site 
is on and force them to give us your ip, and we will then contact your ISP 
which will lead us to you. This is a very real and very serious threat. 
Remove the link immediately. This is your one and only warning.
%
Poop is mostly shades of brown or yellow, but other colors can arise under 
certain circumstances. For example, someone with a bleeding ulcer might have 
tarry black poop from the presence of partially digested blood. Bleeding in 
the intestine, from an anal fissure or split, for example, can stain the 
poop red. Bloody poop can also be a sign of colon cancer, so you should get 
it checked out by a doctor if you see blood in your stool. Some illnesses in 
babies gives them green or even blue-green poop. But another source of blue 
poop in children is more innocent: it can come from eating a concentrated 
source of blue food coloring such as ice cream. Intense red food coloring 
can produce bright red poop. Sometimes brightly colored foods pass through 
the gut almost unchanged, and the turd may be speckled with bright red 
fragments such as pimentos, or bright yellow kernels of corn.
%
I converted so easily. Just this morning, my nostrils were sneering at a 
murky glass of bladder-beverage that I poured out of my penis. "Do it," I 
scolded myself. "Transcend the stench; it's cheaper than aspirin." Boldly, I 
chugged three gulps of my piddle -- yeech! My esophagus bucked 
disagreeably... My pee is too hot and salty! It's icky!
%
I'm extremely liberal, yet I don't mind the government getting involved in 
our personal lives in order to keep us safe from terrorism. I'm also ok with 
racial profiling.
%
You obviously know little about what's being talked about. We'll see, and 
I'll quote you later when you're proven wrong.
%
I eat exclusively from the following list of 12 foods: Almonds/nuts, 
Berries, Oats/whole grain cereal, vegetables (especially green leafy), Beans 
and Legumes, Nonfat Dairy products, Eggs, Lean Meats (especially turkey), 
peanut butter, olive oil, Whey protein, and Whole Grain Bread (which falls 
under oats/cereals). My colon is immaculate, and my bowel movements are 
enormous, dense, and dry as a biscuit.
%
I've been using IRC for years now, I love it, it is one of the best chat 
programs on the internet
%
Sex is a beautiful thing and it should not be restricted to certain age 
limits. It should be enjoyed by old people right down to toddlers. And why 
not? Yeah, I hear the jokes about Catholic priests. But people should just 
shut the fuck up and let others explore the deep, mysterious cave that is 
SEX. I mean, don't knock it until you try it. Don't say it's bad until 
you've had your stiff PENIS shoved so far up a childs tight little pussy, 
you cant say shit.
%
Someone from the ip address "66.103.132.86" has been performing port scans 
and other malicious things on my computer such as DoS attempts and intrusion 
attempts wich in turn has made my internet speed drop because this person is 
doing it so much and it is just destroying my bandwidth. Please tell them to 
stop. No, actually, force them to stop.
This e-mail address showed up when I back traced the IP address and 
preformed a whois search on it. If you are not responsible for the actions 
of this person, please ignore this e-mail. If nothing is done about it, keep 
this in mind: I'm a 15 year old hacker with alot of time on my hands. 
Therefore, if you don't stop this person, I will. I just thaught I would go 
about it the right way before I did anything.
%
Yo what kinda chili u into? I'm all about the Green Serrano, Red Serrano, 
Cayenne, Datil, Dried Red Serrano, Ancho, Francisca, Scotch Bonnet, New 
Mexican, Banana, Savinas, Pimento, BrilliantStars, Poblano, Red Thai, Hot 
Wax, Dried New Mexican, Jalepeno, Dearbol, Tepin, Habanero, Aji-Amarillo, 
Bell, Dundicut, Tequilla, Tien-Tsin, Hungarian, Tabasco, Piquin chillis and 
don't forget the Crazy Chilli too!
%
My d20 is carved out of a solid piece of pure onyx with ruby inlet numbers.  
It was valued at over $2000.  It has an operating system (made by Microsoft) 
that automatically seeks out any other d20s on the table and crushes them.  
Anything larger than a d20, laser shoot out and destroy that useless piece 
of plastic.  It can track a pewter figure from 1.3 miles away.  DMs fear my 
d20 because it allows me to cheat without much effort.  I simply say "roll a 
20" and it does.  All other d20s are obsolete.
%
when you make love to a pregnant lady, you get a hand job from her baby, 
cold rubbin' it makin' it crazy, till I'm leakin' out all my man gravy ohh 
yeah
%
Y0 what kind of crimes u into? im all about a plan to kidnap a person / rape 
them / torture them / kill them / cutting off da head / drain da body of 
blood / rape da corpse / eat da corpse / dispose of da organs and bones / 
finish ff7
%
The fish I buy are only the finest sushi-grade specimens raised in the 
pristine nurseries of Fuji-ura; a lake of pure rainwater which has lay 
hidden for millenia in a lush, sun-drenched crater atop Mt. Fuji. Go back to 
your newspaper-wrapped already dead for 12 hours vulcanized supermarket 
fish. I wouldn't be caught dead with that filth in my immaculate kitchen.
%
Thanks for noticing, for getting an on topic first post I was bitch slapped 
into karma oblivion. At least two people with mod points went back and 
knocked down all my previous posts to -1 with trolls, off topics and 
redundants. I was banned form posting for twenty-four hours and I'm not 
allowed to meta-moderate anymore:( There some mean people on /.
%
Would you like my resume? I write code in everything from mainframe COBOL on 
OS/360-OS/390 systems (OS/VS COBOL, MVS COBOL, etc) to C/C++ and Java. I 
think I know what the hell I'm talking about, nerd. Have you visited my 
corporation's website? Feel free to read the article about me. It's on the 
front page. Do you have some more inane nerd blather, or is it time for some 
Totinos? I thought so.
%
I'm a truck driver and would love to meet other transgendered truckers and 
would love to meet any Lady truckers that enjoy being with a transvestites.
%
every guy i hook up with ends up getting AIDS. i tested positive for HIV, so 
i think it was me. sorry guys, but maybe you should think before blaming it 
all on me. you could have at least used those STD testers on me first, so 
dont act like its all my fault. but anyways, sorry.
%
Yes, perhaps embracing your status as a social misfit will allow you to 
appear "edgy" and "cool" as you're going through the pile of dirty clothes 
on your floor desparately looking for anything that isn't encrusted with 
either microwave burrito glop or your rancid dried semen
%
I played diablo for like 12 hours straight on my couch, slowly sliding into 
a position that was almost parallel with the floor. At some point I realized 
my head was the only part of me still on the couch, and I decided that was a 
retarded way to sit, but by that point I couldn't move. I fell over and 
dropped my laptop. My back was spasming so bad I almost pissed myself. In a 
vain attempt to alleviate the pain I crawled into the shower and turned on 
blasting hot water. That was no help, but it did soak my tshirt. After 15 
minutes of crying on the bathroom floor wearing a soaked and freezing tshirt 
I found a pair of scissors in a droor and cut the shirt off. I passed out 
from pain in a bunch of dirty towels and q-tips. Never felt anything like 
that, not before and not after. Awful.
%
Hey girl, what kind of irc chatters r u into? I'm into pimply overbearing 
misfits, power-mad failures with an axe to grind, faceless idlers, 'Zany' 
wannabees, creepy pedophiles, dickless unix freaks, shit-eating mac users, 
clueless windoze faggots, 'professional' web designers, legally blind php 
coders with herpes, geriatric lechers on social security, gun nuts on 
federal disability, and ambitionless retards working the night shift.
%
My name is Paul. If my name were to be used in a function it would used as 
such. Paul > You. I'm an investment banker. I am scared of daylight, so I 
stay indoors until 2am. I order in all my meals not because I like eating 
take out on a daily basis, but because I am so excited to get back to work 
and look at my multiple lcd screens with spreadsheets open all over the 
place. Casual friday means I can roll up my sleeves, but I don't because I 
don't want to wrinkle my custom tailored shirts I buy from Bergdorf Goodman. 
I like to get my shoes shined multiple times a week, not because I want them 
to look clean and shiny, but because everyone who is line can admire my 
alligator gucci loafers that cost more than their LCD TV. I like business 
cards, so I can hand you one and you can hand me one, if yours looks cooler 
you better be careful or you will end up like Paul Allen on American Psycho, 
but that probobly wouldn't happen because yours says marketing 
representative, or senior sales associate and mine says investment banker. I 
sometimes wish I had a life outside of the fast lane, but who the hell wants 
to drive slow? If our lives were cars I'd be the 911 turbo and you'd be the 
Taurus or the Civic SI (for those of you gunners). I like to look at people 
and smile and nod, not because I'm a nice or friendly guy, but because they 
are just another person that I passed in the race called life. I flaunt 
money because, that's the only thing I have that you don't have. You 
probobly have free time, a life, hobbies etc. I have money. Money can't buy 
happiness, but it can buy whatever the Fuck I want.
%
A buddy of mine actually had both of his computers confiscated by the FBI. 
Apparently someone had spoofed his IP (or maybe hacked into his wirless) and 
made a whole bunch of fraudulent purchases. About 8 months later, the FBI 
decided to give him his computers back? with all his fursona's files 
mysteriously deleted. This is an outrage.
%
I was stuck in traffic one day and just kinda thought it would be funny to 
masturbate. It was sunny and clear out, so I was worried one of the other 
drivers would see me, but my jeep is pretty high off the ground, so I think 
no one noticed. I busted a nut and aimed it down, ruining my tweety bird 
floor mat. I felt kinda stupid after and my mom kept silent the rest of the 
drive home. It was awkward and I regret it.
%
I wish that i was Vegeta from dragonball z. Once while stoned i tried to do 
a kamehameha and im sure my hands got hot. Im planning on picking a fight 
and while the adrenaline is flowing, im going to turn super saiyan and 
punish my opposition. Goku is stronger but Vegeta is cooler, im 38 with two 
kids.... my kids are weaklings, my wife left me and i like the way womans 
shoes make my calves look.
%
earlier tonight i went into chat and no one spoke to me. i don't know what 
i've done to anyone...but i guess whatever it is..it was enough for people 
to stop talking to me. some may think 'well, it's just chat...right?'. well 
unfortunately, chat is all i have. the only friends i have are online.
%
Three guesses as to who was asked to leave the Starbucks; oh, and told "not 
to come back" with my "hateful rhetoric". True enough, I just said I hate 
niggers; but the problem is, everything I said WAS TRUE!
%
I am the world's foremost expert on sticking people's treasured items into 
my urethra.  I have 'gauged' it to the point where I can almost wedge a 
piece of celery in there, though no one treasures celery.  If anyone can 
beat this, I'd like to suck their dick!
%
i like my urls like i like my women...dirty and mangled
%
The message is pretty clear. Whenever two sheep herding white guys get 
together, they allow their animal instincts to take over and they buttfuck 
each other and fall in love. Then, they live a lie and sneak out repeatedly 
to hook up and fuck each other's asses until they bleed. Then the wives find 
out and divorce them. Or, the dumb ass bimbos dont know that their husbands 
try on their clothers while they are away. The cinetography was beautiful 
the soundtrack, etc. But the message (written by a chink) is still one of 
deception, love, and faggotry. Sorry.
%
There is no doubt that white boys do play video games well. Having been run 
off the football field, basketball court, and track by more athletic black 
boys, white boys retreat to their computers and video games. Unfortunately, 
this only makes their unathletic bodies weaker, thus seriously harming their 
concept of masculinity and making them social outcasts with females.
%
Did you know?  The origins of the tooth fairy date back to the early 1800s.  
According to linguist and accredited historian Michael Quinion, the "Toothe 
Faerie" was first documented in 1825, when dental hygiene was beginning to 
gain momentum due to studious work of the "father of dental hygiene", Alfred 
C. Fones.  Fones solicited young boys for -- at first innocent, but 
increasingly violent -- oral sodomy in exchange for their freshly uprooted 
teeth, in some cases having been recorded as persuading youths to perform 
these acts of love shortly after the dental work.  Over the course of his 
career, unbeknownst to local authorities, Fones began to encourage large 
amounts of subsequent generations of virginial youths to procure payment in 
addition to these sexual favors in order to retrieve their dislodged teeth, 
thereby setting an example for burgeoning homosexual men of all ages to 
come.  Due to the local vernacular of the time, the good doctor's casual 
title "Magister Dentali" was eventually replaced with our more modern 
colloquialism once enough of the population had become familiar with the 
tale.
%
Did You Know? After maintaining a vow of silence for almost 7 years, Red Hat 
Linux founder Marc Ewing now freely admits that he named Red Hat Linux after 
Limp Bizkit frontman Fred Durst's trademark red New York Yankees baseball 
cap.
Durst and Ewing met in Ewing's hometown of Raleigh, North Carolina (Durst 
was raised in Gastonia, NC), where they became fast friends, sharing the 
same passion for low-level system programming.
Durst collaborated with Ewing on the first preview beta of Red Hat Linux 
before the demands of his rocketing stardom forced him to abandon his hobby 
and tour with his band.
Durst's position on the development team was filled by Damien Neil, and not 
many know of his contribution to the popular Linux distribution; however, a 
google search through the source code on Redhat.com 
(http://www.google.com/search?q=wfd+site:redhat.com) reveals many snippets 
of code authored by 'wfd', Durst's initials (William Frederick Durst).
Durst asked Ewing to keep his 'geeky' roots a secret as it would not lend 
itself to Durst's bad boy image, but as Ewing points out, it was "only a 
matter of time" before the origins of his NASDAQ-100 company's name were 
uncovered.
%
If you listen to all of the cds that ICP has put out, and really put some 
thought into what ICP is saying on them, there are some very strong 
references to all things biblical. I mean you're really gonna hafta look 
past all of the "chicken huntin" and things like that. It's not really like 
the D.C. is its OWN religion, its more like it follows Christianity very 
heavily. As far as the shangri-la (heaven), The Great Milenko (the devil), 
and things of that nature, all stand for different aspects of the Bible. I 
dunno, im kinda babbling here, so perhaps if i refer you to a web page 
you'll understand more.
%
At the age of about 5, in the bath, I was playing with my lego men, jungle 
animals, duplo etc. I needed to pass wind, so i did (with a little effort) 
satisfied, I returned to playing with my toys. I reached for the black 
gorilla king of the jungle and brought it up to my face, only to find it was 
my shit.
%
ok, I know i'm married with kids but there is this chick at work who totally 
flirts with me all the time. She's not into me or anything but she totally 
flirts with me. I don't exactly not flirt back, and I
fantasize about her all the time. nothing will happen between us because i'm 
such a pussy. oh yah, shes 6 years old
%
One time I offered my diabetic friend some reeses pieces, which he refused, 
saying he would get sick. I assured him that he would be fine and he gobbled 
up a whole handful without getting sick at all. The next day he asked me 
where he could get more of this special treat, and I told him that he had 
not eaten candy at all, but rather "feces pieces".
%
Heh. Don't you guys know that arguing on the internet is like participating 
in the special olympics? Even if you win, you're still retarded. In fact, 
there's an image out there on this interweb of ours that conveys this 
message perfectly...
%
have you ever been squatting down and just, you know, tucked in your neck, 
you know? and closed your eyes? and then put your forehead down on the 
ground, you know? and then you know, leaned forward a little bit, you know, 
shifted your weight? and then just lifted your posterior up in the air, 
pushed hard, you know, and watched yourself take a gigantic shit on another 
man's chest? man, there should really be a name for doing this.
%
pick on me thru a monitor, i doubt it would happen in rl
%
I know Africa has its own internet connection.. buncha niggers with mailbags 
run around for email.. Tech Support is like shakalakuzulu kuntakente cheifs 
that speek jigabooese
%
Since you like looking at women, I think it's about time you get your cherry 
busted. Yes, you need to get laid. Nursing homes are full of old hotties 
that would be willing to give their all to please. Since they are mostly in 
wheelchairs, they don't even have to kneel. Think about it, dude! In fact, 
think about those wrinkled, diapered old women every time you wank. Think, 
visualize, wrinkled dry pussy, depends, gums only, shit breath, saggy 
tits........
%
This is why it is so tough for Microsoft to break into the Japanese market. 
They have a different mentality. THe Japanese have a more demure way of 
doing business. They always strive for honor in all that they do.
%
Is it politically correct on this list to trash Microsoft and show destain 
for money? If so, I must protest. Microsoft is the best thing that ever 
happened to computer users, ever. It will never, never be replaced by user 
unfriendly software like linux or TeX. Never.
%
no sooner had the last inch of snow fallen in New York when the blogosphere 
came alive with myriad sepia filtered grainy photos of the wintry landscape, 
long, disjointed poetry about the ruthlessness of mother nature, and 
helpless nerds half-joking pleas for rescue
%
girl i must be dick cheney because i want to fire my weapon into your back
%
oh well, I'm smarter than almost everyone I ever met in my whole fucking 
life, so I'm not worried about my filthy habits heh
%
Second-best sex? Tell that to a Linux programmer who's got a slice of pizza 
in one hand, his hideously empurpled member in the other and a Natalie 
Portman tribute website firmly plastered across Firefox...
%
Chinese/Korean/Japanese don't look alike. If you think they are alike then I 
guess all white people are the same too. You dumb crackers.
%
I had a dream (nightmare really) last night that the coffee industry in 
South America was hit by a blight that made all coffee toxic which caused 
death for anyone who drank a cup.  The entire Web 2.0 startup scene crashed 
and the bubble popped. Flock went under and Yahoo stopped buying everyone. 
Not fun.
%
Ookles? I don't know but it's Web 2.0 compliant and has a nice prototype.js 
transition when you register for their private beta.
%
By the way, I've seen you play DDR in real life. You didnt know I was a 
goon, but I was there. Watching. Waiting. Planing.
%
I like to take a toothbrush and stick it in my anus. I get into the shower 
and sit up straight so that it gets as deep as possible. This feels great 
and there is no pain. Then you can jack off and move up and down just like 
you?re riding a real cock. It feels GREAT!
%
Fuck all authority figures of any type. Now instead of hearing the song and 
letting it pass by you I think we should all rise against and do somin about 
authority..... and they can feel the rage of OUR generation!!!!!!!!!!!!!
%
lol no 1 has 1 that they will give out to even members here i doubt ud get 1 
i cant find 1 and iv been looking over a month every hour .. u gota look 
maby ull find 1 or learn to make i tried and failed so i dono wht to say but 
u wont get 1 im sure.. thats just hwo it is i wish i had 1 my self
%
ILYAZAYUZIN.......HAHAHAHA...FIRST OFF TELL ME WHERE IV'E BEEN PRAISING 
VANILLA ICE. SECONDLY STOP ACTING LIKE A RETARD INTERNET THUG AND GET OFF 2 
PAC'S NUTSACK YOU 15 YEAR OLD WANNABE WANKSTA.GO LISTEN TO YOUR BONE THUGS 
AND HARMONY WHILE I STICK SOME 7L AND ESOTERIC ON YOU CHUMP!!!!!PEACE TO THE 
REAL UNDERGROUND HEADS!
%
I'm usually at the club on Sunday night, and they will have Adult Swim 
playing on the TVs behind the bar. Having Boo-Boo Runs Wild on at the exact 
time every Sunday gives me a good visual clue that the night is starting to 
run its course, and that I should make it my last round so that I'll be 
sober enough to drive. (So I can get home and watch the night's lineup as I 
taped it.)
%
In stark terms, Wikipedia is one of the single most important undertakings 
in human history. If we do our job, future generations will look upon 
Wikipedia as the cornerstone of the information revolution. If we don't, the 
world will lose a tremendous resource. This is why we need to keep the jews 
out.
%
You're a huge assblaster. You're like one huge slimey smelly rocket, flying 
through space at speeds unknown to man, and shooting off fumes which 
slightly resemble broccoli and rotted meat. But it's ok, because your 
flaccid asscheeks, worn from shits that rival the titantic herself, will 
make up for the kinetic energy lost from your inefficient use of the natural 
gas the infinitely spews from your cum-filled stomach.
%
Meth is the shortest word in the English language one can lisp while drunk 
and underage at a gay bar. It can therefore be no surprise that homosexual 
males have congregated around the substance since its inception. For every 
meth mouth, there is an equal and opposite meth dick.
%
Found you folks by accident...decided that underground should actually mean 
underground...although pop-up occur from time-to-time. The revolution will 
be VOIPed AND blogged.
%
I hope I never have to hear any of these cosplay slangs ever at a 
convention.  Anime Iowa is a place to have fun and to enjoy being surrounded 
by fellow fans.  Not a place to treat other fans in a superior fashion.  
*Most of us experienced or are experiencing this in highschool*
%
And yeah, I didn't want to get into this, either. It's just that I'm fucking 
sick to death of furs bagging on other furs just to blow up their own egos. 
This is what the real problem is in the fandom that "gives us a bad rep". 
While we're all squabbling over stupid lil mediocre differences like 
children on a playground, the rest of the world thinks we're all a bunch of 
skunk fuckers anyways. It's all very inane.
%
I hear you brought a prepubescent kid to a "FurBQ" event a while back. I 
wonder that that kid's guardians would think if they knew the things you 
jerked off over, or that you get an erection mentally undressing kids you 
see on the street. I wonder what people at your job would think, or what 
your parents would think. Maybe you should wonder those things too.
%
I disagree with the software "Fruity Loops" on the grounds that only 50% or 
less of the musicians that use this software are actually homosexual. I 
think they need to either change the name of the software, or have some kind 
of provision in the EULA that you can only use it if you're gay. Stop faking 
the funk already.
%
I used to watch Dragon Ball Z, and it was cool, and Transformers is awesome 
too. But one thing I never got about anime is why do they have big eyes? 
It's from Japan, that should mean small eyes.
%
I've had sex with a dinosaur, horse, sheep and cow in my dreams
%
Anyone who has taken Linguistics 101 and actually paid attention would be 
well aware that English uses no subjunctive tense.  For you see, gerunds and 
participles aren't tenses, my friend.  As much as I enjoy your witticisms 
and laughably incorrect "facts", I'd prefer that you research it.
%
Hey gurl what u into? I'm all about the blunt force injuries with no blood 
and resulting in blood on body and clothing, blood splattering from wounds, 
death with eyes open, cutting injuries with no blood, screaming in pain and 
resulting in blood on body, severed limbs, blood spurting from wounds, 
entrails seen, and death.
%
I was watching myself everynight. Eventually I found myself very attractive, 
and I finally realized my ability to make her love me. So I raped her. But I 
later found she was a slut since she didn't want to marry me. So, I raped 
her again. I think she loves me now.
%
What kind of anime u into? I'm all about the Inu yasha, saiyuki, get 
backers, spiral, furuba, you're under arrest, soul hunter (houshin engi), 
tokyo underground, samurai deeper kyo, flame of recca, mirage of blaze, gate 
keepers, real bout high school, street figter, fatal fury, dnAngel, 
gravitation, yami no matsuei, theif and detective, prince of tennis, 
juvenile orion, aporipha0, orphen, angelic layer, shama pita ten, kaiken 
phrase, FAKE, himiko den, kiddy grade, lost universe, slayers, burn up W, 
for you in full blossoms, fushigi yuugi, gundam wing, yuyu hokushou, hunter 
x hunter, sakura wars, cardcaptor sakura, tokyo babylon, magic knights 
rayearth, scrapped princess, infinite ryvius, witch hunter robin, mahou 
senshi riui, Furi Kuri, gundam seed, vampire princess miyu, king of bandits 
jing, rave, E's Ot Gojyo (saiyuki), Sanada Yukimura (samuria deeper kyo), 
Hiroshi (gravitation), Inu yasha, Ban (get backers), Akabane (get backers), 
Heartia (orphen), Iori (King of Fighters), Taikoubo (houshin engi), Kyou 
(furuba), Kazuma (scryed), Larva (vampire princess miyu), Shigure (furuba), 
Ken (weiss kreuz), Dark (dnAngel), Kurama (yuyu hakushou), Akabane (get 
backers), Touga (utena), Shido (nightwalker), Ryuhou Quatre (gundam wing), 
Amon (witch hunter robin), Michael (witch hunter robin), Riui (mahou senshi 
riui), Shido (nightwalker), Jing (king of bandits jing), Yuuki (e's 
otherwise", Kai (e's otherwise), Eagle (magic knights rayearth), Clef (maigc 
knights rayearth), Enba (wildrock), Ken (Mata Natsu ga Kita), Haru (rave), 
Magica (rave)
%
I have a cat trap in my back yard and its pretty fun to check the cage on a 
friday night and choke a cat to death while you are half snapped. sometimes 
ill even follow up with a jerk session and blow my semen all out on a dead 
pussy. ohh yeah.
%
dude...listen...pretty much evry one hate him and microsoft, sure he's given 
us some computer crap who cares, its all crap, i hate windows so much, its 
the crapyest piece of shit ever, i want linux!
%
Everyone who has had sex and said it wasn't that great are people who have 
only had sex with people they don't really care about. It's disappointing to 
just stick your dick in any girl, but if it's a childhood friend or your 
daughter, it's so much better.
%
If your daughter listens to hip hop music, you should caution her against 
taking MDMA, commonly known as ecstasy if she plans to go to hip hop 
concerts or hip hop clubs. As everyone knows, when you add E to rap, you get 
RAPE.
%
Hello. I have a girlfriend. She has long orange hair which she wears with 
hairpins. She never removes her hairpins as they are worn in memory of her 
brother while her hair is worn long in honor of the promise Tatsuki once 
made to protect her. One of my girlfriend's more distinct characteristics is 
a large bust.
%
Before I dropped out of college, I strove to be as different from everyone 
else as I could be, reading manga and blasting JPOP music in my car.
%
So, I met this fat, skanky nigger bitch who wanted to fuck me, 'cause she'd 
never had a white man. I said sure, took her home and got her all hot and 
bothered. Then I hit her over the head with a crowbar. Just before she lost 
conscienceness, I told her I'd never defile my white cock on a nigger ape 
and shit in her face. Then I beat her to death with the crowbar. I ground 
her carcass up in a meat grinder and made nigger patties.
%
Ummmm....you are trying to equate "ratings" for fucking PODCASTS with that 
of TV? Even digital cable TV? A Podcast is a big hit with a few thousand 
downloads. 99% of hte wolrd doesn't gie a fuck about Podcasts. OK, maybe not 
99%, since the world is about 10% homosexual. But 100% of heterosexuals have 
NEVER listened to a podcast, or read a blog in their lives.
%
You're really a failure at life, you're 290 pounds, you've got horrible back 
hair, you sweat profusely, staining all your white clothes yellow, and 
you've killed 3 dogs by anal impaction.
%
Little known fact: "Chimney Sweeps" from Dickensian literature actually did 
not clean chimneys in a literal sense, as soot would take centuries to build 
up to the point where airflow in a typical chimney was obstructed. Instead 
these young boys were paid for performing analingus on as many as 30 wealthy 
gentlemen per day.
%
When I masterbate I fantasize about strange things. Like shitting in other 
peoples mouths while I watch them slowly drown in quicksand. I wish I wasn't 
so fucked up. What's worse is that seems like the only way I can get off.
%
The average man's body in this country is an absolute embarrassment. Mother 
Nature has got to be ashamed. The average man is a flabby, frail mess of a 
joke, a complete and utter mockery of a physical sham. The average man is 
feeble, fat and functionless. The only time he ever moves his engorged, 
slovenly body is when he shoves another slice of pizza down his throat, 
scratches his ass or belches out the national anthem.
%
My data are extrusively and exclusively sorted, indexed, and metaindexed. My 
indices are stored and accessed on a plethora of nodes over an ultra high 
bandwidth optical pipe; any item of data in my vast collection is instantly 
accessible by myself from anywhere on the planet. Go back to bubble sorting 
your recipe card database. You cannot possibly compare with me. Good day.
%
So I'm sitting at my xterm in KDE hacking some kernel code, and this bitch 
comes up to me and says "Do you know which of these computers runs Windows?" 
Well that did it. I flipped up my shades and looked her straight in the eye 
and said "Fuck no I'm open source bitch". I picked up my 10 lb IBM Model M 
keyboard and said  "I can kick your ass at 120wpm" and broke it over the 
cunt's head. She dropped to her knees and I kicked the jewel case out of her 
hand and into her teeth. Next I grabbed her by the neck and said "How's your 
uptime" before suplexing her backward through the air and into the server 
room. Some smoke that smelled like burning hair started to drift out so I 
jumped on my razor scooter and rode off into the sunset.
%
Hello. I am interested in various things, which include: Finding out your 
real life info(s), prank calling you every day, stealing your IRC 
nickname(s), and finding flaws in your website (i.e. loading popups, etc).
%
girl, i must be cervical cancer because i'm totally eating your pussy
%
Furcism is just as bad a racism jackass, if you dont have anything 
intelligent to say shut the fuck up.... Obviously furry is in demand if the 
mod created a board for it, therefore he needs to fix the link, and you can 
just avoid it with your furcist ass. Geez im getting tired of lil pricks 
saying stupid shit. May a tiger eat your entrails.....
%
My Fleshlight massages my penis at a rate of 2700 RPMs and feels like 250 
preteen girls giving me a handjob simultaneously.  It's encrusted with 
flawless 36 karat conflict diamonds straight from the heart of Africa.  It's 
powered by an experimental plutonium alloy battery and has a constant 
run-time of well over 3 years.  It has 4 settings, as opposed to yours which 
has only 2 settings (on and off).  No other fabricated orifice can compare 
to my Fleshlight.
%
woke up around 3pm pretty hung over - i got a new pair of jeans they are the 
brand wild ass which is pretty good has alot of places to stash shit like 
knives,hammers leathermens drank a pot of coffee and read the drudge report 
and huffington post sat outside near some fresh dog shit and smoked 5 
cigerettes as my dogs barked at me put on my boots and off we fucking go to 
clean out the swamp coolers of rich college kids who live a block from the 
campus - you gota first get on the roof then you unlatch these metal clamps 
on all corners then fuckin valium hits you hard you undo the belt so it 
doesnt break w/ frost bite - then you drain the water out of them and turn 
off electricity and water routing to the swamp coolers - any one of you 
fucking fucks out there with a swamp cooler your gona die some day fucking 
disgusting you stash some shit up there like a piegeon or a wasps nest n let 
it soak and blow fuckin air and whatever the fuck i let into your swamp 
cooler soak in your room - you better fuckin belive it if i sweep up anymore 
cig butts outside the f uckin final fantasy soundtrack lovin fuckin failed 
frat boys yard im gona put a bag of kimchee and chicken grease fuckin sars 
in his face and ass from sucking the wind of the d - low blood sugar valium 
and a hang over i fuckin put the shit back together as hot fuckin college 
ass walks by constantly so i start to head down off the roof theres a sort 
of ledge then a fence then the ground - but then i see into one of the 
neighbors yards and it looks like a sort of stable? so i kinda jumped from 
the roof into their yard but my boots fuckin get stuck on the rain gutter 
and i flip forward face into the wall upside down kidna fall back onto the 
floor it smells really bad and the pain is unbearable and i hear a sort of 
weird snorting sound the door to the stable is open and allthough im hurt 
pretty bad nothing is broke -0 i just sort of limp into the stable to see 
whats up and theres this beutiful donkey there - a great ass/mule im not 
sure what kind of breed it was but it wsa really friendly and let me pet its 
mane it said my leg would feel better soon cuz of the valium and i thought 
that was funny i sorta sat down in the corner cuz of the leg pain and 
noticed i was sitting in a pile of the donkeys shit - wet dry all together - 
my wild ass jeans were soaked and there were flies everywhere - the pony 
donkey thing just sort of looked at me and smiled like horses/donkeys/bears 
do and i smiled back cuz wtf im allready pretty fucked so i start to stand 
up but the girafe sort of moves its ass so my head bumps into its really 
toned ass - i cant help but notice that its massive cock is in fact a 
donkeys vagina - i look up at her pretty pony face and she smiles back so i 
just dove into that pussy where you at dog you know what im saying - fist 
into ass pushed in pretty far so i could feel around in the mule's stomach 
and slowly i felt that she had a sort of hernia? so i pushed a lil farther 
(my jacket was fucked at this point) and i found that the hernia let me push 
my arm all the way through to her beutiful unicorn vagina for the first time 
i have fisted someone through both hinde sex cavities - but something 
spooked that old black man and he started to run with me attatched my 
girlfriend who works with me on the landscaping saw me from over the wall 
and my arm slurped out of the small scotty dogs ass it was disgusting and 
embarrasing
%
I'm new to this channel, but I would just like to tell you that you are an 
inspiring individual. I appreciate your efforts. I'm not a pedophile myself, 
but I happen to enjoy viewing lolicon on a regular basis, so I'm well aware 
of the prejudices you face. Never stop fighting for what you believe in.
%
GET TROOPS OUT OF IRAQ BUCK FUSH CONSERVATIVES ARE GAY NO BLOOD FOR OIL 
WRONG WAR WRONG PLACE WRONG TIME FRIENDS DONT LET FRIENDS VOTE REPUBLICAN 
BUSH&DICK:  GOOD IN BED BAD IN DA WHITEHOUSE my brother raped me when i was 6
%
You know, I find it hard to say that something that has freed 50 million 
iraqi people from oppression and death is a bad thing.
%
My friend, I bet you haven't read the terms and conditions for this 
forum.... Take cover, you are about to be flamed!
%
My new XBOX 360 controller is one out of ten collector's editions ever made. 
Handcrafted from a block of pure platinum, the buttons are various precious 
and semiprecious stones, expertly cut and polished to brilliance by noted 
Japanese philosopher and artisan Inazo Nitobe. It can operate in wireless 
mode from over 3km away, and the force feedback is powerful enough to slice 
through a four inch pane of glass.
%
While the argument does not really say much being on a PG-rated television 
program, Data never reveals his genital region on screen. This makes 
confirmation fo genitals by direct examination impossible.
%
Japanese is such a sound poor language... it's impossible for them to say a 
lot of english sounds, LET ALONE German which is much more complex soundwise.
%
I think now is a good time to honor ourselves with some put-ups. You know, 
instead of put-downs?
%
Rather than being birthed like a normal child, Norris instead punched his 
way out of his mother's womb. Shortly thereafter he grew a beard. Before 
email was invented Chuck Norris would attach messages to kittens and 
roundhouse kick them. The chief export of Chuck Norris is pain. Chuck 
Norris' tears cure cancer. Too bad he has never cried. When Chuck Norris has 
sex with a man, it is not because he is gay, but because he has run out of 
women. Chuck Norris does not have AIDS but he gives it to people anyway. 
Chuck Norris has yet to get a Jeopardy question wrong. Jesus has missed two. 
Chuck Norris sold his soul to the devil for his rugged good looks and 
unparalleled martial arts ability. Shortly after the transaction was 
finalized, Chuck roundhouse kicked the devil in the face and took his soul 
back. The devil, who appreciates irony, couldn't stay mad and admitted he 
should have seen it coming..
%
A plane is standing on a runway that can move (some sort of band conveyer). 
The plane moves in one direction, while the conveyer moves in the opposite 
direction. This conveyer has a control system that tracks the plane speed 
and tunes the speed of the conveyer to be exactly the same (but in opposite 
direction).
The question is: Will the plane take off or not?
The answer: Yes!
The plane will take off if there is enough difference between the speed of 
the air and the plane. The plane speed RELATIVE to the air speed over the 
wings is half that of the plane relative to the conveyor.
Basically, it depends on how fast the conveyor moves, consequently how fast 
the plane moves forward. If it reaches (about) 220 mph, it will take off.
%
Carefull there friend, posting a blog message claiming that my users are not 
mature might just cause the masses to come over here and attack your site. 
Next thing you know, you will be dDOS attacked, and spammed in your comments 
section.
%
Did You Know: As late as 1987, instruction booklets included in the classic 
Parker Bros. board game "Monopoly" contained directions for appointing one 
player as "The Jew"? It was not until the early 90s that references to "The 
Jew" were replaced by "The Banker" in all game packaging and accompanying 
material.
%
Haha. Whatever. I'm in an animation college, and when I was in high school 
girls used to BEG for picture from me, and it was the most attention I got 
in school. Now everyone draws so it's not a big deal. If someone compliments 
you, take it, because chances are I'm better than you, and would mock you 
when you left the room.
%
I'm clicking your link, n00b, and nothing's happening. I'm clicking, bitch. 
What's supposed to happen, fag? I'm clicking and nothing's happening, 
fucktard.
%
I bet you think you're actually amusing. You were giggling to yourself as 
you typed that line out, and are eagerly staring at your screen hoping that 
someone will give you a zany quip in reply. Go on, you can laugh. It's okay. 
Just remember that you're the only one who thought that comment was in any 
way entertaining.
%
I bet you think you're actually amusing. You were giggling to yourself as 
you typed that post out, and are eagerly refreshing this thread in the hopes 
that someone will give you a zany quip in reply. Go on, you can laugh. It's 
okay. Just remember that you're the only one who thought that post was in 
any way entertaining.
%
Presumably you're either joking, or you're not a web designer.
%
I'm very sorry to hear about your situation. I'll write a post about it on 
BlogSpot and Xanga. Maybe we can also start a social bookmark campaign to 
highlight your story.
%
For those who doubt the authenticity of these facts, note that I have a 
doctorate in the Social Sciences from the University of Phoenix online, and 
I have over thirty volumes on the subject in print via on-demand internet 
publishing. Good day.
%
guns work like this - u buy the deagle at the spawn point and u get the 
headshot
%
girl i must be the u.s. senate because i'm totally rejecting your timetable 
for withdrawal of my troops
%
The government is too bureacratic and corrupt to accept the opinoin of an 
average American. They don't care about us, and we shouldn't care about 
them. We need a revolution right now. Start it with Linux. F**K the 
government!
%
It should be extrusively notated (and annotated) that my imago has been 
ensnared in the viscosity of time. That is why my transcendent self has been 
importuned (but not without resisting) despite the hydraulic pressure to 
limitate and delineate those theotons (the untimely microscopic, particulate 
hydrole) whose essential god-like characteristics have been laminated into 
an irreducibly minisculate, atomized, and indeed lionized cannister. Such is 
the enraptured entrapment of my condition.
%
Boo hoo! So their PROFITS are down. That only means they're not stealing as 
much from the poor. I call that a move in the right direction! Let's face it 
folks! Companies only profit by exploiting the poor. The very existence of 
poverty is all the proof you need! What do they need all of that money for? 
They have a civic duty to share their ill-gotten fortunes with the society 
they exploit to create their riches.  Companies should be forced to operate 
at a break-even limit. Any excess profit proves that they are charging too 
much for their product, and exploiting the poor. Such immoral profiteering 
should be illegal! There are so many people that need that money more than 
those greedy, racist executive robber-barons! The slavery must end, people! 
If we don't stick up for the poor now, who will fight for us when it's OUR 
turn to be robbed?
%
I work for IBM.
So I am really getting a kick out of most of these replies.
Some of you guys are very good at making it sound like you know what you are 
talking about.
But trust me.... You don't.
I think you just want to make yourself sound smart, when in reality you dont
know what you are talking about.
This is how bad info gets passed around.
If you dont know about the topic....Don't make yourself sound like you do.
Cuz some Slashdotters belive anything they hear.
%
I am pleased to inform you that I am currently drinking pure nutrients and 
dense anti-oxidants in the form of fortified pomegranate nectar. During an 
average meal I will drink no less than six liters of steeped oolong tea 
imported mere hours before from his Holiness the Dalai Lama's private 
garden. In short, the ratio of free radicals in your bloodstream as compared 
to mine is immeasurably high. Good day.
%
I like to say these following words: 1.tit balls 2.penis nipples 3.doodie 
poopy 4.pickleweasle 5.testicle poop 6.shit whore 7.shitless tit 8.penis 
shrimp 9.loomis 10.super weiner discharge
%
i think this guy likes me. evertime we hang out, and do the least bit of 
touching, he gets a boner, or atleast i thnk he does. but a boner is pretty 
hard to miss. so im guessing yea.excepts ints ot thru hsi pants, he jsut 
kidof tucks it in the part wiht tbuttons... the part were the belt goes. but 
it still goes up, and im not hallucinating
%
put down that joystick, son, and get yourself to the bar; there are all 
sorts of women out there waiting to take your money in exchange for a 
pittance of shallow affection
%
Chimpanzees start mating immediately after menstruation has begun or 
ejaculation becomes possible. Considering that we are animals, maybe it 
wouldn't be strange for humans to start having sex at 12 or 13.
%
To most, it seems obvious that there is a God. If true, the universe has a 
definite purpose. God made science. The old flat earth and geocentric 
beliefs prove that the scientific community has been wrong before, and could 
be again. Because of insufficient evidence to produce an objective finding, 
many scientists have realized that much more faith is required for 
Darwinism, than for Intelligent Design.
%
I went straight for the animation section in hopes of finding the newest 
Prince Picha Picha tape, but unfortunately found the aisle littered with 
shit like Yuko Hiba and Haldi Daldi Sucking a Penis. I go up to the stock 
grunt that's in the aisle over and ask him why there are adult anime videos 
taking up space in a family video store. He tells me to lower my voice, and 
I tell him not to disrespect me like that again. He tells me that if I talk 
back to him he'll have me thrown out of the store because he's the manager, 
so I lower my sunglasses, look him in the eye and say "I guess you'll have 
to MANAGE this" and hit him with a flurry of dragon punches straight in his 
gut. Then I grab him by his collar and lift him straight up in the air and 
ask him where the Kimba the White Lion tapes are, he says love you man, i 
had my man back there trigger the silent alarm. "I may not be a lion, but 
hear my roar" and I throw him 20 feet in front of me into the cash register, 
"You're due back in six days". Three of his employees come running out of 
the back room with nunchucks in their hands and I jump up on the counter, 
latch onto the ceiling lights and twist their necks with my dangling legs 
"Heh, talk about a light fixture". I leave the store, hop into my red 
camaro, and blaze off into the sunset as Moni Hima's Chiba Chiba Surprise 
plays on the radio.
%
Well, I walk in to buy some tissues, and at the counter, I hear the manager 
talking about some skateboard punks in the back by the garbage bins. The guy 
said he was about to have to call the cops. I told him there's no need to, 
I'll take care of it myself. So, I walked to the back of the store, and lo 
and behold, a couple of good for nothings were tearing the place up. A 
couple of them asked me what I was doing here, so I took of my shades, 
looked them straight in eye, and said, " Well boys, I'm here to take out the 
trash, then I grabed one of their skateboards, and broke it over my knee. 
Then, one of them threw a punch at me. I caught it, and looked thr punk 
straight in the eye, and said " I'm afraid theres no need for you to be 
recycled, then I threw him straight over my head into one of the garbage 
dumpsters. Then, the rest of the kids ran away in fear. I was glad I could 
help my community, and look good doing it.
%
So, I bought a couple of dvds off some web site a few weeks ago and I was 
pretty upset they haven't come in the mail already. So today I stuck around 
the house until the mailman came, he brought me a package but it wasn't the 
dvds I was waiting for. I asked him what the problem was and he told me that 
he had no control over when the company sends me the dvds. He said I should 
try to contact them. That did it. I couldn't belive this guy, I pay my taxes 
and this guy thinks he has the right to sass me in front of my euro mansion, 
in my freaking driveway? I lifted up my shades, took the cigar out of my 
mouth, looked him straight in the eye and said " I'm afraid this package is 
marked return to sender", and then I threw the package in the air and 
sidekicked the package right into the guys face causing teeth to go 
everywhere. I then saw one of my ederly neighbors walking toward me so I 
assumed he wanted trouble as well so I gave him a swift round kick to the 
ribs, I then looked at him and said "time to take out the garbage" and hip 
tossed him into the garbage can. I then picked up the crying mailman and 
threw him into the garbage can, after I had my "garbage collected", I picked 
up the garbage can and said "let the good times roll" and threw the garbage 
can down the hill. I didn't see those two guys again but I don't really 
care, I took the mailbag and threw it in my fireplace since it was a little 
chilly here today.
%
I was in town with one of my girlfriends today, and I decided to play one of 
those scratch off games again, I was very suprised when I won 1 million 
dollars on the spot, this was like the second time I won the lottery. I was 
about to claim my prize but then I thought to myself I'm already rich why 
not have some fun with this one? I told my girlfriend I was tired of her 
already so I left her at the gas station and went to find me some poor 
suckers. What better place than wal mart? I went up and down the aisles 
until I found a bad dressed man and wife along with their kid. I went up to 
the guy and showed the guy the ticket, and told him since I didnt need the 
money I was going to give it to him and his family, when he started to tear 
up I tore up the ticket and threw the pieces on the ground. I then started 
to walk away but this spinless punk then took a swing at me when my back was 
turned. That did it. I turned around, took off my shades, looked him 
straight in the eye and said "feeling lucky". I then gave him a swift kick 
in the ribs and threw him into the pet section, I then caught a wal mart guy 
coming at me so I took a knife out of my jacket and threw it toward a chain 
holding up a sign, I then looked at the guy and said "watch out for falling 
prices" and then the sign fell on him and knocked him out. I left the store 
but not before I complained to the manager about the kind of people they let 
in there.
%
So I was sitting in the back corner of eat �n park a restaurant in the 
northeastern region and I hear this group of punk kids terrorizing their 
waitress, and I stumble over there and ask the beautiful lady what the 
problem seems to be. The kids being the adept punks they are give her a 
glare that tells her not to talk or else therell be problems but I know 
better than this and I tell them that if they don�t apologize to this 
beautiful belle theyre going to have to answer to me. I pull my shades out 
of my back pocket, slip a comb through my wet hair, and tell them they have 
10 seconds to apologize. The leader of the gang a chubby kid tells me to get 
loss and then throws the peg game on his table at my face. �I pegged you as 
the wise sort, and I don�t play games!� says I, and I grab a tonfa from the 
cop sitting at the table next to them and tell them today�s special, punks 
served sunny side up, with a side of hollandaise. I crack the tonfa over two 
punk heads, do a roundkick, and then hiptoss the runt of the crew into the 
pie fridge. �Creamed or Key Limed? � I ask the cop as he slips me a fiver 
and gives me a back high five. He tells me Ive done a good job as a citizen, 
and I kiss the beautiful waitress on the cheek, run my comb through my hair 
once more and leave the restaurant on my harley.
%
It was a nice day today so I went for a walk outside. As I was walking, I 
heard somebody crying out in pain so I went to investigate, when I turned 
the corner I saw a kid that had fallen off his bike and he was grabbing his 
leg and crying. There was this guy already there and he told me that he was 
a doctor and he thought this kid had a broken leg. I could tell this guy was 
lying because he didn't have any white coat, I don't like liars so I pushed 
him out of the way. My training in medical school showed me that I had to 
get the kid's leg straight again, so I started pounding his knee to get the 
bone straight again. Thats when the guy that claimed to be a "doctor" called 
me a moron and pushed me out of the way. Well that did it. I got up, took my 
shades off, looked him straight in the eye and said " open wide doc" and 
then I gave him a swift kick to the mouth. I then grabbed him and said "time 
to make a house call " and then I threw him through a window of a near by 
house. The kid stopped crying then, I guess my pounding earlier worked. I 
told the kid not to thank me but I did need 20 dollars for my time. He only 
had 14 so I took his bike as well. I feel pretty good about fixing the kid's 
leg.
%
Me and my friend went to fill up my corvette last night and there were these 
two punks there sitting on the sidewalk of the gas station with their radio 
blasting. I was trying to think as I pumped gas but their radio made that 
hard to do. I was not pleased. So I went in and payed for the gas and then I 
went up to the two punks outside. I said excuse me but I think you need to 
turn your radio down. They told me to chill, they were just hanging out and 
having a few smokes. I then looked them in the eye and said " I'm afraid 
this is the no smoking section boys" and then I kicked their radio up 
against the side of the gas station. Then one of them stood up and took a 
swing at me, I ducked it and then gave him a roundhouse kick to the stomach. 
Then the other one took what was left of the radio and threw it at me, I 
blocked it with my left hand which caused it to go sailing back and knock 
him out. Then a middle aged man which looked to be in his 50's came up and 
asked what was going on. I wasn't sure if he was with me or against me so I 
assumed he was against me, I then gave him a swift front kick to the groin 
and hip tossed him on top of the other guys there. I then walked back to my 
car where my friend just stood there in awe, I asked him why he didn't help 
me and he said it looked like I had things under control. I slapped him and 
pushed him to the ground and told him to walk home. I then got in my 
corvette turned up the radio to full blast and much to my suprise welcome to 
the jungle was playing. I then sped off with that song playing full blast. I 
felt pretty good about standing up for my rights and I looked good doing it.
%
So, I was at work yesterday, and I happened to walk by this guy's desk. I 
noticed on his computer screen that he had his personal E-mails pulled up. I 
asked him who he thought he was to do this on company time, and then, he 
told me that his daughter was sick at home, so he was checking up on her. I 
then punched his computer screen out, and Look him straight in the eye and 
said, " Who do you think I am? Jerry Lewis? I dont want to hear your sob 
story, so get back to work before I get you fired." He then said a few 
cusswords, and then, then He tried to punch me, I blocked it, then , I gave 
him a swift, round kick to the groin. I asked him if he wanted some more, 
and he came at me, again, so, I slapped him, then I hip tossed him into the 
nearest filing cabinent. I looked Over my should at anther worker who was 
standing near by, and I said...." File him under G..... for garbage." 
Needless to say, I was quite pleased, because now, that means there one less 
person in the company for people to look at. All eyes should be on me. I'm a 
stud.
%
Me and one of my friends went out today for some dinner so we stopped at a 
pretty nice restaurant. I don't smoke and most of the time I sit in the non 
smoking section but I didn't feel like walking to the back of the restaurant 
today so me and my friend sat at the first table we came to in the smoking 
section. Since most ppl should be aware that I don't smoke I didn't think I 
would have any problems. I was wrong. This jerk lit up a cigarette right 
next to me. I couldn't belive this fat jerk was disrepecting me like this so 
I turned around and looked him right in the eye and said " you might want to 
put that out fag..........That is,if you value your health". The guy said a 
couple of cuss words and told me to go to the non smoking section. Well that 
did it. I got up went over to the table and said "excuse me fag but you 
didn't clean your plate", and then I took his plate and bashed him over the 
head with it. Then his friend that was with him got up and took a swing at 
me, I ducked it and then gave him a swift round kick to the ribs. I then hip 
tossed him on the table and then I turned around and looked one of the 
waiters right in the eye and said "this orders to go" and then I tossed the 
table with the guy on it a good 14 feet across the room. As me and my friend 
were storming out the manager apologized to us but I told him it was too 
late as I would never eat there again.
%
Hah, then you're depriving yourself of one of life's simple pleasures. 
Picture a cool Saturday evening.. lights down low, the sun is setting, Mom 
went out with her friends. You have a slice of pizza in one hand, a Guinness 
in the other, and a fresh Gentoo install on two screens in front of you. 
Nothing quite like it, my friend.
%
I came home this afternoon after picking up my copy of gta and I smelled 
something funny from my neighbors house. I went over there and the door was 
unlocked so I went right in. Sure enough there was my neighbor and two of 
his friends smoking to their hearts content. I told them they had two 
options, one- they could put the joints out or two- I would put the joints 
out for them. My neighbor had run ins with me before so he knew I meant 
business so he threw his joint down and told me to leave. I said you made a 
wise choice but I'm still calling the cops and then I turned to leave. My 
neighbor then got up off the couch got behind me and said a few cuss words 
and told me to mind my business.  His other friend ran into the kitchen so I 
went after him. He was in the corner crying so I said "this is your brain" 
and then I grabbed a frying pan and said "this is your brain on drugs" and 
then I hit him in the head as hard as I could with the frying pan.  After 
that I called the cops and they came over and arrested my neighbor and his 
friends. As I was leaving the sarge shouted out to me thanks. I then threw 
my shades on the ground to let him know I meant business. I feel pretty good 
about what I did for my neighborhood today.
%
This thread is just a remake of a thread I read months ago on an exclusive 
forum you're too poor to have even heard of, which counts among its members 
such superstars as Tiesto, Paul Van Dyk, Kenny Loggins, and Afrikaa 
Bambaataa. Maybe someday you can come up with something original.
%
I have like 50,000 shells/vhosts/bncs. Bans won't do a thing except fill 
your list. And 'get to where i am today' is a sad testament to your life 
apparently. On a side note, I used to op other chans that are far bigger 
than this chan. I didn't get ops by k/b'ing everyone in sight or anyone that 
carried a touch of annoyance to me. I reserved k/bs for spammers and 
flooders, that's it. Everyone else I /ignored
%
Swadi Ghilan's two sons were dropping their sister off at high school 
earlier this year when a carload of Sunni Muslim insurgents pulled up and 
emptied their AK-47s into their bodies. In broad daylight his children were 
torn to pieces, their blood splashed against the windshield as they screamed 
and died ohh yeah
%
excuse me, but i politely ask you to cease your torpid attempts at 
manifesting versimilitude through your crude preferences of internet 
lexicon. my comprehension of the english language is brobdingnagian, 
effortlessly micrifying your picayune and odious disposition, of which has 
already saturated me with a pullulating impression of ennui coupled with 
execration. good day.
%
Some advice to you gentoo users out there: Why don't you emerge yourself 
from that closet already you damn homo.
%
My computer typing skills surpass any of your so called 'talents'. I can 
type 'internet relay chat' in the time it takes you to type 'IRC' (by the 
way, acronyms are so pass�). I have 6 custom developed Das Keyboards 
programmed to a vast array of languages. They are strategically placed 
across my 3 tier, Mahogany desktop that I had customed ordered from France. 
I can communicate with 3 different people simultanously while coding the 
README updates for my unix distribution. Did I mention I have the all-time 
high score on Mavis Beacon? You have nothing on my impressive typing skills. 
Thought so.
%
The way I look at it, you atheists are basically like this: "Look at me, 
world...I can debunk your faith in God and leave you applauding my 
perception and intelligence to bring forth the truth." Sorry, I've already 
forgotten your name,  but the name of God will stand forever.
%
I am pleased to announce that, in addition to having spotless tiles and 
grout in my bathroom, my hands are several orders of magnitude cleaner than 
yours. My fingernails all but sparkle in the daylight, due to their highly 
polished status. Upon examination under a scanning electron microscope, you 
will notice that the crevices of my hands are quite literally free of germs 
or other bacterial growths. Your hands, in comparison, are a veritable 
wasteland of urine, dust mites, blood mixed feces, skin cells, and pet 
dander. Your hygiene cannot even begin to compare to mine. Good day.
%
A military-grade GPS transponder is integrated into my brilliant blue HUD 
which is projected stereoscopically onto the inside of my windshield giving 
the effect of a gentle, and indeed quite entrancing, box of luminous 
information about my own decadence floating 10-15 meters in front of my 
exquisite sedan. Good day.
%
Overweight, rubber-faced men lurking near commercial business centers or 
shopping mall food courts during the morning hours? Stay away from these 
people, they could be hamburglars.
%
People totally underestimate children's sexuality. Did you know even babies 
can get erections?
%
That 'I work my ass off' shit is so 90's. Here in the 0's robots do our 
work, Cletus. Get the fuck back to Amish country with that work ethic shit.
%
My blog is utterly inundated with trackbacks from across the globe. Past 
commenters on my posts include U2 frontman Bono, His Majesty King Mohammed 
IV of Morocco, and former UN Secretary-General Boutros-Boutros Ghali. I've 
written over three thousand mind-stimulating and thought provoking entries 
dating back to 1995, and I've received over ten million comments, all from 
unique ip ranges.There has never been a single spam comment post that lasted 
more than 0.25 seconds due to superior spam detection software which I have 
written myself and ported to several popular blogging packages. You cannot 
even begin to compare to me.
%
Sorry to burst your musical bubble, but the bands you listen to were 
overwhelmingly influenced by the bands I listened to four years ago. Try to 
keep up.
%
My musical interests are so vast i cannot even begin to explain them using a 
keyboard. Go back to reading Pitchfork everyday trying to find the song that 
describes your life to a T; it won't be hard I'm sure.
%
Excuse me, but that troll you just pasted is over ten years old; i've 
perused my logs and found myself referencing said troll over two hundred 
times. Thank you.
%
You see that crystal salt cellar in my Amazon wish-list? That will set you 
back $27,000 at Hammacher-Schlemmer. Incidentally, I own four. Go back to 
your Livejournal and post about ordering twenty five cent Chinese Food 
takeout with your drunken frat friends; you're quite out of your element 
here.
%
My digital music library is vast and unrivaled, consisting of only the most 
pristine lossless audio files ripped from the original DAT/DDS recordings 
(with pre-mixdown and pre-master sister copies, of course). My inside 
sources supply me with copies of the newest albums before even the artists 
themselves have heard the final cuts. Incidentally, you've never heard of 
99% of these bands, nor could you ever hope to comprehend their genius nor 
appreciate their obscurity.
%
Guys that are uncircumcised are repulsive to me. People go in and out of 
public washrooms so fast you know they didn't wash their hands with soap. 
Can only imagine how much stinky smeg must be down there. There was one guy 
I was with that was uncut. He was only four inches and that didnt last. The 
first to say it doesnt matter are small men. Its brilliant luck the guys 
I've been with have been 8-10 inches so far. Uncut is such an aversion, it 
makes me want to ask right away to weed them out.
%
i tried to commit suicide so i took a bunch of pills but i was upset when 
the pills i thought said "die" actually said "diet" :(( i lost 5lbs tho :)))
%
I use the latest versions of Adobe Photoshop as soon as they are released. I 
have 5 versions of Macromedia Flash installed on my computer. My computer 
syncs with many 'blogs' to find out the latest release information on new 
products that I immediately download from a p2p (Peer To Peer) server which 
I have exclusive access to. I am a website designer; I also do myspace 
website designs with skillful grace. I listen to a lot of indie music but I 
was the original indie fan before it sold out and got popular. I also like 
emo (emotional) music. I went on a drug binge when I was 16 and lost my 
virginity to a truck driver behind a Pak'n'Save. Brb, I gotta cut myself. Do 
you want to see my blog? PS. How do I make those clouds?
%
You know what pushes my buttons? You know what makes my bubbles pop? You 
know what raises the hairs on my ass? You know what tickles my fancy? You 
know what thaws my ice cubes? You know what gets my cripples standing? You 
know what formats my hard drive? You know what drains my fluids? You know 
what ticks my clock? You know what shoots my target? You know what 
neutralizes my pathogenic agents? You know how much I paid to get you into 
college? You little shit.
%
Gentlemen,  I am pleased to announce that in addition to having leech access 
to the most elite 0-day courier FTPs, I have thousands of shell accounts, 
each of which are capable of running an unlimited number of processes with 
eggdrop/IRC support.  My botnet is unfathomably large.
I have access to hundreds witty IRC vhosts, using every existing TLD.  I 
connect to them using an unreleased version of mIRC with every feature you 
could possibly desire, including the most powerful WARTOOLS.  This is all 
powered by my $5,000 premium Dell computer system. You cannot even begin to 
compare to me.
%
THE PURPOSE OF LANGUAGE IS COMMUNICATION AND IF YOU CAN UNDERSTAND IT 
DESPITE SPELLING/GRAMMAR FLAWS AND YOU ARE ABLE TO CORRECT IT THEN SAID 
COMMUNICATION WAS EFFECTIVE AND YOU ARE A FAGGOT.
%
So I was having lunch with my good friend Jerry Bruckheimer at a local 
restraunt, and we were discussing Top Gun. One thing that struck me about 
Top Gun that I never really knew why Goose died. So Jerry, or Jerr-Bear as 
he's known by his friends, let me in on a little secret. He told me that at 
the time of Goose's death, he was chewing gum and that the excessive juice 
that was being excreted from his chewing the gum caused him to lose control 
and die. And this just wasn't any chewing gum, it was Bubblicious. And this 
just wasn't any Bubblicious flavor, it was a flavor called Lebron James' 
Loopy Lemonade gum. So if you see this flavor of gum at the stores, please 
do not buy it because it killed Goose.
%
is it possible i could have bought a bootleg pci sata card?  it says 
siclicon image 3112 but its not working right and the bios has grammar 
errors.  wtf?
%
Anyone who says "F/OSS" is a tool.  Free software hates Open Source because 
Open Source is the little sell out movement that doesn't give a fuck about 
the ideals.   It's like True vs. Nu metal. Stop associating Free Software 
even remotely with Open Source because those of us in the Free Software 
movement probably hate you.
%
I scoff at your claim that your windows environment can even begin to 
compare to mine. I have thousands upon thousands of fonts, and my wallpaper 
is a massive 2GB at a whopping 14,000 dpi in glorious 128-bit color. My 
onscreen text is antialiased with the latest ClearType technology, and 
remains brilliantly legible even behind 10, nay, 20 transparent window 
panes. Clicking my Start button triggers a fanfare and a choir of haunting 
angelic voices as you stagger back in awe of my stunning 45,000 item Start 
Menu.
%
This is discrimination!  Just because I have a -job- I should have tax 
dollars taken away from me and given to slovenly brutish underclass, who 
refuse to work and instead attempt to mug me every time I pick up a male 
prostitute downtown??
%
one time i was in my friends bathroom taking a shit and i was reading a 
maxim magazine that was by the toilet and saw some semi nude shots of some 
model (i dont even remember who) and i had the sudden urge to masturbate. i 
continued to do so and cleaned up and went out as if nothing happened.  it 
was exhilarating and i wanted to do it again. so i did. several times. i 
even asked to use his shower so i could secretly masturbate in there. i like 
doing this because it's a top secret that only i know, and i can laugh about 
stuff and no one will ever know. i also like to masturbate on days in which 
key events happened. 9/11 being my TOP yearly ritual. "never forget" about 
christmas and thanksgiving. sometimes mark-paul gosselaar's birthday when i 
can remember it.
%
Recently, as a reward for getting straight 'A's I took my son to a CompUSA 
and told him he could have any computer he wanted. Imagine my disgust when 
he selected a mac mini. It's as if I took him to a whorehouse for his first 
lay and he wound up getting head from the bouncer. Where did I fail as a 
father?
%
Pepsi generation refers to the generation of free radicals in your system 
when you imbibe this caustic brew. Parents, if you have any regard for the 
health of your children, do not allow them to drink this devil beverage 
which promotes among other ills: skateboarding, loud music, drug (caffine) 
use, disrespect to elders, race mixing and in general, the kind of eXtreme 
living expressly forbid by the our lord and savior, Mohammed in the holy 
Korang. (PBUH)
%
I was recently made the victim of an ICMP "flood".  After hurricane Katrina, 
it is inexcusable that this kind of thing should happen.  It is now crystal 
clear that Bush doesn't care much about net people.
%
I'D LOVE TO BE THE ONLY FEMALE AT A "SUPER-BOWL" PARTY MADE UP OF 4-6 MEN! 
THE MEN TALK ME INTO MAKING A FRIENDLY WAGER ON THE 1/2 TIME SCORE. IF THE 
FELLAS TEAM IS LOSING AT 1/2 TIME...I GET $1000.00...IF THE TEAM THEY CHOSE 
IS WINNING...THEY ALL GET "ME" TO DO AS THEY PLEASE!!!
%
The government today announced that it is changing its emblem from an Eagle 
to a CONDOM because it more  accurately reflects the government's political 
stance. A condom allows for inflation, halts production, destroys the next 
generation, protects a bunch of pricks, and gives you a sense of security 
while you're actually being screwed.
%
Linux was never "free" in either sense of the word. You may have had 
downloaded Linux onto your computer for free but someone paid for it. In my 
case, does anyone know how I can trade child porn with other Linux 
enthusiasts. Hit me back.
%
I believe that racial profiling is another necessary evil. Its existence is 
the fault of the G-Unit, a popular "hip-hop" artist, whose name is clearly 
the subliminal message "GUN IT". He is reinforcing the concept in the noble 
white mind that rappers today are the tool of satan, coaxing the young and 
uneducated nigger into a life of violence by instructing him to deal with 
his problems using firearms.
%
Linux is an OS where files have no association to programs; all 
configuration and settings are stored "wherever" in text files that grow to 
be megabytes long; most shell commands are so abstractly named that you 
would never be able to use them without knowing how they work.. or first 
reading its "manual page".
Linux is an operating system of inconsistancy. Theres over a thousand 
distributions of linux, and over a billion different modified versions of 
it. Programs come shipped as source code that you must compile and configure 
(by way of large scripts that attempt to figure out how your system is 
running.. since nothing is standard).
%
Linux is a form of mental sickness; a security blanket left over from the 
childhood of the Computer Age. The sooner "Tux" and his travelling freak 
show pack it up and move on, the better.
%
Any east slim/lean chinese nsf/nsreg/sec/jc/scouts/npcc/ncc uniform boys 
intrested roleplay kidnapping/tying up fun in full uniform attire? 23 chn 
male 171 100 fat guy here in Bedok North. Pls mesg me if intrested, thanks.
%
Surprisingly, my healthy pussy emanates a fragrance EXACTLY like steaming 
hot french fries from McDonald's. Days when the smell is particularly 
strong, it makes me long for a large Dr Pepper with plenty of ice. And it 
makes my stomach growl, particularly in the mornings.
%
girl, you must be a basic land card, because i just tapped you and now i got 
mana burn
%
I just got back from my trip to Africa and man was it great! First we landed 
in South Africa and while there I actually got to meet Nelson Mandela. He 
was a very gracious and interesting host.
Then we were on to Kenya. While there I got to see lions and elephants in 
the wild. A rhino actually chased the hummer we were riding in, but I think 
the driver prompted it to. I also saw a few giraffes and crocs. Then we went 
up to Nigeria and saw the different cultures of people that were there. I 
actually got to visit and internet cafe and check my emails! Then we got a 
guided tour down the Niger River. Man that was the funnest part of the 
entire tour. I saw several large snakes hanging from trees and lots of 
crocodiles. Then we saw a gang of Ubangi-Lips rape a 6 year old girl and eat 
her father afterwards. It was awesome.
%
one time i tried to stick an egg back into a chicken, i think it gave the 
chicken an orgasm because all this liquid came out all over my hands and the 
chicken started to squawk and flap its wings. maybe im weird but this was a 
major turn-on!
%
I need pictures of your fingernails for a research project I am doing for 
Columbia University. Preferably extreme closeup of your cuticles. If you 
could cut them slightly open with a razor blade, just so a little blood 
leaks onto them.. that would be awesome.
%
girl, you must be gasoline because even though you're pricey, I'm still 
going to pump you in my van
%
Whoa! If flames were an alternative power source, this would be a nuclear 
reactor. Very good trolling, sir! I laud your recent accomplishments and 
expect to read of your exploits in the latest trolling journals.
%
girl you must be Six Flag's newest roller coaster because some rednecks told 
me that they have been saving up their money all summer to ride you
%
girl you must be a black market organ harvester cause you just stole my heart
%
girl you must be Doom 3 cause when the action starts the lights go out
%
girl you must be open source because the entire fucking high school class 
has seen your internal workings and tinkered with them
%
Your "guess" is completely wrong. Just because animals can't talk doesn't 
mean they can't give consent. Animals have teeth, claws and can give audible 
warnings (growling, hissing, etc.) to voice their opposition to a sex act 
being performed on them.
   Also, many animals are quite intelligent and have a much faster 
neurodevelopmental rate than humans, reaching mental adulthood at extremely 
young ages by human standards. Finally, many animals are fully grown at much 
younger ages than humans, so they're physically prepared for sex at younger 
ages.
   Comparing animals to children is absolutely ridiculous, and in some ways 
even insulting to animals. Please do your homework before adopting a stance 
on an issue you got from a blatantly-conservative source.
%
I hate this hypocritical bullshit. So I can can take a cow, shoot it in the 
face, cut out its tongue, gut it, cut it into million cubes and eat them, 
then wear it's skin...but I can't love one? I can't make one feel special? I 
can't physically express all the love I have for it? Fuck America.
%
I prefer to open the conversation with light banter about my wardrobe and 
jewelry, then I like to discuss my collection of expensive cars. This is 
more than enough to convince you to have sexual intercourse with me.
%
Go back to jacking off to your anime girls. Leave the real women to real men.
%
There's something hypocritical about a country that fails to establish 
adequate limits to medical testing on animals and adequate guidelines for 
treatment of fur and meat animals yet makes the sale of all crush videos 
(including those depicting the extermination of bugs, worms and rats) 
illegal.
%
girl you must be herpes because every time I think i'm rid of you, there you 
are on my dick
%
girl you must be ghonorrea because you're totally eating my nuts
%
Y'ALL HURD ABOUT DA HEERRIKANE?  YO KATRINA WAS CAUZED BY WMDs YA HEARD?  
DAS RITE YO.  WEAPONS OF METEORLOGICAL DESTRUCTION. DA INSURGENTS ND DA 
TALIBAN R BEHIND ALL DIS.  ND FEMA IS RACIZICALIST TOO. BUSH DON'T CARE 
ABOUT BLACK PEEPLE.
%
No, actually, I am not fat. I have about a 10% bodyfat, actually. I lift 
weights all the time that I am not playing video gamez (ps2 sucks).
%
Thank you for giving me a glimpse into the wonderfully vivid and imaginative 
world that you occupy. I feel...honored...to say the least. Words can not 
express my gratitude that you would grant upon us put a peephole into the 
glorious universe that you are so priviledged to occupy from 9-5 every 
single weekday. I am envious but I know it is because God has favored you 
above me...you are TRULY worthy.
%
I love both dog cock and Negro cock, but that is hardly any reason to make 
either dogs or Negroes American citizens. Just as there will be ways to 
enjoy Chinese food without flooding America with Chinese asylum-seekers, 
there will be ways for you to enjoy Negro cock without allowing large 
numbers of Negroes to roam about destroying American infrastructures.
%
one time this guy showed me his 'drug free' tattoo so one day me and my 
buddies pinned this guy down and injected him with heroin. he was kicking 
and screaming and we all laughed and the next day we found out he killed 
himself LOL
%
Fuck them boo boos I guess some of those jack asses should have cashed their 
welfare check and gotten some swimming lessons instead of blowing it on 
hennessy, spinning rims, and crack!
%
The cowardly, girly-men faggot Muslim and Arab subhumans are quite another 
matter. Islamists do not accept the United States as it is, and actively 
want to change it into a majority Muslim country where the Quran replaces 
the Constitution. The lib-dems run "PC interference" for America-haters, 
obscuring the true details and the important dialogue on all issues. We love 
"diversity" and "multi-culturism", don
%
Last weekend I slept over at a friend's house, but forgot to bring an extra 
pair of underwear. He offered to let me borrow a pair of his. Well, we went 
for a long car ride, and long story short...I shit in his underwear. Not a 
lot, but whoever did the laundry would definitely notice. When we got home, 
I pulled him aside and told him about it. "Pull down your pants. I want to 
see the damage," he replied. I was somewhat taken aback by this response. It 
was his underwear after all, so I obliged. I pulled down my pants, and then 
carefully lowered my underwear. I was surprised by how much shit there 
really was. There were streaks all over my legs from when I had pulled the 
shorts down, and my penis was covered in shit. How had it even gotten that 
far?"Jesus," he exclaimed. "That's a lot of shit." Then he got down on his 
knees and licked the underwear clean. When he was done with that, he slurped 
the shit off my cock and balls. What a day!
%
How on earth do i open taorent files? when i try openoing with winzip or win 
rar it tells me teh file is damaged ??
%
jesus I spent the formative years of my childhood masturbating to a shemale 
sprite
%
My hole day in skateboarding is just wake up when ever you feel like it eat 
then go meet a few friends skate chill skate get something to eat then skate 
chill run from the pigs and skate then go to sleep about 4 or 5 in the 
morning.
%
Jeff's balls are about 3 inches in diameter. They are green and hairy. When 
in public, Jeff will often expose his balls as a way of calming a crowd. 
Often in a fit of anger Jeff will whip one of his balls at someone who is 
misbehaving. Most people prefer not to come in contact with Jeff's balls.
%
It is indeed a cruel twist of nature that the most wonderful sex coupling in 
the world ?is illegal - made so by puritanical Adults determined to limit 
child rights.
%
im a computer geek?? im not the one who spends his time on multiple forums, 
im not the one who comes here day and night for almost every day of the week 
and talks about making fun of people on the internet. christ, get a life
%
As someone erotically attracted to balloons, a question  close to my heart 
is "to pop or not to pop?" Flame wars over this very issue take up a 
significant amount of space on the balloon fetish chatrooms I frequent. I 
find that while non-poppers feel an emotional attachment to balloons and can 
get quite protective of their inflatable friends; poppers such as myself see 
no point to jerking off with balloons unless they explode. Your thoughts?
%
When the female of a species is more promiscuous, the male has to work 
harder to keep his woman, and thus reproduce. It is easier for him to keep 
her entertained if he has a more impressive dick, which means that the 
better endowed male can reproduce more than another male who is not so well 
endowed. In a species where the women are more loyal, this isn't so 
necessary. So if the coons have the biggest penises, all that tells you is 
that the blacks have humanity's most slutty women. I'm prepared to believe 
that that is true.
%
Wow you're life is so complete. Havning to use a drug to have fun and 
listening to sucky music must make you so cool. Partying with women who have 
been passed around more times then your mom must make you a pimp.
%
if you want people to think you know what you are talking about, just put 
".com" at the end of everything you say.com
%
so i get home from work, ready to cook some chicken things in the microwave 
(oven is broke), i read the instructions to see about how long to put them 
in for.. the damn instructions say, for microwave cooking, to put them in 
the microwave for 3 minutes AND THEN put them in a oven for 15. hey 
stouffers you lame retarded fucks, if i had a god damn oven i would use the 
shit to begin with. it's called microwave cooking for a reason. THANK YOU 
COME AGAIN
%
At first, the idea sounded unthinkable. Use my hand to wipe my ass? 
Disgusting! But after 10 minutes of waiting, I decided that it was my only 
option. I slowly lowered my right hand under my butt and scooped all the 
fecal matter from my bottom. Not only did it feel gross, but now I had a 
whole new set of problems. One simply does not walk out of a bathroom stall 
in a public restroom with one hand covered in shit. I sat there petrified, 
hoping for a miracle. But no miracles came. I was alone. Or so I thought. A 
knock on the stall door sprang me into action. "One second," I called out, 
and in one quick movement I shoved the defacation into my mouth. When I tell 
this story, what most people find most surprising was that I didn't gag 
immediately. In fact, the stuff tasted rather good. Scratch that...it was 
orgasmic. And the texture - there is nothing like it. After swishing the 
poop cusisine around my mouth for a few moments, I gulped it down. Up until 
that moment, I hadn't realized how hungry I was. Suddenly, I wanted more, 
and fast! With my pants still at my ankles, I threw open the stall door and 
grabbed the elderly gentleman who had been patiently waiting. "Give me all 
your shit, and make it fast." By the end of that glorious day, I had tasted 
the shit of more than 100 men, and a few women too.
%
As I was reading that, my cat rubbed against my leg, and it surprised me. 
But it felt kind of good, so I let her continue. After about five minutes of 
this, I was feeling pretty horny, and from her erect nipples, I could tell 
my cat was too. I picked her up and put her in my lap. She purred as I 
unzipped my pants, revealing my enormous boner. Then, without warning, she 
bit the head of my penis with her sharp fangs. Blood was everywhere, and i 
stared in horror as she began to claw at my blood-spattered testicles. I 
grabbed a pair of scissors and snipped off her tail. She meowed loudly and 
scurried away. I guess we were not ready to take our relationship to the 
next level.
%
Is it not weirder to drink cow's milk which is truly intended for baby cows? 
The answer: Hell no! The only thing weirder than me drinking breast milk, is 
the fact that milk is coming out of my wife's chest in the first place. It 
sure as hell didn't do that when I met her. I'm telling you, the whole thing 
is lunacy. I love my wife, but does she really have to be such a mammal?
%
Some say that I am the king of trolls. Of course, this is ridiculous because 
trolls have no king and accept no authority.
%
Don�t let anybody ever tell you that Japan is just another foreign country. 
It is much more than that. My story begins in the summer of 1983. I was an 
expert negotiator, and that was what brought me to an exclusive resort 
outside of Tokyo. Two large Japanese electronics companies were attempting a 
merger of some sorts. After two fruitless days of negotiations, I figured 
out a way to make everybody happy. I made some phone calls, and pretty soon 
all the executives were standing in the conference room, glaring angrily at 
me. �Gentlemen, may I present, Ling.� A buxom young Japanese schoolgirl 
entered the room. What she lacked in age, she made up for in sex appeal. The 
room went silent. I was terrified. Had I made a mistake? Suddenly, the 
executives all burst out laughing. Then, one by one, each executive removed 
his pants and began furiously masturbating over the young female, while I 
stood watching. Even now, as I write this, I am getting an erection, 
thinking about all those precious little penises waving wildly about. 
Finally, after the last load had erupted onto the face of the girl, whose 
slanted eyes were almost completely covered in goo, I walked up to her and 
lapped up every last drop of milky goodness. Oh, how I love Japan.
%
Every time somebody starts hating on the president, it really bothers me. 
Don�t get me wrong, I hate the current administration as much as the next 
politically minded citizen, but it�s really self-defeating. You see, the 
president is not really who you think he is. He�s not the guy who makes 
these decisions that piss you off. He looks like he makes the decisions. He 
sounds like he is making the decisions. In reality, he�s just the guy that 
has to sell them to you. He is an actor, pretending to care about the 
country. He probably even believes he is actually the president. That�s one 
of the reasons why people like him at all. Another reason is that he sucks a 
lot of dick. And when I say a lot, I am not kidding. Like, we�re talking 
millions of big, wet, floppy cocks getting shoved in his mouth over the past 
month alone.
%
Let me get this straight: the oil companies pressure the U.S. government 
into invading Iraq, and then they expect us to be grateful when they donate 
a measly $4k to the hurricane relief effort? An effort, by the way, that has 
been severely hampered by the fact that most members of the national guard 
are currently halfway across the world. There's no way for them to come back 
to help out, and even if they could, those guys are exhausted. One of my 
buddies from high school joined the national guard and ended up in Iraq, of 
all places. He told me that between the constant bombings, the desert heat, 
the buttfucking, the cumguzzling, the gangbanging, and the surprise 
circumcisions, there is hardly any time to sleep.
%
last night i had this dream that i was going to the bathroom, like pissing 
in a full size urinal (all the way from the ground up, like 4 feet high), 
when all of a sudden i look to my right and there is this old lady standing 
next to me doing like the fake pissing thing, holding nothing, and staring 
at my wang, which is now hard.  all of a sudden she jumps into my urinal, 
note i am still pissing, and shoves my cock into her mouth and starts giving 
me head.  don't forget i am still pissing.  so she's goin down on me like 
she hasn't had cock in 40 years, which she probably hasn't and i finish 
pissing all over her, so i reach over and flush and just leave.  she sits 
there in the urinal as i leave and there is this indian couple, the wife is 
pregnant, who is just coming into the bathroom wondering what the hell i am 
doing.  i wave and smile and say hello, at which point i casually walk out 
of the bathroom.  when i get out of the bathroom my company is having a 
meeting so i sit down and all of a sudden this retarded guy who works here 
starts beating me up, at which point i wake up.
%
I often find myself contemplating what it would be like if an elephant threw 
up but its mouth was closed. Would it throw up out its trunk? And if so, 
that leads me to my next question: Would it make that elephant noise when 
the throw-up comes out? I have played this scenario in my head every day and 
night for the last ten years and the more I think about it the more firmly 
convinced am I that the answer to both questions is in the positive. Discuss.
%
I'd love to have a man as my girlfriend and who would greet me each morning 
in a new an refreshing way. A spray of hot piss, a dick up the ass, an ass 
pressed against my face, farts in my face, all the while waking up to a 
beautiful man on some dim morning sunrise, light shining through the 
curtains onto his perfectly formed pectorals and the silk sheets layed upon 
his body reveleaing enough of his penis to make me realise how lucky and how 
wonderful i am. I prefer men and I date exclusively black men.
%
The first thing you need to understand is that the government does not 
represent the people. It represents the corporations. The second thing you 
need to understand is that hurricane Katrina is not a natural disaster. It 
was a product, paid for by the U.S. government, and created by a 
Chinese-built weather device. Think about it: who benefits from a natural 
disaster like this? First and foremost, construction companies. New Orleans 
needs to be completely rebuilt. Second, the government. Every moment of 
airtime that the president gets to talk about saving lives rather than the 
war in Iraq means another vote in the next election. Lastly, mankind 
benefitted a little from all those niggers drowning.
%
The existence of "foreigners" is a common liberal myth. The self-styled 
intellectual elite, attempting to push their own petty agendas on the rest 
of us, invented the idea of "foreigners" to lay a guilt trip on the rest of 
the country.

FACT: Nothing exists outside the US! There is only vast ocean, we occupy the 
entirety of Pangea. (The existence of multiple continents is yet another 
liberal myth, which we'll discuss next time).

FACT: Although the "foreigners" lie was created and popularized by liberals, 
it has recently been picked up by conservatives. The Bush administration 
relies heavily on scare tactics involving hostile "foreigners" as a way of 
grabbing unconstitutional levels of power.

FACT: You may meet people in daily life who claim to be "foreigners" and 
illegal "immigrants". These people are merely telling you that false story 
because they're trying to get out of paying taxes.

FACT: "Foreign" languages are simply elaborate codes used by spies to talk 
in secret. These spies are everywhere, and they are determined to steal your 
genes for use in horrible cloning experiments. Don't trust anyone who speaks 
a "foreign" language!

FACT: The word "foreign" comes from the combination of "for" and "reign". 
The word was invented for reign-for perpetuating the reign of dishonest 
liberals and unconstitutional governments. Don't let them fool you!
%
There is no reasonable expectation of privacy in the world because there 
never was one to begin with. You can't lose something you never had.
    We live in a web of interconnecting lives. Our actions have 
long-reaching effects on others, as theirs do on ours. The idea that a 
single man may live as a hermit in the midst of the civilized world is both 
absurd and problematic for being such a popular idea.
    Privacy doctrine in this country has existed for one purpose: shielding 
domestic violence from public scrutiny. The whole 
private-sphere/public-sphere distinction arose so that some men could 
prevent other men from interfering in what they manage to pull off behind 
closed doors. Marital rape and worse violences have always been justified as 
located in the mystical private sphere.
    As you cling to the arbitrary notion of privacy, you're doing little 
more than empowering men to rape and torture women.
    It's time we got rid of the private/public distinction. No one ever had 
any actual privacy; merely artificially imposed curtains that conceal 
malicious actions by some against others. If this does anything to undermine 
public respect for such a morally bankrupt institution as privacy, then I'm 
all for it.
%
Gimp is perfectly usable. I know. I use it to add a mosaic over the faces of 
my many preteen rape victims.
%
you don't understand,you don't realise that the internet is a form of 
communicating and it's just as serious as talking in person or on a phone. 
Stop with the bullshit.
%
I've been in the feceshape hobby for a good three years now.  There's just 
something about being able to manipulate the shape of my poop by squeezing 
my bowels that appeals to me.  Plus, when I'm 80 I'll have such control 
there'll be no need to worry about messing myself.
%
Nigerians make me so mad I wish someone would round them all up and send 
them to a country where people starve and get gunned down in the street
%
My son has always been a fan of Captain Planet. He has every episode on VHS 
and watches is roughly 12 hours a day. Recently I caught him licking Captain 
Planet's wang on the television screen while massaging his penis with a 
Captain Planet action figure. Is this normal? What should I do?
%
I am a substitute teacher for grades K-5 and I was awarded a gold star for 
starting a movement in my school for "story holes" in which any student 
could go into a bathroom and sit down and someone read them a story through 
a hole in the bathroom wall.
%
I'm an Apple zealot, I'm typing this on a Mac Mini, and I'm going to be 
clicking submit with my one mouse button. Eat your hearts out you gaggle of 
pock-marked, basement-dwelling, subhuman F/OSS advocates.
%
whistle core is actually popular in japan it caught quite well and know 
where seeing various new whistle core bands come out of the country like the 
blue mist dogs, fire in the attic, lazor beem, robo boy vs the laviathan and 
various others its just a matter of time till they hit the charts here
%
Dude you have to own one first to understand, people that hate them haven't 
owned them. I owned two and flipped them both, luxury eddie bauers one had 
20s on it and a TV inside with a ps2 man, flipped them both nearly killed 
me...But I still fucking love suvs
%
BLACK MOE YOU FILTHY SILVER TOOTHED SUBHUMAN NIGGER SCUM-TELL YOUR CUM 
SUCKING 550LB MOM TO CLEAN THE HORSE CUM OFF HER SCABBY MOUTH OR I WONT SHIT 
DOWN HER CUM SLURPING THROAT-THEN WHEN SHE BLOWS YOU-YOU CANTASTE MY SHIT
%
I have two fetishes that sort of scare me. No it's not dog sex or 
pedophilia. First is facesitting. I want a girl to sit on my face, 
preferably while mostly clothed or something because an asshole that close 
to my nose would probably make me vomit. Secondly is something called WAM. 
It's girls getting hit with pies or having chocolate pudding poured on them 
or rolling around in creamed corn. Anything Wet And Messy, thus the name 
WAM. I'm pretty sure it comes from watching You Can't Do That On Television 
as a kid. I was shocked to find out that there was actually a pretty big 
internet community devoted to it where I can find grown women getting slimed.
%
"Shh," Snape said, their mouths very close. He lifted his hand off Harry's 
erection and smoothed it over his cheek. It was a breathless sort of moment, 
in a series of moments. Harry looked at Snape's face, enjoying the sensual 
transformation. Features normally so severe softened by desire, flushed, 
glistening. Harry didn't have time to wonder what Snape saw in his own face, 
for Snape was kissing him again.
%
Remember when morgan freeman played that high school principal with the bat 
and he caught the kids singing in the bathroom and he made them sing the 
school song and the fat kid was a crack smoker. when he called all the 
trouble makers up to the stage during that assembly and they are all raising 
hell and shit and there is one white kid on the stage, well that white kid 
turned out to be none other than new jersey�s own recovering addict of the 
mafia in the Sopranos: Chris Moltesante.
%
I have always fantasized about being a doll. like one of those real dolls, 
only my owner doesn't know I'm in there. They think I'm just a doll, when 
really I am enjoying everything that is bring done to me. Having no control 
of my body, being dominated completely, and then being put away when I'm not 
being used. However, I know that this is not possible in the real world, 
which saddens me. I however I'm sure there is someone out there that would 
gladly own me and treat me like their doll. Change my outfits daily, use my 
for their own sexual desires. and then when their not using me, keep me in a 
locked box in the closet, sometimes for days at a time. Only to be taken out 
when my owner wanted to use me some more.
%
The strangest blow job I ever experienced was when I went to visit Shaq and 
friends in the locker room when he was still playing for LA.  They held me 
down while Kobe held my mouth open and Shaq rammed his elephant trunk man 
hammer into my mouth.  I immediately started gagging and throwing up but the 
meat missle was so big it held the barf back and it went into my stomach 
instead.  Then they took me into the shower and proceeded to turn me into 
the team pin cushion, it was like I was a tapestry in a sewing maching I got 
skewered for hours and I loved it.  They finished off my visit with Shaq 
punching me in the throat and taking a huge dump on my forehead and making 
me lick his balls while he decorated my skull.  It was great.  I love black 
cock, I can't get enough its like catnip.
%
Fly catching is a hobby of mine. Whenever I successfully catch a fly, I go 
into the bathroom and I fill the bathtub up with warm water till it's deep 
enough that only the head of my penis sticks out of the water. Next, I rip 
the wings off of the fly and place the fly upon the tip of my Cock--the 
penis "head". Not having anywhere to go, the cute lil fly runs around upon 
the tip of my Cock, creating a most arousing sensation.Try it yourself !!
%
I heard this story from an M.D. in Japan. It was during WWII. A bunch of 
Japanese soldiers had rounded up 3 or 4 Korean women. They proceeded to fuck 
them in every orifice, but there weren't really enough to go around. So one 
of the soldiers bayonets one of the girls in the stomach so that he can have 
a place to fuck too. The feeling was so great that the others all start 
taking turns in her stomach too.
%
no not really i just see them as mentally ill ..something thats encoded in 
their brains to love the opposite sex is backwards..and their phormones are 
fucked also..i hope science can find out a way to fix it....not because i 
dont like gays but because if u see a kid throw a baseball the wrong way 
dont u wanna help them throw it properly?
%
Before my last job interview, my hair was really messy, so I went into a 
washroom to tidy it up. But the plumbing wasn't working right, so I couldn't 
get water out of the taps. My only solution was to urinate in my hands and 
use that to do my hair. I got the job.
%
You don't think Bill will include the multiple tab feature in IE with 
Longhorn's release?  Hopefully when that happens it'll shut you Fire-fags up.
%
girl you must be harry potter because my dick is slytherin
%
Did you know that us niggers werer the first people on this planet and that 
every race in the world evolved from us we were the first developed primates 
and there were and still are great black minds like Plato, 
Shakespeare,Socrates,W.E.B dubois,Fredric Douglas........ you fail to 
realize we created you and we can take you away just as easily,we once ruled 
this world and this world shall return to its original owners like it was 
before you devils came along and fukced it up . We had great civilazations 
in Africa such as Timbuktu,Kush,Egypt,Nubia, ek cetera who taught Mathmatics 
and liturature to the greeks,Arabs,Romas,s and of course caucs after we 
civilized the world they turned around a stabed us in the back and clamed it 
there selves and take credit for what we started and every time a nigger 
moves up in high ranking yall get scared coz you know what we are capible of 
doing but our day is coming soon when that black man you know as jesus comes 
back you"ll see. oh yeah Hitler was a Fa9et and part jewish crackers!!!!!!If 
you white you aint right. black pride world wide
%
What did the recycling bin say to the garbage can? "YOU'RE A PILE OF FAGGOT 
TRASH!" , because the garbage was filled with gay porn mags. To which the 
garbage can replied, " You are a bucket of thoroughly-washed juice and milk 
containers, populated by an eco-friendly mid-20's socialist/liberal 
democratic couple who no one will ever listen to"
%
I have been blessed and cursed with two hot ass cousins. Damn what I 
wouldn't give to hit it. But I never will be able to without consequences. I 
remember one time when she was 8 she wanted me to sleep in her bed with her 
and we were going to touch each other. But I still believe in that God 
fairytale so I turned it down. I still regret it.
%
there is a gay guy in my office, and he referred to hemmrhoids as speedbumps
%
For the record, If a guy wants to rape you by combining something with 
Roofies, He's going to use something much more efficent than horse 
tranquiler or whatever you think us frat boys are using these days, a good 
rapist is going to use something along the lines of a brick. A simple slab 
of concrete is actually the most dangerous killer in the sex crime kingdom, 
one shot to the face with a brick and you will be ugly for life, and those 
effects AREN'T TEMPORARY. You will also not be able to have children for 
life, because they will be so afraid of their brickface of a mother that 
they will cower in the womb forever. If you're worried about Progesterex 
breaking out soon on campus's everywhere you should be even more worried 
about being hit in the face by a brick while sitting in your neighborhood 
bar, because unlike Progesterex, bricks are already here....BEWARE!!!!
%
whatever... come talk to me when -your- site wins a Webby
%
Go back to listening to your "Rich Dad, Poor Dad" book-on-tape in your 1989 
Honda Accord on your 25 minute commute to your dead end job.
%
So, I just got a job at Starbucks.  It's part of my plan for global 
domination. I'm going to tear the system down from the inside.
%
TIP FOR IRCERS #51: Bathe often, as personal odors are offensive to others
%
Actually, it is incorrect to call me a 'know-it-all' because God is the only 
one that knows everything.
%
The case against marijuana legalization:Marijuana is not dissimilar to other 
drugs, except in that its users seem to be rather slow witted after heavy 
and extended use. You know the type. Tobacco and alcohol have their 
disadvantages too though, so really marijuana is not too different. Except 
that for some reason, marijuana users have been unable to make a convincing 
case in favour of marijuana. They haven't won the argument at all, and their 
lack of success can only be explained by the negative effects of marijuana 
on their ability to put forward convincing and sophisticated arguments with 
the charisma and social nous required to carry the day. This leads me to 
think that marijuana is perhaps not as innocent as its advocates claim. If 
it was it would be legal, wouldn't it? But the bumbling ineptitude and 
stupidity of the typical stoner campaigner is a damning indictment of the 
negative effects of marijuana.
%
You are either for the expansion of growth of the human population off the 
earth and into space or you are for mass murder and restricted personal 
liberty to control population growth here on earth.
%
Are you wealthy?  I'm just curious if this influences your thinking.  Is 
your household income above the median of $51,000/year, or closer to the 
90th percentile of household income of just under $125,000/year?
%
I was staying in this guy's apartment and I heard people having sex above 
me. The moaning turned me on so I whipped my tool out and whacked it. Later 
I found out the girl upstairs was being raped. I masturbated to a girl being 
raped. How sad is that? Should I feel guilty? Who knows. It's not like I 
knowingly did anything wrong.
%
Y'know, I may be a lame furry faggot but I bet you I can do stuff you guys 
can't do. I'd like to see any of you guys make it as a professional poker 
player :)
%
I started using Linux as a total n00b.  I've done nothing but fixing, 
adjusting, fixing, updating, trying, fixing, and oh, ... fixing - AND I LOVE 
IT!!!
%
you have to be on malt liquor to fully appreciate it. To the average 
american negro, slightly buzzed on malt liquor and dazed by the media 
stimulus of sports and bigscreen TV.. The phone, and the ability to 
communicate, even in the typical monosyllables of the subculture, is a 
complete novelty. Thus, the "wazzup" commercial represents the wonder and 
happiness that a group of young negroes finds in using the technology
%
GET ME TWO HORSES WITH THE BIGGEST FUCKING DICKS YOU CAN FIND, AND THEM IM 
GONNA SUCK OFF ONE, WHILE JACKING OFF THE OTHER, AND IM NOT GONNA STOP TILL 
IM BATHING IN BUCKETS OF CUM
%
the only solution is to go up there with your katana and show them who wears 
the kimono in your dojo
%
My uncle works for Capcom and he let me play Street Fighter 4: The 
Wreckoning and it has Sheng Long in it and he can do Guile's Handcuffs and 
his wife is Blanka's birthmother and you can do uppercuts in the AIR (also 
Breakfastalities)
%
RIP klerck!! :-(
%
Stone Cold Steve Austin just took you in his arms and superslammed you in 
your bed, then read you a bedtime story and turnbuckled you into the shower 
the next morning while suplexing the milk into your Captain Crunch cereal
%
fuck ya dude, ya site sucks crap, you be dissin us clowns u gona git beat 
DOWN, u fuckin wit da Juggalo NATION straight up ya hatah biatch u betta 
xplain youself becuz u gotta a lotta clownz ready to beat ur azz
%
i dont like the way you try to act like you're too smart or you're above 
everything and hatred makes you stupid... no it doesn't and ur not above 
this. ignorant is nothing but a word.... fake ass mother f-ucker is a mood 
that you portray. gay is an expression used by us nowadays doesn't mean 
literally gay. i should smack you for not knowing that. and yes it does make 
them gay
%
I've spent far too much time absorbing bullshit ideals from anarchists. The 
truth of the matter is, I just don't want to pay for anything whatsoever. 
Britney CDs should be free because I think that somehow the constitution 
protects my illegal copying and distribution under some freedom of speech 
law or fair use act. Even though I don't have to go out and buy luxury 
items, I'm gonna whine and bitch anyway.
%
Oh u FUCkIn RaCISt BItCh Dont b TalkIn To mA Kuzin LIKE DAt. u FUCkIN 
TRiFoLIn IrISh diCK SUCkER...~N~ 1st of all i dont Why u tALkIn ABOut pEopLe 
WHen UR Azz Iz ugLy Azz FUCk..1st U NeeD 2 b CheckIn ur Self den Talk BOut 
PeopLe..! Dont hate Juz BEcause oTha PEOple COuld Eat MOre Than u Can n not 
get F-A-T .. n because people are Prettier dan U..!
%
hi, i recently read about sex with insects and fine it fasinated me.i went 
to a pet store and bought crickets. taking them home i put some in a jar and 
lowered it over my cock and balls. the sensation of them crawling all over 
was overwhelming and i orgasmed quickly. is this normal???
%
I was wondering if anyone knows of surgeries that can correct elongated 
labia, or if there's anything you can do to make them look more normal.  
They look disgusting to me.  I'm not a chick or anything, I just really hate 
this.  My girlfriend's "axe wound", if you will, looks like a bloated sea 
zombie.  Thanks in advanced.
%
girl you must be real networks because i cannot get at your media without 
installing this ridiculous software
%
What's up with black people and sandwiches? It seems like every time I see 
some illiterate welfare monkey jiving his ass down the street, he is busy 
cramming half of a submarine sandwich into his ape-maw. Is this some kind of 
nigger code for the imminent helter-skelter racewar?
%
I KNOW I JUST GOT HERE BUT YOU ARE ALL JUST THE COOLEST PEOPLE IN THE WORLD 
AND TOTALLY JUST LIKE ME!! WE SHOULD BE FRIENDS FOREVER AND THEN I GET OPS
%
Why fuss with KDE when you can buy an Apple?  Why futz around with this? If 
you want state of the art GUI, why not just buy a Mac? KDE may emerge as 
great interface for your cell phone; but at the end of the day, it's just a 
toy. Serious Unix developers are switching to Apple.
%
Of course you can get sick from eating poop. But you can get hurt and die in 
an automobile wreck, too. Do you plan to avoid cars in the future? Of course 
not. Knowledge of the consequences deters few cigarette smokers.You can not 
catch any disease from the shit you eat that the donor did not have. My 
"quality control" standards have served me well and I don't even know who 
the donor was much less which diseases he had.Remember, not all shit is 
created equally. Some shit really smells and tastes bad! More specifically, 
a harsh acrid "smoky" odor and very bitter taste I consider bad. If it looks 
bad or lacks the classic grogan appearance, I'd say lose it in a hurry. The 
problem with being a bottom is that you can not be selective about the shit, 
it comes prepackaged :-) Not always [usually not] the kind we'd like to 
have. If you decide to proceed anyway, the most dire health consequence is 
probably hepatitis, of course you can't get it unless he has it, in which 
case you may get it from kissing, sucking, or rimming, etc.; so don't just 
blame the shit. You can also pick up parasites and amoebae. If you get an 
upset stomach, Tumms will usually help. I'm HIV negative, even after all 
these years of eating shit from thousands of guys mostly anonymously, but I 
have to admit that I have had to take Flagyl once or twice, and even now, I 
clean myself out a couple times a year with Noroxin [one tab a day for 5 
days].If you have a problem and it lasts for more than five days or have 
very severe symptoms: see a doctor and don't be bashful about telling him 
what you did. It is wise to establish a good relationship with a physician 
before you need one! You can avoid a lot of expensive diagnostics by just 
suggesting he prescribe Noroxin or later if that doesn't work Flagyl.A final 
thought here. Your toilet training and societal taboos are frequently 
sufficient to cause you to worry or feel guilty after your first scat 
experiences. This can cause you to conjure up psychosomatic illnesses 
limited only by your imagination. Know yourself and be aware that this may 
be a problem.
%
Need to be taken to dark side, expermented on, brought down to sub human 
level. Have swallowed dog shit. Gotten into extreme pain. Had balls severly 
abused and tortured. An y other sub humans out there need it as bad. Any 
evil tops really into bringing a guy down? any other guys into blood?
%
girl u must be muslim cause im jihard as hell
%
Mathematically speaking, it would appear that you were a 2:1 favorite to 
find the page you were looking for. Your click was questionable though given 
the odds and the fact that any content on this site is likely to be crap 
anyway. I wouldn\'t say that you.re a poor web surfer but I think it.s 
highly unlikely that you could be a long term winner at higher stakes web 
surfing.
%
go back to tabulating your ultimate apple dream machine on apple.com then 
playing snes all night
%
Never clean up or shower here. The dried shit flakes off my body and 
sometimes i'll brush a bit out of my beard. My head is shaved so it just 
flakes off there too. Hell yes, I STINK. And my mouth smells like a sewer. 
That's theway I like it! I may clear a few people out of a room when I walk 
in but I haven't been thrown out of a Wallmart yet.
%
I shit into a tupper ware. I also like metal containers like the ones you 
use for camping or in the military. then i freeze them or keep them in the 
refrigerator for a few days. if you really seal the container tight, the 
shit can be stored much longer. Have you ever tried to shove a frozen turd 
up your ass? that is really hot, fuck yourself with your own turd. cool
%
I, too, prefer anyone I'm messaging to be literate and admit to a sneering 
contempt for people who can't seem to break out of the "cute" Internet 
misspellings and shortcuts. Children, grow up.
%
I got my 10 year old niece drunk and then penetrated her with a sharpie. I 
later found out that the penetration had ruptured her vaginal walls, and her 
mother accused my broher of being a child molestor as grounds for divorce. 
He lost the case, and is now serving 20 years.
%
I'm not really gay, I just act that way to annoy/creep out people.
%
There is no god, because if there were, when my time of sorrow began, he 
would have been there to help me. Why do I have an illness such as 
depression, if supposedly god makes everyone that loves him happy? Fuck him 
and his false offers. Fuck religion!
%
Greetings nerds.  As you can clearly see, my Slashdot ID is far lower than 
any of you can dream to have.  Therefore all comments to this interesting 
and controversial article will have to be replies to my comment.  If you 
fail to do this, I will search out your every post and mod them accordingly 
with my vast amounts of accumulated mod points.  You have been warned.  Good 
day.
%
BLOGGABLES ??? THE BLOGOSPHERE ??? BLOGOMATIC ??? SIMULBLOGCAST ??? ECOBLOGS 
??? METABLOGS ??? BLOGS OF BLOGS ??? MEDIABLOGS ??? CATABLOG ??? UBERBLOG 
??? BLOGSERVATION ??? RADIOBLOGS ??? BLOGSPIRATION ??? BLOGDEX ??? 
BLOGDIGGER ??? BLOGLINES ??? BLOGPULSE ??? BLOGRUNNER ??? BLOGSNOW ??? 
BLOGWISE ??? BLOGBRITY ??? BLOGS OF BLOGS TALKING ABOUT BLOGGING BLOGS ???
%
woah! way to be sexist. i'm a girl hacker and exclusive linux user since 
1998 and i'm certainly not alone
%
IMPORTANT NOTICE: anybody that has Windows XP 5.1 2600 release from 
Devilsown, FCKGW-RHQQ2-YXRKT-8TG6W-2B7Q8 - GET OFF THE INTERNET NOW!!! 
MICROSOFT IS ABOUT TO DO A SWEEP!
%
son, if you were a true music fan you would know that no good songs are 4/4 
go play with your fucking casio.
%
I got a 5+ on all 23 of my AP tests, a 2400 on the SAT, a 1337 on the ACT, 
but it's not a big deal since I have a 270 IQ. I was drunk, high, and 
getting a blowjob during every test, and I didn't study for any of them or 
sleep in the prior weeks.
%
I dont even know what indie rock is, but it sure as fuck isnt going to get 
you play with any of the girls I hang out with.
%
Okay, let's break it down, people.If you're a guy there is no such thing as 
bisexual.There is only straight and gay.If you willingly touch a dick then 
you are gay.If you willingly let a dick touch you then you are gay.If you 
score anything other than zero on the Kinsey Scale: Gay.If you experimented 
once when you were young and got married to a woman and had children and 
lived a happy productive life forever after: Still gay.Yes, we know that you 
don't like to be called gay but you chose the dick, now sleep with it."Bi" 
is not different from gay it is just what homos call themselves.You can call 
yourself a "striped bass" for all we care folks, you're still filthy faggots 
and you're going to hell!!!! God isn't fooled.
%
Why must you trolls come to our forums and post stupid shit trying to rile 
us up?  Your posts don't even bother 99% of us, so just quit it.  Any one 
who agrees with me post the number "1" in this thread.
%
I am a node of server. Born of flesh and blood, but enhanced by the power of 
its web. I have no use for pain or fear. My scripts are a focus of my will. 
My strength is my knowledge. My weapons are my skills. Information is the 
blood of my body. I am part of the greater network. I am host to the vast 
data of server. My flesh is weak, but my connection is eternal; And 
therefore, I am a god.
%
TO ALL THE BITCHEY 12 YEAR OLD SLIPCOCK FANS..PLEASE SHUT UP BEFORE YOU HURT 
YOUR SELVES CRYING BLACK EYE SHADOW TEARS OF RAGE OVER MY 
COMMENTS..OBVIOUSLY YOU NO IM CORRECT OTHERWSIE WHY WOULD YOU SHIT THAT MANY 
TIMES IN YOUR PANTS OVER MY LONLEY COMMETNS!!YOU FUCK HEADS SHOULD SHUT UP 
,QUIT SCHOOL(if you havent allready cause the kids dont ''get'' your 
wigger,crack smoking nigger/jew fucking, garbage smelling italin ass) AND 
GET A JOB AT THE CARWASH QUICK BEFORE SOME SPIC WITH A BETTER TASTE IN MUSIC 
GETS THE JOB!!!I CAN JUST SEE IT NOW THE SLIPKNOT CONVICT IN HIS ORANGE 
OVERALLS PICKING UP MY USED RUBBERS ON THE SIDE OF THE HIGHWAY LOL!!!!ONE 
GROWN MAN CAN TAKE OUT 20+SLIPCOCK WORSHIPERS MOST OF THEM ARE GIRLS ANYWAYS 
SO MAYBE THEYLL GET A NICE RAPE!!!AND THEN GET THROWN OFF A FUCKING BRIDGE 
ONTO YOUR FAGGOT GHETTO SHIT HOLE OF AS HOUSE!!!I WILL MAKE SURE TO TAKE 
PLENTY OF SHITS ON THE HIGHWAY AND LEAVE FILLED RUBBERS FOR YOU FAGS WHEN 
YOU GET ON ''JUVEY''FOR ONE OF YOUR PETTY CRIMES!!!ENJOY YOUR FREEDUMB WHILE 
IT LASTS YOU FUCKING NIGGERS!!!YOU WILL BE SITTING IN SOME JAIL SOON WRITING 
TEAR FILLED LETTERS TO COREY TAYLOR OR YOUR GRANDMOTHER!!!HAHA ..IM OFFF TO 
WATCH SOME FRESH PRINCE OF BELL AIR..YOU CUNTS IM SURE ARE OFF TO GET 
''BLAZED''AND HAVE CRACK ADDICTED BABYS AT AGE 13 GOOD LUCK IN YOUR SHIT 
HOLE LIVES NIGGERS!!!
%
fuck you sXe faggot ass niggers. yeah i said faggot and nigger i guess and 
racist and a homophobe huh. yall are all fucking scenesters that probally 
fucking stand on the out side of the pit with you little Xs on your hands 
trying to be hXc but really your just stupid as shit. do we walk around with 
fukcing Os on our hands if we do drugs. give it a break its all a fucking 
trend arent you just so rad to claim edge i wish i was that cool oh well to 
bad me and your mom did heroin last night together. so all in all i guess im 
saying FUCK YOU TRENDY ASS PUSSY BITCHS. sXe is not cool dont claim it be it 
you fucking anal cunt.
%
Hey guys, I'm protesting those starfield screen savers. Aren't screen savers 
supposed to protect your monitor from getting the image burned on? What if 
you permanently get stars flying on your monitor, that seems like it'd be 
worse than something useful like your taxes. Morons.
%
Watermelon represents the ripe breasts of white women which the negro wishes 
to rape, while the green color represents the money he wishes to steal. The 
dark bands on the melon represent the bars of a jail cell, the negro's 
ultimate destination.
%
Hello my name is Brad. I am gothic, and proper. I dress in all black all of 
the time. I talk very intelligently by using large well articulated words. I 
really don?t like Internet ?lingo? that much. I never understand what the 
fuck it means, and really, ?l8ter?? Come on...LATER. Is it really that hard 
to type? I do also wear makeup which includes eyeliner, eye shadow, 
lipstick, etc, etc.
%
Girl you must be London because I want to explode inside your tunnel
%
out all day, in a series of events culminating in MY BAND'S FIRST 
PERFORMANCE AT HAMILTON STREET... holy shit dude.. i am gunna be so nervus 
lol.  ever sense the two weeks wwe have been practicing in my stepdads 
garage are band has ben waiting for this night and my entire 3rd period 
Algebra class is totally coming i hope we score some pussy and some weed lol 
lol fukkin kickass.... we are playin all of our originl stuff including song 
titled "Party Party Party" in D minor, "The Song About The Girl Who Wouldn't 
Dance With Me At Homecoming" (tentative title) in D minor, and "Beer Is Good 
Girls Are Gay" in hmmm in hmm well lol ok that 1 isnt in a key lol im not a 
fukkin musik queer how shuld i kno anyway i hope to see u all their to 
experiense the thrill of our decibles
%
If there is one thing that OSS has shown, it is that full time software 
teams do not produce better quality products than the amateurs (example: 
Linux v. windows)
%
If Microsoft gets rid of that millions lines of spaghetti code in Windows XP 
(expect the same in Longhorn 2006 & Blackcomb 2112) and comes up with a 
brand new efficient system that equals the Apple, Apple can finally be laid 
to rest. After all Microsoft is the standard, like the Qwerty keyboard. You 
are going to have to live with Microsoft and those millions of lines of 
spaghetti code for some years to come.
%
I went to some IP that should have taken me to a warez server and it took me 
to one with a lot of porn and banners :(
%
It appears as though Robert Hanssen, the American FBI agent accused of 
selling American secrets to the Russians, was a registered Linux user!!! 
This is further evidence, as if any more was needed, that Linux and 
communism are inseperable, and that anyone using Linux is supporting the 
communist murder of millions!
%
Final Fantasy? Please. The game is slow and repetitive. Meanial tasks such 
as just finding your way out of a cave can be extremely difficult. Also, you 
must power up / gain levels buy engaging in mini-conflicts throughout the 
game. These conflicts require NO eye / hand coordination, are extremely 
tedious and occur about, oh, every 1.5 seconds. If you enjoy games that keep 
you moving and require "gaming" skills, stay away from this game. I enjoy 
the idea of a "Fantasy" concept, but, personally, I would much rather read 
Tolkein than spend 5 hours running around in circles trying to find an exit 
from just one screen of this game.
%
Longhorn? More like shoehorn, the way they're trying to cram all these new 
"features" into it.
%
Haha, you NSYNC lovin' assholes really got burned this time.  Why can't you 
just shut your mouths and accept their demise??  They are all losers.. JC 
has to share that woman from Desperate Housewives with 3 other guys.  And 
Justin, oh my gosh, he isn't even man enough to hold on to Britney (and 
judging by her new husband it shouldn't be that hard).  I'm just glad Back 
Street Boys have released their new album.  They were the original band that 
every record company cloned.  Just goes to show you the true acts are the 
last acts!! BSB 4ever!~
%
One time I was masturbating in the closet and my brother walked in but he 
tripped and his mouth landed on my cock and he was yawning but I was almost 
done and at that point the burglar alarm went off and I came and my brother 
tried to get up and run away but his pants got caught on the door and tore 
off and he fell backwards onto me and my mom walked in and saw it it was 
horrible.
%
I swear i must be the only person that can use IE and not get all that crap. 
I bet its because i know not press the X button on a popup...Yeah i bet 
thats it. Oh and i dont go to a warez sites like an idiot.
%
im poor by choice fag. living in the mud just to get away. if i want money i 
can get it peice of piss
%
ObjC is able to use C code directly without change. That's why MS is pushing 
C# - it makes it harder to port code to OSX. With Windows projects done in 
C, most of the code can remain unchanged. You just add a little ObjC to 
handle the system stuff. With C#, most of the code must be completely 
rewritten.
%
only furries have faggoty butterfly and angel wings, us gargoyles have real 
mans wings
%
girl, you must be herbal essences because masturbating with you is a totally 
organic experience
%
Hey guys. I just came from Best Buy with my dad and saw this a-ni-me called 
'Neon Genesis Evangelion' and my dad let me bought it, so now I have it with 
me but I've been reading about it and they say there is nudity in it. I'm 
not sure if my parents will allow me to watch it, last time they found my 
Hentai folder they changed my parental controls to Young Teen for a month. 
It's not fair. I'm 19. I'm hiding my Hentai in Documents and Settings now.
%
there are 2 bits in bathroom binary. a number 1 (01) is taking a piss. a 
number 2 (10) is taking a poop. a number 3 (11) is a shitpiss where you poop 
and pee at the same time.
%
How about the enviroment?  Canonical clearly does not care much for 
enviromental protection.  The amount of Ubuntu CDs they have dumped in the 
past is unacceptable.  They have reached AOL quantities.
%
Don't obscure the topic at hand with "facts". History has always been made 
through quick, instinctual choices. Intellect is nothing but a distraction 
when it comes to life shattering situations. Look at how it has defined our 
history. Do you think I am about to turn away from the legacy of generations 
before me? Alternative methods take longer, and never completely solve the 
problem. It is easier for the mass populace to attack a problem 
straightforward. Consideration for things slows down the pulse of results.
%
Oh man oh man. There was my dad, pissed as all hell dirty and oily in his 
work clothes yelling at the little pimple faced manager. "Sir we can't 
replace your monitor because you did not purchase it here." "I BRING MONITOR 
IN AND YOU FIX, THEN YOU DROP AND EXPECT ME PAY, I DO NOT THINK!!!!!!!"  
After about 15 minutes of this we walked out of there with a brand new 15 
inch packard bell. Then I went home and played wing commander 2 till I got 
tired, masturbated to sailor moon porn and went to bed.
%
Everyone else in the classroom was laughing at me. Due to my weakness, I was 
unable to push him away. I tried to wiggle my mostly ornamental white velcro 
shoes but that only encouraged him. I was thrown from my wheel chair and 
rolled onto my back. That's when the torture started. That day I was 
violated with every pen, pencil, crayon and glue bottle those insufferable 
retards could lay their malformed mitts on.
%
faggot! get the fuck out of here. we don't take kindly to you people around 
here. you're worse than the niggers. at least the niggers are predictable - 
they just want to make illegitimate children, eat fried chicken, and steal 
cars - you faggots, who the fuck knows what you're going to do next?
%
I have been testing Longhorn prereleases for weeks now and I have to say 
that it's extremely buggy.   Micro$oft has a long way to go before they 
catch upto Apple.
%
i have a girlfriend who was raped when she was in high school. not only that 
she got molested by family member. even though it has been 8 years since 
that happened, she is still disturbed and when she sees something on tv or 
movie that remind her, she cries. at which point i rape her. what a whore!
%
Wee! Look at me! I'm a faggot masochist with my faggot masochists' OS! Look 
at me! Look at me! Look at me! I can't play WMVs! Ain't I cool!
%
I can't believe I just took a shit in my Wookie costume at the Star Wars 
convention. What the fuck? I can't stand up and take it to waste chute 
because I am literally wading in a feces-filled fur suit at this very 
moment. Any change in battle stance would send this rancid bantha poodoo 
spilling down my legs and into view of every Jedi Knight within 30 feet of 
me. There is no way I can play this off as a fart. It doesn't help that I've 
eaten nothing but doritos and pepsi for the passed 3 days. I can hardly 
think straight! How am I possibly going to explain this to my mom when she 
comes back from the store to ask me what the fuck I just did in the presence 
of Boba Fett. She'll make me drop trau in front of everyone again. There it 
is. The Ewok at the signing booth to the right of me just asked if I could 
smell 'that'. I gotta go.
%
Christianity was founded and propagated by Jews. It is also the source of 
Western art, morality, and science.
%
Your argument is not very compelling. Everyone knows I'm not here to "get 
down", I'm here specifically to crush you in debate and I'm not going to 
spend much time here either as I am quickly dulled by this sort of thing.
%
A note to the idiot who keeps sending me anonymous emails claiming to have 
"f*cked" my mother: 1) Do you really think i don't have your IP address and 
have a relatively good idea of who you are? 2) Do you really think I care 
about your weird sexual fantasies? 3) Have you even SEEN my mother? HAHAHA 
4) Keep it up. The messages are being logged, stored and passed on to the 
relevant authorities and, of course, your ISP... 5) I know where you are.
%
I masterbate using a Johnsonville 'Cheddarwurst' in each hole and a vibe on 
my button.  I have acheived 48 orgasms in two hours with this technique.
%
I used to find ways to jack off around my mom while she wasn't looking. I 
have even shot off onto her while she was asleep at night and my dad was at 
work. She was a heavy sleeper and it wasn't any problem to gently uncover 
her and wack off right in front of her. I have even gotten completely naked 
and stood on a kitchen chair I pulled up next to her bed and blew my load 
completely across the bed, never hitting her with any of it all. The time I 
remember most is when I came home drunk (again) and she was already asleep. 
I got totally naked and went to her room. Luckily, she was completely 
uncovered and snoring like a cow. It was like I had special ordered this 
because she was laying flat on her back with her knees folded out like she 
was expecting me. I looked at her tight little panties and could see the 
split plain as day. She kept a letter opener on the night stand next to her 
bed for when she opens the mail each night before she goes to bed. It was 
the kind with the razor blade in it. I used the letter opener to cut her 
panties right across the crotch. I jumped when they snapped apart. I wasn't 
expecting that. Mom never moved. She just laid there snoring like a bear. I 
thought to myself this was too good to be true. And since I was already 
naked, I thought about how I could slip over top of her and try to touch my 
dick to her open pussy. I knew I couldn't actually stick it in her without 
waking her up. I must have tried ten times to get on top but couldn't do it. 
I did, however, manage to actually lick her pussy(very lightly at first). 
After a couple of licks, I got brave and put my toung inside a little bit. 
Once I did that, I knew I was pushing it so I eased off the side of the bed 
and jacked off standing as near her face as I could without waking her. I 
wanted to shoot my load on her face but I chickened out. I turned toward her 
still open legs and tried to blow it on her pussy. I did manage to get it 
all over her leg. She never budged. Sometimes I think she knew the whole 
time and just let me get myself off because she may have actually liked it. 
I sometimes wonder if she had always known when I was doing my thing around 
her. I got away with things you could not believe sometimes. I even put my 
throbing swelled dick in her hand once while she was sleeping in the 
recliner watching television. I didn't keep it there long but it was enough 
for me to go to the bathroom and beat off like a fool.
%
I was sitting alone at home one night, curled up in a blanket on the couch. 
I was watching "Sex in the City" and I heard a knock at the door. I got up, 
and looked out the peephole. It was Kobe Bryant. I was very surprised, I do 
not know him personally. I opened the door and let him in, because hey, its 
not like a huge NBA star is there to rob you or anything!  After he stepped 
in the foyer, he grabbed me and made me swallow my chewing gum. I 
immediately blurted out that was a horrible thing to do because it will stay 
in there for 7 years! Kobe began laughing incredibly hard, then grabbed me 
again. Before I could even scream, he was ripping off my pants and lowering 
my panties, "jamming" his enormous dong into my tight, but willing cunny. He 
truly began raping me viciously in every hole, but it wasnt rape. I hadn't 
had sex in the past year, and I really needed this. Especially from such a 
well endowed man.  As he thrusted in and out, he picked me up and moved me 
into the kitchen. I didnt have any idea why. He opened the freezer and 
removed my frozen pre-made chicken nuggets. He popped them in the microwave 
and continued his sexual escapade.  Kobe began sniffing loudly, pulling in 
immense amounts of air through his huge negro nostrils. "Whats wrong, Kobe? 
Keep Thrusting!" I yelled, as I was nearing climax. But he continued 
sniffing uncontrollably. He then dropped me on the floor, reached in the 
microwave and grabbed the plate of nuggets.  The worst thing ever happened 
next. He grabbed each nugget, smelled it, licked it, and then jammed it 
right into his anus. Before long, Kobe's anus was full of Tyson's very best 
nuggets, and I was masturbating to my second climax (I, however, did not 
notice him doing his thing with the nuggets). The next thing, however, was 
what shocked, surprised, and scarred me for life.  Kobe walked over to me, 
and said "Ya hungry?" I said "Were you cooking those nuggets for us to eat? 
How thoughtful of you!" To my surprise, he said "No way bitch! Now eat up!" 
and he sat right down on my face and began to shit the nuggets, one by one, 
into my mouth. He exhibited amazing anal control, and surprisingly the shit 
encrusted nuggets tasted fabulous. Kobe has been coming over whenever the 
Lakers are in  town for the past year ohh yeah.
%
i hacked into an airline's computer systems and stole a huge bunch of 
frequent flyer points then traded them in for merchandise and got a sony 
playstation 2
%
HEY BABE WHO WOULD WIN PIRATES.... OR NINJA???  ALSO NOTE I DID NOT USE AN S 
BECAUSE NINJA IS JAPANESE AND THEY DONT HAVE PLURALS DO YOU LIKE JAPAN
%
It was only -after- I took the lethal dose of aspirin that I realized I 
couldn't find my Evanescence CDs anywhere!! My elaborate suicide plans were 
ruined, but as you can imagine I am quite used to disappointment... so 
sleepy...
%
Don't you dare talk to me like I don't know my profession.
%
Congratulations, prick, you've just made my ignore list. Was it worth it to 
you to make your "witty" comments and snide in-jokes to your irc pals about 
me if it meant you are now disappeared from my online experience? Have a 
nice life.
%
A computer scientist?  what are your credentials as a scientist? How have 
you furthered scientific knowledge? I am a scientist. PhD in space science, 
as a matter of fact. A veritable rocket scientist. I have also developed 
software for the last 25 years. I have headed software projects and 
delivered software to some important customers, including the DoD. So 
forgive me if I take exception to some programmer hack calling himself a 
scientist.
%
"Star Wars" was the highlight of my abusive childhoo. My father brutally 
belted me frequently, and the rest of the family, a term which I use very 
loosely, just hid what he did to me.
%
Doesn't matter.  Once the US housing bubble collapses there will be a total 
economic collapse. Companies like Netflix and Amazon will go bankrupt as 
Americans just try to save enough for food
%
I think that the present lack of comments on this article, combined with the 
subject matter of this article, speaks volumes about the so-called open 
source community.
%
girl you must be Frogger because I would cross rush hour traffic and 
cascading rivers in order to hop in your hole 6 times in a row
%
If you want to make full use of your hardware use Windows. If you want to 
waste days trying to get an alpha OS to work with hacked drivers and 
illegally reverse engineered applications mostly written by ugly teenagers 
who stop doing it once they get laid then by all means use Linux.
%
it's so weird seeing Obi Wan Kenobe playing Alfred
%
girl, you must be an HTTP status code because all i'm getting is: 402 
Payment Required
%
I hate when people think they're saving the world just by riding their bike. 
It's like those black and white couples that think they're fighting racism 
just by fucking each other.
%
Your a stupid fucker. You know no one gives a shit about what you say. Pipe 
down and go check on your emerging gentoo box -- ooh i think your 
_ricer_kernel_ just finished building.
%
one time i killed this hippie and scraped the resin off his lungs and i died 
of a weed overdose
%
For instance: throughout all of my time in elementary school there was this 
one kid who would go to the bathroom so he could poop. But he had a phobia 
of water splashing up his crack or something like that. I say this because 
he would go into the stall, take down his pants, and while still standing, 
proceed to shit on the floor right in front of the toilet. It was weird when 
you would go to the bathroom and you would see a burgundy loaf on the floor 
of the bathroom. And it was always in the same bathroom.
%
I'm not perfect in english, but I was on college forums when I was in 
college, and you wouldn't have lasted two minutes with anyone with your 
kiddy type gibberish.
%
Stupid internet faggots get obsessed with the most inane things. If it's 
from Japan or runs on Linux watch the fuck out cause these losers will act 
like Jesus appeared on Earth.
%
there is no such thing as hardcore gaming, anymore then there is anything 
extreme about mountain dew livewire
%
Sometimes when I get bored I stick screw drivers in my piss hole (preferably 
phillips head) Then I thumb around my sphincter with my womenlike finger 
nails scraping the days left overs and sniff it for 10 minutes.
%
since blacks have bigger wangs... do black chicks have bigger holes?
%
As a professional shrink, I was appauled while observing Tom Cruise as he 
underwent a complete alteration of personality on national television. 
Although his aggressive display did not make me think him gay, I certainly 
wondered if he was forgetting his Lithium or if we were watching one of his 
alternate personalities! Truly mindboggling behavior!
%
Her lips bit onto his, opened, and began force vomiting shit down his 
throat. Her fingers dug deep into his flesh and John struggled as Kihnda 
pulled him down. Into the toilet, into her kind, warm love, where they could 
be forever. John tried to break free. He didn.t make it. The shit was too 
strong. His penis still erect, a die-hard pervert to the end, loving every 
last fucking minute of it, John drowned in his cannibal leavings.
%
i wipe turd on my tallywacker.  im not happy, sometimes i touch my mouth 
after playin with faeces. i think i have syphalis or scruvy..god bless 
triffle, i put my balls in triffle....my pubes are 4 inches long.
%
Fucked in the ass non-stop, ream my hole, with a helicopter prop, I love ass 
fucking, yes it's true, I douche my ass nightly, so there's no poo. I'm a 
fanatic faggot, I love to get raped, got my dad's camcorder, to get it all 
on tape. My sphincter's so loose, all my movements are butt juice, in the 
war of fists and my ass, there can never be a truce.
%
Liberals deserve to be KILLED.  Shot dead. Hit in the head with baseball 
bats, hatchets, axes or even ice picks.  Hung by their necks from the 
nearest lamp post or tree.  Liberals are the scum of the earth. Whether 
they're in the UK, US or anywhere else,  I advocate extreme violence against 
liberals!  The only good liberal is a dead liberal.
%
I shat on my keyboard today. So I was vaccuming my keyboard to remove the 
dried up man juice of my past expeditions into trannybooth.com. I was 
playing with different settings on the cleaner, and noticed how it produced 
keystrokes when it was blowing. It made me wonder - was my own fart strong 
enough to type something? Being the experimenting type, I went ahead and 
pulled down my pants, positioned my ass right above the keyboard and let out 
a thunderous one. Turned out my bowel had decieved me, for along with the 
gas came hot chunks of shit. My computer started beeping like crazy as a 
huge log pressed down on the function keys. My keyboard went friggin 
shit-brown. There it was, a steaming turd right across my home row. I had to 
use fucking motor oil to clean away the fecal matter. I don't know what I'm 
going to tell my sister when she finds out the keyboard smells like crap.
%
i don't care if you premium member, i will ctl+alt+dlt u / you little fuck, 
i've got year old posts bigger than u/ before i lost weight, back in 
ninety-eight/ you was wack posting over at gbs i seen u/ then you came to 
FYAD, switch your demeanor, well - we don't believe you, you need more 
people/ troll phds of the game, we passed them classes; nobody could read 
you 05 dudez like we do/ don't let 'em gas you like lowtax; he'll harass 
you/ trust me on this one - i'll e-detach you/ hand from keyboard, eyes from 
screen/ they'll have to hold a cybervigil, put your webcam live stream/ no, 
you're not on my level get your mouse tweaked/i posted what ya did all year 
in my first week/ (chorus) niggaz'll hijack your post, make you report to 
admin/ your faggot topics i'll unpin, make your drives spin and spin/ we 
bring - humor to ur thread, kill your bullshit drama/ too much bytes for ur 
modem, go run to ya momma/
%
Flopping and flailing, tugging and yanking, rolling my micro-burrito between 
my thumb and forefinger, I desperately Google "Hairy Asian Pussy"... "Big 
Black Tits"... "Shaved Mature Naked"... but am unable to focus on any single 
image long enough to construct a suitable fantasy. I click rapidly from one 
photo to the next, accidentally smearing vitamin E oil on the keyboard and 
mouse, all through the night until morning's cruel  rays mock my soft, 
greasy loins.
%
one time i smoked so much weed i got to like level 99 of being high then i 
kept smoking and my high reset back to level 0 and i was perfectly sober 
except my hair turned yellow
%
STAR WARS  EWOX  JEDI  X-WING  GREEDOO  DEATH STARS  ANAKIN VADER  JABBA HUT 
 LIGHTSABERS  VULCANZ  HAN SOLO  AT-ATs  PADAWAN  YODA  ITS A TRAP  CP30   
CHEWIE
%
Your theories interest me and I wish to subscribe to your newsletter.
%
Also, if you have ever billboarded a request (posting a request more than 
once in order to have it more visible) then you are in my killfiter as well. 
 This is nothing personal, I just need to filter abuse in order to enjoy 
Usenet.
%
Do you really think that KDE is completely under GPL? You are either 
uninformed or a troll.   I think you are a troll who tries to say "If KDE 
was under BSD license, Apple had not given any modifications back."
%
Did you know? There is scientific proof that bipedal creatures similar to 
modern day wolves, cats and horses existed and even had their own 
proto-languages. It is theorized that today's "furries" are the offspring of 
these ancient races.
%
The lolly is a phallic symbol. It was invented by man in his eternal quest 
to subjugate women and dominate them by teaching children the act of 
fellatio at a young age - especially female children. To have equality among 
people, we should eliminate such travesties of recreation. But lollies are 
too deply entrenched in our society for them to be removed without much 
harm. Therefore I propose to balance the situation by introducing a new type 
of lolly - it shall contain two sticks instead of one and to consume it, 
people must spread out the sticks and lick in between, symbolising 
cunnilingus.
%
I can't believe that you banned my firneds computer along with my work one. 
What the fuck dude. Can't you fucking deal. I really have no Idea waht the 
fucking beef is with me.Really you fucking one. I no longer post during the 
day. I look at the site once a week if that. Really. If you see that fake 
persona only had 12 post over 2 months. THat is rediculus for me. So really 
fuck you. I can't believe that you banned my friends computer cause i posted 
on it. What did you want me to do.Worst part is that I have had convoy's 
with you on the other board and I know you have had no IDEA who I am.Man 
dude get in touch with me and lets hash this shit out. I am sick of this 
shit.Better yet call me so I can bitch you out over the phone and get this 
over with..Ps. I am not crunk right now just drunk and go ahead and bann 
this IP addy wile your at it you fuck head.
%
This has to be the most pathetic attempt at flaming I've ever seen. I was 
laughing, so if that's what you intended, congratulations, otherwise, 
perhaps it would behoove you to find out what autism is before make stupid, 
unwitty posts about sufferers of the disease. Now, if you'd like to try to 
flame me, make it a real flame.
%
Well, I can't waste all day in this IRC. Gotta go to a T5 meet for some 
training. Gotta place high in this years TiT and Evo2k5 tournaments. (Tekken 
5.) See ya guys. :(
%
I've been foruming for ten years, been a moderator / admin of forums and all 
that. It gets old after awile. I enjoy trolling shitty websites more than 
anything.
%
When I got home, the dog looked like it needed some more sex, so I unzipped 
my cock and inserted it into the hound. We had sex all night. When it was 
dead in the morning, I was still raping it. When I was 80 years old and the 
corpse was decomposed and crawing with maggots, I was still ejaculating my 
seed into the empty shell. Later, I died.
%
Don't rely on risky conventional aphrodesiacs. Our patented formula 
harnesses the power of a biochemical reaction to create controlled 
explosions in your testicles, propelling you into the INCREDIBLE SEMEN-FREE 
EXPLOSIVE ORGASM of a lifetime! She'll never cheat on you again after she 
feels the POWER of our patented testicle exploding forumula.
%
BETTER NOT HEAR OF ANYONE BREAKING THIS ONE OR SEE DELETED. This is a ribbon 
for soldiers fighting in Iraq. Pass it on to everyone and pray. Something 
good will happen to you tonight at 11:11 PM. This is not a joke. Someone 
will either call you or will talk to you online and say that they love you. 
Do not break this chain. Send this to 13 people in the next 15 minutes. Go
%
do you ever get these weird urges to jerk off.. and then after you do you 
get this sick feeling in your stomach like you're going to throwup and 
passout ?
%
Okay, so you want to mack it with the ladies, but don't know where to start? 
 How about you groom yourself you fucking pig.  Here's your first lesson: 
WOMEN HATE MEN WITH BALL HAIR.  There are some common technique for removal 
(i.e. razor, electric razor, nair) but my favorite is the time proven method 
of plucking.  Start by sitting in a chair.  Now, stretch your penis between 
your testicles and hold it there.  This will decrease the electric signals 
being sent to your brain everytime you pluck, bye bye pain!  You should be 
done in about 10 minutes, and after that, you're on your way to Fellatio 
Farms.  Go getum Cassanova.
%
Emoticons are useful, since they can at least partially take the place of 
facial expressions, gestures, and tone of voice, all of which give clues to 
meaning beyond what your mere words convey, in face to face dialogue. They 
can easily be overused though, or used in a far too cutesy fashion, somewhat 
like a girl dotting her i's with big pink hearts. If your email has more 
than one or two emoticons in it, yo
%
Frankly, I am appalled at the way that members here treat the underground 
furry community. It seems to me like nobody here really understands anything 
about the furry way of life. I mean, seriously, do you know how freeing it 
is be honest about being encased in a human body whilst having an animal 
soul?
%
What the fuck does it mean? What's the point? Is that sticker telling me to 
drive more carefully because you've spawned, and you're carrying said spawn 
in your auto-mobile? Why should I care? You're obvously an idiot, so why 
should I have any regard for the waste matter that sprung screaming from 
your idiot loins? I'm gonna drive how I'm gonna drive. Just because you've 
gone out of your way to inform me that you happen to be transporting your 
worthless Shit-Factory doesn't mean I'm going to alter my driving style in 
the least. And that's another thing. That shit automatically assumes that 
I'm the shitty driver. What about you? Shouldn't you be the one driving more 
carefully because your squealing tit-sucker is in the passenger seat? Why 
are you telling me about it? If I'm walking to the post office to mail a 
priceless Ming vase, I don't shout at every person on the street "FRAGILE! 
FRAGILE CONTENTS HERE, BE CAREFUL WALKING AROUND ME!" No, that would be 
stupid. However, buying some stupid-ass 99 cent sticker that says "Baby on 
Board" is supposed to magically transform everyone on the freeway into 
perfect drivers.
%
I am a 15 year old guy, I am 5'7", and HATE humanity. I despise every piece 
of life around me, and I understand that this might classify me as insane, 
but so what. I HATE christians(well most of them, but not all) because all 
they do is shove there religon on you, why don't they just let me believe 
what I want? But anyways, just come on in, and see what I have been feeling 
like today. Later...
%
u all people are goddam nigger fucktards! fuck u all! nigger fucktards! eat 
my shit motherfuckers! goddam nigger fucktards! fucktards all! god damn you 
nigger fucktards!
%
girl you must be the recently cancelled television show "enterprise" because 
no matter how many fat sweaty nerds profess their love for you, you are 
still just a piece of shit whore that no respectable man would allow himself 
to be seen in public with
%
girl, u must have a 2d20 spell resistance because you are resisting my magic 
missile
%
Face it, you just want an ipod so you can hack the firmware to make it 
vibrate then stick the smooth case up your ass you big FAG!!!
%
You don't me, but I was looking through yahoo profiles and I saw that you 
are in Texas City. The reason that I'm writing to you is I'm a handsome, 
goodlooking straight male. But lately I've been getting the urge to know how 
does it feel to suck a cock. I'm very serious about this, this is not a 
joke. If you havent' figured it out yet, I'd like to suck your dick. You 
might look at this email and not be interested at all, and I'd understand if 
you don't. If your not interested, you can write me back and tell me to go 
to hell, and I won't bother you again. To let you know, a guy sucks better 
cock than any female, cause only a guy knows what a guy likes. If you're 
interested, it will be secretly and discreet. If you are interested, just 
write me and let me know. If your not, like I said, just tell me to go to 
hell. Let me know.
%
Linux Scat Ode : The chat has moved off this mortal coil. To replace the 
entertainment , my pants : I'll soil! Turds smashing into the boxers all 
nite. I'll take them off and sniff. Ohh yeah. Dats rite. The smell is 
divine, the taste is great. Now all I need is a paper plate. Going to 
Butch's with this fresh poopie. I hope he's thirsty. Because this poop is : 
soupy. My bowel movements are incredibly loose. Thats ok, I lo Its a shame 
that my body is nothing but lard. Oh the life of a Linux Fatty Shit-eating 
Scat Fiend. Oh no mom is comming!!! This chat session : screen'd
%
When I installed Linux it asked me for my credit card number. Two days later 
I got a call from Wachovia asking me if I had purchased $400 worth of 
Totino's pizza rolls and Mountain Dew (I hadn't). Let this be a warning to 
all of you out there in the Internet.
%
didnt ben franklin invent lightning or was that edison?
%
So I'm out with my niece at our local shopping mall here in Philadelphia, 
called the Gallery, we had just gotten some delicious banana yogurt 
shakes...and who do we see but Mr. Hasselhoff! He was signing sneakers at 
Foot Locker, apparently he has a new line of Sketchers out or something (?) 
and there he was. I told him that I used to wish i had a car like Kitt and 
he laughed and then i laughed and then he got really serious all of a 
sudden.He leaned close and whispered to me that Kitt was real. He said he 
could press a button and Kitt would come flying into the mall right there 
running over people and causing massive havoc. I'm not sure if he was 
kidding or not but my niece got real scared and spilled her banana yogurt 
shake. Is this unusual for Mr. Hasselhoff to act like this? This is our 
first David sighting and to be honest i was a little nervous.
%
YOU ARE THE BIGGEST FUCKING GROUP OF UTTER. FUCKING. IDIOTIC. SHIT EATING. 
CIRCLEJERK. FAGGOTS. EVER. TO. WALK. THE. EARTH. NOTHING YOU SAY TO ME CAN 
HURT ME AT ALL! YOU ARE NOT INTELLIGENT, EDGY OR COOL, YOU ARE JUST A 
PATHETIC FUCKING PIECES OF SHIT WHO LIKE TO BELLITLE OTHERS OVER THE 
INTERNET TO FEEL BETTER ABOUT THEMSELVES. FUCK YOU!!!!!!!!!!!!!!!!!!!!!!!
%
So you're working out and getting buff so you are strong to do what? 
"Getting women" as if they are objects to do what? Fuck them and forget 
about it? Some life. "Getting women" improves your social status amongst 
those who hi-five people for being "playa"s.  Who gives a damn about being 
more social amongst those vapid wastes of food and employment? Video games 
are a great way to have fun, and enjoy things that are availible to you in 
life.  Not only this, but the making of a game is an art form - by playing 
through, say, an RPG, you are treated to a grand story that is just 
overwhelmingly more fufilling than going out, fucking some chick, hi-fiving 
yourself and calling it a night.
%
for the past several years I've been mailing all my feces to Ralph Nader. 
Every time I defecate, I do so in a zip lock bag, which I then send to Ralph 
Nader's home address via USPS priority mail. Though I always clearly write 
my name and address on the return portion of the envelope, I have never 
recieved a reply, nor have any of my mailings been refused :|
%
I lick my own fecal matter from time to time, it's not as bad as you'd 
think. I even got my old girlfriend to try it, I talked it about it for so 
long, I actually convinced her to wipe me after a dump with her tounge. She 
got stabbed by some guy 2 months later.
%
A beautiful young lady is on her knees sucking my cock. I am leaning forward 
and bracing myself against the wall. I can feel her spreading my ass cheeks 
to allow her boyfriend to enter me. He's in and starting to stroke in and 
out. Every forward thrust pushes my cock further and further into her mouth. 
I can feel her reaching under my balls to feel his cock going in and out of 
my ass.
%
just went to micro$ofts web site to get some drivers for my cousin and it 
locked my machine - Of course I am using unbuntu and firefox - funny thing 
is when I unplugged my network cable I got my mouse back and disconnected 
from their site - seems everything works fine now but I sure hope they 
weren't trying to put sypware or root kit on my computer. they will hear 
from if I find anything. piss off microsoft - what are you now keeping 
people that don't run your os from your web site.
%
Did you know that the first knights in Medieval times were actually Negroid? 
Indeed, the word "knight" comes from the Old English "niht" meaning night or 
darkness. As time progressed, more and more Caucasians were accepted into 
this sacrosanct brotherhood, but many historians agree that, while King 
Arthur was definitely a white man, his entire round table of knights were 
exclusively colored!
%
I'm gambling that Apple is expecting to keep profit margins up by keeping 
return/repair rates extremely low by using quality components
%
i need dank nugs, smoke roach bugs, bird-man lugs, tree smokin thugs, i'm on 
a mission to secure a blunt, don't be pullin no bogartin' stunt, hoardin 
that shit ain't really kind, absorb that herb into yo mind, smokin' and 
tokin' until you're blind, what out for 5-0 or you gonna get fined
%
All this "linux dependabilty uptime unix lol" bullshit is just that, a crock 
of shit. How fucking hard is it to hit a goddamn reset button, you fat 
fucking sysadmins? I realize your just about to hit level 87 in everquest 
and you're already sweating from reaching for that jolt cola but for the 
love of god PLEASE stop using these stupid, unusable operating systems!
%
My favorites: Maxell 80 Minute Pro (blue) for solid robust low end, detail 
and clean immediacy; Maxell Music 80 minute gold for a balanced 
hight-to-mid-to-bottom and wide sparkle; Fuji 80 Minute Audio for a wetter 
sound (smoothes out the edges). Memorex Music 80 minutes is very nice, Taiyo 
Yuden 700 MB are close, the Mitsui and BASF are in there, Sony could be 
better...
%
Ecstasy, also known as MDMA, is popular in raves as a drug that promotes 
tolerance. An empathogen, ecstasy gives its user heightened acceptance 
towards other people. Why not use this power to pacify racists? My idea 
calls for the forced injection of MDMA into racists, or risk the loss of 
property. After developing an initial addiction to ecstasy, users will be 
required to fuel their addiction by purchasing more of the substance. 
Government-run vendors can sell their wares to give wealth back to minority 
communities. This scheme will allow the racists to become normal, productive 
members of society while putting more money in the hands of those that need 
it the most.
%
Don't the greedy boneheads at Thompson Multimedia and Fraunhofer 
Gesellschaft see that they are poisoning their own water supply by causing 
the Open Source community to develop better, and free, codecs like Ogg 
Vorbis?
%
So there I was zipping through the skies of Iraq in a helicopter my 
associates had rented from Blackpool. We had been sweating it out as we were 
forced to maintain a low altitude to stay under the AAF radar, which kept us 
safe from missile batteries but exposed us to any ground troops we happened 
across. We were almost home free to the green zone, when we heard the 
telltale WHOOSH! of a shoulder-mounted ground-to-air missile. The pilot 
screamed and in a flash we were spiraling out of control and the ground was 
rushing up to meet us. When I came to, I thought I must be in heaven, 
because the wind was gently rustling the green grass that seemed to be 
cushioning me. I smiled at the feeling of the warm sun upon my face. Then 
the Arabic men came. While a thin wiry one waved his rifle and screamed 
unintelligibly at me, one of the fat ones pulled me up by the hair to my 
knees and unzipped his khaki reliefs. Out sprung the largest cock I've ever 
seen on a dark-skinned man. It smelled of couscous and camels, and when he 
forced it down my throat I could taste a hint of Brut. They all took turns 
throat-raping me, and they all had a good laugh when my screams abruptly 
stopped as one of the larger cocks dislocated my larynx from my throat down 
into my stomach and I began to bleed from my nose and ears. After they were 
all satisfied, they pointed their barrels at me and I felt hot lead tearing 
through my body. As I lay prone on the ground, just before I blacked out, I 
felt something hot on my back and realized that the fat one was urinating 
all over my broken American corpse ohh yeah
%
i was going through the logs in my toilet today and i found a letter.  i 
don't remember eating a letter.  funny thing is.. it was a letter from my 
colon telling me to eat less fiber.  ps: i'm shutting down until you have 
sex with men.  after plowing the fields of the nearest 12 guys i could find, 
my brother walks into the room.  he says, "haha jokes on you i put that note 
in your turd.  you just fucked a bunch of dudes for nothing, homo!"  this is 
why i hate procreation.
%
girl, you must be from stdout because i'd like to pipe you
%
We've got Justice Kennedy writing decisions based upon international law, 
not the Constitution of the United States? That's just outrageous. And not 
only that, but he said in session that he does his own research on the 
Internet? That is just incredibly outrageous.
%
is it gay that sometimes when i take a shit i get goosebumps all over my 
body?
%
You sick, sick butthole licking UNIX fags. How DARE you use the disgusting 
and fecal OS that is Linux. Windows is BEST! You fags get raped in the mind 
by Tux. His fag penguin guise makes you shreik out in terror for Windows, 
but he fuckes you so much you are forced to use Linux. I bet the fags who 
reply to this are being ass raped as we speak. Linux is buggy, slow, bloated 
and turns you into a fag. Windows is best! You huge fruits and your lies 
about bill games must cease.
%
YOU KNOW, YOU NEEDLE-DICKED PANSIES COWER IN FEAR WHEN I WHIP MY TOWERING 
CYCLOPS OUT. MY PENIS CONSUMES LIGHT AND WHOLE ASTEROIDS LIKE THEY WERE 
NOTHING. ONE TIME I GOT AN ERECTION AND WELL THAT CAUSED A WHOLE GALAXY TO 
BE SHATTERED BY THE SHEER FORCE. WHEN I EJACULATE IT CAUSES THE 
GRAVITATIONAL CONSTANT OF THE UNIVERSE TO BE ALTERED BECAUSE OF THE SUDDEN 
INCREASE IN MASS. AT THE END OF TIME THERE WILL BE NOTHING LEFT IN THE 
UNIVERSE BUT DARK MATTER AND MY PENIS. MY PENIS EXISTS IN FOUR DIMENSIONS, 
EXPANDING OUTWARD AT LIGHT SPEED LIKE TIME ITSELF. MY PENIS COMPOSES THE 
UNIVERSE AND TICKLES AZATHOTH'S OMNIPOTENT BUNGHOLE WHEN THE STARS ARE 
RIGHT. ENTROPY IS BUT A FART IN THE WIND FOR MY PENIS. MY PENIS CAN BREAK 
MATHEMATICS! IT IS ABLE TO TRANSCEND REALITY AND DESTROY HUMAN THOUGHT WITH 
ITS SHEER VOLUME AND MASS. MY PENIS HAS A PENIS, AND THAT PENIS IS STILL 
BIGGER THAN YOUR PENIS.
%
Remember the Alamo! Shoot 'em! To show you how radical I am, I want 
carjackers dead. I want rapists dead. I want burglars dead. I want child 
molesters dead. I want the bad guys dead. No court case. No parole. No early 
release. I want 'em dead. Get a gun and when they attack you, shoot 'em.
%
I use Firefox sometimes, but it really isn't that good. I'd rathewr use IE 
than Firefox because who knows what these open-source people can do with 
your credit card numbers. Not that Microsoft needs anymore money, so they 
won't try to scab it off me. And at least they patch their browser 
automatically with Automatic Updates
%
I'm saying to all the rappers keep it real. Not everyone on your road crew 
likes pussy and you know it. The stylists that lean in your face, do your 
make up, braid your hair may just have your body guards dick on his breath - 
while he is all in yo grill.
%
picture yourself at college. she's the foreign exchange student from ... not 
china, the other one. in any case her english is poor and she laughs at even 
your shittiest jokes without understanding. you know she likes you. the only 
guys after her are skinny adenoidal fags that she gets enough of back home. 
she laughs at their jokes too, but it's not them she sits by in class, you 
come to associate that class with the smell of her. late one night you're in 
the library. she's there because you're there. you take her skinny wrist and 
wordlessly lead her to the carousel you booked. there are cameras, and 
neither of you care. her breathing flutters and she looks elsewhere as you 
pull her close. you slide a hand down there, gliding on silken skin. she 
leaks like a swollen sponge that has absorbed all it can. she's never been 
fucked in a library before. but she's never met anyone as big and black as 
you before.
%
You know how sometimes when you poop, it's a blue color?  Well, I had one of 
those poops on Friday because I had been eating artificially colored animal 
crackers.  After pinching a couple out, I thought it would be funny to trick 
my girlfriend.  I placed them on the coffee table and told her they were 
novelty candies.  Before I could tell her I was just joking, she took a 
bite!  Well, after a long weekend in the hospital, my girlfriend died of 
spinal meningitis.  God's going to punish me for this one, I just know it.
%
Check this shit out. Sucks pubic hair from your furniture and sextoys 
without stopping every 5 minutes to douche. The Dyson DC 14 Animal features 
a telescopic vibrating dildo that instantly releases semen 17 feet at the 
touch of a vein. In addition, the DC 14 Animal features a wide vagina that 
picks up large hookers that other trick ass niggas leave behind. A mini 
turbine head-sucking dog and cat combination saves you from tight spaces 
like ass, pussy or lips and a low reach faggot tool simplifies the task of 
felching under pressure. The DC 14 Animal also features a carpet care kit to 
keep your camel toe looking like new. Available at your local zoo.
%
If Jesus was Jewish, then why did he have a Puerto Rican name? You Stupid 
Faggots.
%
Dear Sir,With due respect and humility I am writing this mail letter to you 
which I believe that this letter will not embarrassed you as we have not met 
or seen each other before.My name is Pastor Steve Camara, from republic of 
Benin in west Africa region, pastor in charge of Revival Church Of God 
Mission (RCGM) here in Abidjan Cote D' Ivoire.I am writing you in regards of 
money transfer which late Pope John Paul II reviewed to me a week ago before 
his death through feeding tube after his long ill health, that his late wife 
who is Mrs. Esther Benson deposited the sum of US$ 4.000.000.00(four Million 
Dollars) with a finance house here in Abidjan for the two (2) remaining 
children PAUL III AND MARY for there future.Before the death of Pope John 
Paul II he told me that this money US$ 4.000.000.00 Dollars wasacquired 
genuinely, that his late wife has a diamond shop in there country which was 
destroyed during the war that leads to his husband death two year ago 
through heart attack.It is because of the confidence he had on me as his 
pastor, he told me about this deposit and his last request to me before his 
final breat is that I should try as much as I can to look for foreigner, 
either individual, company or organisation who can handle this transaction 
with care and confidence for the future of her two children that is 
presently staying with me as there parents for now as she cannot make it for 
them.Finally, if this letter touches your heart and you are willing to be of 
assistance to this two children, I will like you to indicate your full 
interest to enable me give you more details on how to proceed with this 
transfer. Also note that all the deposit document of this money was on this 
woman name as the beneficiary that made with the finance house 
here.Expecting your urgent mail to this effect.Thanks and remain bless.
%
that is the nerdiest thing i have ever seen aside from my girlfriend and i 
wearing matching firefox tshirts
%
girl, you must be in the kkk because i think we'll have a lot of fun once we 
get under the sheets
%
Girl, you must be Snort because I'd like to trigger your intrusion detection 
systems
%
I'm going to be taking a long vacation in a couple months and I want to take 
a sheet of acid over with me. I'd really rather not bring it with me on the 
plane as I've seen the security measures at the airport I'll be flying to 
and they're pretty strict, so I was thinking of faxing it over before hand. 
Anyone know if this would work?
%
girl, you must be grand theft auto: san andreas because once i get inside of 
you i'm going to do all sorts of illegal things
%
girl, you must be tiger woods because no matter what you do, you'll still 
just be a nigger
%
girl, you must be a dialup internet connection because every time i want to 
do something useful on the phone i have to shut you up
%
girl you must be an o'reilly technical manual because despite your high 
price tag, you never say anything meaningful
%
girl you must be charles barkley because i want to take you to the hole but 
i doubt you would be impressed with my full-court press
%
girl, you must be a rare warez release because after i get my hands on you, 
i'm going to pass you off to all of my friends
%
Did you know? Timothy McVeigh conspired with Terry Nichols to destroy the 
Alfred P. Murrah Federal Building by exchanging messages using the popular 
"Bit Torrent" internet program, which quickly and anonymously allows users 
to exchange large volumes of confidential documents.
%
###### REFUSE RACISM & POLITICAL GARBAGE ON OSS #######UBUNTO IS AN 
ANTI-WHITE RACIST OS FUNDED BY AN AFRICAN-AMERICAN WHO USES LINUX TO THROW 
HIS AFRICAN PROPAGANDA DOWN OUR COLLECTIVE THROATS!!REFRAIN FROM ABUSING OSS 
TO PEDAL POLITICAL PROGANDA!HAVING AN OS THAT PEDALS MULTICULTURALISM, 
MISCEGENATION AND INTERRACIAL RELATIONS IS THE EQUAL OF AN 'ANTI-JEW OS 
BUILD' - UNNACEPTABLE, DISGUSTING AND ANTI-OPEN SOURCE.MR AMERICAN BLACK 
SUPREMACIST - OPENSOURCE DOES NOT NEED *NOR WANTS* YOUR MONEY.###### REFUSE 
RACISM & POLITICAL GARBAGE ON OSS #######
%
Punctuation marks that look like smiley faces express happiness on a new 
communication tool known as "Internet." The computer network is already 
being used by 15 million people worldwide to chat or do important research.
%
Did you know: Google Inc. was the original corporate investor in 50 Cent's 
career, advancing him $15,000 to produce his first album "Get Rich Or Die 
Tryin" (Interscope 2003). 50 Cent gave Google a grateful nod when he named 
his side group "G-Unit" (Google Unit), and they maintain a healthy business 
relationship to this day.
%
Russel Simmons is truely a hero amongst us.  He owns his own music label, 
shoe company, and even a clothing line, rightfully named PHAT FARM!  The 
clothes are hand stitched together by hundreds of obese naked women sitting 
in tubs of sperm.  Their only form of payment is cunnilingus performed by 
farm animals, hence the clothing name!  Simmons is a brilliant man!
%
alright im not a freak lyk you....i dont put little periods after my 
sentences..aportophes in my sentences or fricking commas :-D so i'd say you 
back the fuck off because your the kind of person NOBODY likes cuz your a 
fatass loser with no friends and is a stuck up freak:-)
%
girl you must be the warp core of the starship enterprise because if you 
ever start acting up i will dump you
%
All the guys in this IRC channel I hang out in are really profane and gross. 
They talk about child porn and act racist a lot of the time, and every night 
before I go to bed I pray for God's forgiveness, and for God to forgive 
them. Then I remember I'm wiccan. Blessed be!
%
Can anyone tell me how many times these high and mighty evolution scientists 
have already backpedalled and changed their version of the truth to fit some 
new finding? I've already lost the count... pathetic, really.
%
I am amazed at all the scientists who think they know "facts" when their 
theories are not really anything more then a "best guess". And their guesses 
care changing all the time. God's story has not changed at all. I believe we 
should teach creationism in schools, it will serve more people better. Out 
of a high school graduation class of 1000, how many will go on to a career 
in science? Say that 700 of them go on to college and that 300 go into the 
work force. Of the 700, 100 decide they want to major in physics or 
chemistry. Of them 70 get weeded out. You now have 30 people who will 
continue. The other 970 people will be better served with an education that 
focuses on creationism. We are living in a time with relative ethics. We are 
living in an increasing secular society, where life means little. We all 
watched in horror as the Teri Shiavo in Florida was starved to death. That 
never should have happened, in the light that there is information that her 
husband might have beat her the night she collapsed, and the uncertainty of 
her wishes. Even our most prized and well written scientists believe in God. 
Einstein believed in God, he was quoted as saying "I want to know God's 
thoughts, the rest are just details".
%
Growing up in the Deep South you are exposed hunting and trapping at an 
early age. I will never forget the time my father got so drunk on Robitussin 
that after beating me repeatedly with a rake he went outside to place traps 
to ensnare wild animals that we could use for food. After a few ours of 
stalking about he came inside and found me lying on the floor half conscious 
he chastised me for being a little wuss and kicked me in the kidneys 
claiming while shouting something about Jesus before passing out on the 
kitchen floor. The next morning the department of fish and game came 
knocking at our door asking if we knew anything about the bear traps that 
were placed all over the apartment complex. Apparently he had ensnared 
several negroes, and, while it was negro season, he was over his bag limit 
and had to cut some of them loose. Man, those were the days, sipping 
lemonade on the porch while dad skinned niggers in the back yard.
%
girl you must be a game of texas holdem cuz i just wanna go all in
%
You can't talk that way about EverQuest you fag! OMG Just you wait till I 
pry my ass out of this chair and lose 400 lbs to climb out of my parents 
basement, asshole! You're are SO getting prank called!
%
I watched this whole program on National Geographic entitled 'The Dark Side 
of Dolphins' and let me tell you,  dolphins are total assholes. So here's 
the deal, male dolphins travel in packs of two. These males want to get 
laid, and so they trap a female between them and keep her captive for up to 
a month, having sex with her as they please. If she tries to get away, they 
will beat her with their snouts and fins. When you see large groups of them 
it's just a bunch of these two packs of males joining together to keep 
captive a few females so that they can gang rape her. The females hate it 
and try to get away but then get beaten up. If and when the female gives 
birth she won't want to have sex while protecting her young, and so males 
will gang up and try in some instatnces to kill the baby inorder to have sex 
with the mother. Bottom line, dolphins are assholes. According to marine 
biolgoists dolphins could have normal courtship and sex, but the males 
choose not to they prefer gang rape. Dolphins are assholes.
%
what did you have for breakfasT? your mom? what did you have for lunch your 
dad? .. what did you eat between that a fucking pig fuck man eww ur so nasty 
whatcha gunna eat for supper your fucking neighbors family and all your 
fucking pets
%
I AM GOING TO SHIT IN YOUR OWN ASS SO FAR IT COMES OUT OF YOUR MOUTH WHICH I 
WILL THEN SWALLOW AND THEN SHIT INTO YOUR MOUTH SO YOU WILL BE EATING MY 
SHAT SHIT WHILE SHITTING.
%
girl you must be my shitty internet service provider because you're going to 
kick me off of you after approximately 5 hours
%
I am a nose-picker. I cannot stand having crunchy snot clinging to the 
insides of my nostrils, or feeling something dangling there in the back. So 
I dig it out. I'm also like this about cleaning my ears; I cannot stand 
feeling that there's something in there. Yuck. A bonus to all this is that I 
get a slight rush of euphoria when I dig out a really big booger, or find a 
lot of wax in my ear. It's similar to the rush of having squeezed out a 
prize-winning poop.
%
girl you must be OSX because you're beautiful and alluring but mostly 
worthless
%
any 1 got the move tripple x with vin deasal, not pr0n
%
girl you must be a free porn website, because after one 10 minute visit i'll 
never see you again
%
girl, you must be internet explorer because you give me popups all the time
%
girl you must be a hydroponic grow system because i cant wait to introduce 
my seeds
%
girl you must be a micro$oft product because when i find your holes i'm 
going to exploit them
%
girl you must be java bytecode because you let me use you anywhere I want
%
girl you must be a .bin with no .cue file because I have to wrangle with you 
for hours only be burned in the end
%
girl u must be an NES cartridge because i will blow on your slot until you 
start functioning
%
girl you must be ieee-1284 because i can tell that your port is bidirectional
%
girl u must be aol instant messenger because i'd like to see all of my 
buddies on you
%
thats why i prefer anime hentai then real porn.... majority of porn is 
usally ugly both the body and faces its rare which you dont get the ugly 
(usally comes with alot of air brushing)... and its usally the non nude 
models which offer something close to hentai in cuteness/hot and non-old 
porn models.
%
fuck shit bitch ass tits. Lets suck some cock get knocked up and pass out in 
a ditch. 9911 emergency room party. smoke dat hanger into yo womb. <3 my mom 
had so many abortions im surprised im not in a jar of formaldehyde <3 you 
dumb fucking p r e g g e r s
%
BREAKING NEWS: THE RING-LEADER OF THE INFAMOUS INTERNATIONAL PEDOPHILE RING 
"THE CATHOLIC CHURCH" HAS DIED, HE WAS 84.
%
I leaned down and smelled the seat where the super hot girls amazing ass sat 
for at least 5 minutes straight... It smelled like pure girl farts... a 
strong fart essence was present in the felt padded seat cushion, I started 
buggin out. I kept smelling the cushion for as long as the smell's odor 
retained it's embodiment. I was in heaven with the sexy fumes that only 
lasted a couple of minutes. I buried my face into the seat cushion smelling 
this HOT girls candy farts. I was so happy that day.
%
For like several years I have been afflicted with a really smelly crotch. 
It's like I sweat a lot down there and it just has a really sweaty vaginal 
odor. I bathe regularly but nothing really helps; by the end of the day I 
always smell funky. This wouldn't gross me out if it was just an occasional 
problem, but it happens every day. What can I do?
%
girl you must be a sata2 hard drive because you are modestly increasing my 
pipe
%
girl you must be a 0day topsite because I just wanna max out your slots
%
You should connect your graphics card directly to the mains. You can buy 
molex connectors from any good electronics store and then splice it into the 
lead from a hair dryer or toaster. This should deliver the correct voltage 
direct to your graphics card (the molex also functions as a voltage 
regulator and AC rectifier). It's the equivalent of having an Antex 3kW 
power supply.
%
girl you must be haggis cause you make me want to stuff you with old meat
%
Ladies and gentlemen, against my better judgement, I allowed my teenage son 
to install line-ucks on our compaq presario. Now I can't make heads or tales 
of what's happening on my computer machine, and he is continously making 
disrespectful remarks about Bill Gates and 'Micro$uck". I guess my only real 
question is: How long should I ground him, removing all access to his 
friends and activities in order to cull this anti-social behavior?
%
ONE TIME I GRABBED A FAT GOTHIC BITCH BY THE EARS AND SLAMMED HER GODDAMNED 
HEAD AGAINST THE TABLE AND YELLED, "WHY ARE YOU SO GODDAMNED FAT AND UGLY?!! 
WHY!!! WHY!!! WHY!!!" AND WHEN SHE STARTED TO CRY AND MADE HER WHITE CLOWN 
FACE PAINT RUN AND ALL THAT THICK BLACK EYE LINER I SAID, "IF YOU ARE SO 
FUCKING FAT WHY THE HELL DO YOU WEAR ALL THAT GODDAMNED SLUTY CLOTHES YOU 
FAT FUCKING BITCH?!!!"
%
yo think if i got a real doll and had a voodoo priest do shit to it, and 
attached lindsay lohan's soul to it, that if fucked it she'd feel it and 
shit?
%
My Nazi fetish makes my boyfriend uncomfortable.I NEED ADVICE. You appear to 
be experienced in these matters, so I'll give this a try.My boyfriend told 
me that he finds my Irma Grese/ Ilse Koch-style Third Reich dominatrix 
costumes to be disturbing; he seems reluctant to participate in Lebensborn 
roleplaying and even Auschwitz guard/ male prisoner roleplaying. He also 
suggested gently that I take down the Hitler Youth propaganda posters that 
are currently hanging over my bed.Is Nazism a 'turnoff'? If so, why?
%
It is well known that apes are close relatives to human beings. What isn�t 
so well known is just how close relatives the two species are. Apes and 
humans share much of the same DNA. For instance, the North African 
Short-Haired Baboon shares over 99% of its DNA with mankind. This particular 
species is highly adaptable and like chimpanzees, they are able to make 
crude tools and even utilize rudimentary communication skills. The 
adaptability of the North African Short hair is evidenced by their lives in 
captivity, while most species dwindle on extinction and have trouble 
breeding; the Short-Hairs thrive, often neglecting their offspring, food 
gathering, and even grooming themselves in order to mate with females. First 
introduced into captivity sometime in the 1700�s, the North African 
Short-Haired baboon was utilized as laborers in small farming communities. 
Today, they enjoy life in urban centers, often living 10 to a den. Sadly, 
captivity and inbreeding has caused their learning ability to be suppressed 
and their baser instincts to be more pronounced. Often, they will rely on 
the gatherings of other species to survive. Utilizing their natural 
nocturnal abilities, they stalk, undetected, through the habitats of these 
other species, procuring what it necessary to survive from them, often in 
the form of Televisions and Hi-top sneakers.
%
Making headlines across America is the Terri Shiavo case. This poor woman is 
in a persistent vegetative state and the husband selfishly wishes for her 
feeding tube to be left removed. This is appalling, not to just me, but to 
the many Americans that feel she should be allowed to live. 
www.terrisfight.org is a prime example. The husband seems to be missing the 
larger picture here, she is still biologically functional, meaning that her 
vaginal orifice is capable of self-lubrication even if she is unresponsive. 
This make her the perfect mate. True, she cannot perform fellatio, she is 
more than capable of being a semen receptacle for the husband that has loved 
her for years. Please stop this madness and contribute to her cause!
%
Today, they enjoy life in urban centers, often living 10 to a den. Sadly, 
captivity and inbreeding has caused their learning ability to be suppressed 
and their baser instincts to be more pronounced. Often, they will rely on 
the gatherings of other species to survive. Utilizing their natural 
nocturnal abilities, they stalk, undetected, through the habitats of these 
other species, procuring what it necessary to survive from them, often in 
the form of Televisions and Hi-top sneakers.
%
My partner and I were having intercourse when his penis came out and we 
heard a weird sort of pop noise and then he experienced a lot of pain and 
when he looked at his penis he noticed there was some blood coming out of 
the tip. After about 5 minutes there wasn't pain anymore, but because of hte 
blood I am afriad it's broken. Thoughts?
%
hey everyone remember that one time when klerck shot himself directly in the 
face with a shotgun and killed himself and we all were like "whoa" and he 
was like "drip drip"... that shit was awesome
%
girl you must be an internet forum because i am about to try and impress you 
using my stale in jokes from 1998
%
I need a patient guy who will realize that I am just flustered when I belt 
out something stupid when I am nervous like "your such a cute little guy" on 
a first date. never heard from him again, hha. whatever.
%
girl you must be a taxidermy lab because you make me want to stuff a cock in 
you
%
Intel isn't bad, but AMD's is just misleading. If I'm building a 64-bit AMD 
system and I look and say "Hey, it's an AMD 64 4000+! That must mean it's 
4000MHz which is 4GHz" Oh no! It's only 2.4GHz. At least Intel has the sense 
to put the processor speed right in the name of the chip. I know someone is 
going to chime in and bring up some obscure reason why the 2.4GHz is called 
the "4000+" and declare it's there for more than a marketing ploy, but Joe 
Consumer isn't going to think that. An AMD-64 4000+" sounds wayyyy cooler 
than an "Intel-64 2.8GHz", right?Now, proceed to mod me down because I speak 
ill of the underdog, right? Go on, I know you want to inject your bias into 
moderation, it's okay.
%
I, personally, have a special connection to the video "Basic Training: San 
Francisco Style." It was my bridge from Fisting to Scat. There is a scene in 
it where a pretty young blonde boy (who I later learned was Dave, himself) 
gets fisted with a very full ass. Needless to say it gets wonderfully messy. 
I was so disgusted I couldn't stop watching it. I must have nearly worn out 
that spot on the tape.
%
Basically my question to you is based on everything you've seen concerning 
the character of Bardock and Goku, what would happen if Goku had an actual 
meeting with his father? What words would they exchange? What would cause 
such a meeting, etc? It can be any continuity you choose. Now that you know 
what to write about, be creative and come up with what in your view would 
happen if father and son were to meet.
%
girl, you must be an einstein-rosen bridge because i'd like to come inside 
of you and then be somewhere else
%
I'm all about girls who have dicks coming out of their nipples with dicks 
also coming out of those dicks and shit coming out of those dicks
%
YOU SPICAROONIS HAVE A WHOLE DAMN COUNTRY SO WHAT THE FUCK DO YOU WANT WITH 
OURS? ONCE YOU FILTHY FUCKS FINISH YOUR SILENT INVASION DO YOU THINK THIS 
WILL STILL BE THE AMERICA IT ONCE WAS? FUCK NO. YOU FILTHY BEANERS WILL TURN 
IT INTO ONE BIG FUCKING BARRIO LIKE YOU HAVE DONE TO THAT PIECE OF SHIT 
MEXICO BECAUSE YOU BEAN EATERS ARE TOO FUCKING STUPID TO RUN A FUCKING 
COUNTRY.YOU BEANERS TOOK OVER CALIFORNIA AND TEXAS. AND WE FUCKING GAVE YOU 
NEW MEXICO. SO KEEP YOUR FILTHY ASSES THERE AND JUST HAVE THAT SHIT AND STAY 
THE FUCK OUT OF THE REST OF THE COUNTRY. YOU HAVE YOUR WHOLE SO CALLED 
COUNTRY DOWN THERE AND THREE BIG FUCKING STATES. BUT YOU FUCKERS REPRODUCE 
FASTER THAN RABBITS AND HAVE MORE DAMN RELATIVES THAN A COCKROACH. AND ARE 
TWICE AS FILTHY. SO I GUESS YOU NEED MORE ROOM. SHIT YOU PACK 50 OF YOU 
BEANERS INTO A 2 BEDROOM APARTMENT SO YOU SHOULD BE ABLE TO MAKE DO WITH 
THOSE FUCKING STATES.DAMN I HATE TACO MUNCHERS.
%
When you see porn and your dick gets hard, try to touch your dick head with 
your lips. I have licked many times my cockhead in this way.
%
Hey guys, if a Jedi perchance met the Wolverine in armed combat, who do you 
think would win? Could Wolverine's mind resist the Force? Could the Jedi's 
lightsaber cut through Adamantium? Discuss.
%
i think i may have roids but i don't know what they look like and i don't 
have anything protruding out of my ass. everytime i go poop there is a 
little blood on the toilet paper when i wipe. its not super painful and 
pretty much feels like minor irritation. my buttcrack has been really dry 
and flaky too almost like my crack wants to get deeper. wtf? i've been using 
preperation h suppositories and the medicated pads for weeks now but nothing 
has helped. i don't have money or insurance to see a doctor so if anyone has 
had symptoms like this plz tell me what the hell is wrong with me and what i 
can do to fix this. thx.
%
A romantic dinner with a large table cloth so you can go under the table in 
the retaurant and blow me without the other customers seeing what you are 
doing. Not that i am ashamed but I am just thinking of your dignity and all.
%
I'd like to get her on a bed, rip off her pants and her grannie underwear 
that I just know she wears and then I'd like to flip her over and spread 
those fat smelly cheeks apart, shove peanut butter in her bunghole, stick my 
tongue in there and move it around like I am having an epileptic fit eating 
the creamy treat from her ass. I'd also like to choke her by shoving my 
schlong down her throat to the point where she is gonna pass out and then 
pull out my cock and jerk off on her face while she is still delerious and 
then squirt all over her cute face.
%
Not following the chat room rules will at the least get you a reprimand or, 
at the worst, kicked or removed from the chat room. The Operators are here 
to assist and make sure the chat room is a fun and friendly place to visit. 
Channel Operators are not guards, but they take their jobs seriously. In the 
event of unacceptable or disruptive behavior, you will be asked to leave the 
room.
%
it's time for lunch. you'd like to chow. Fraid I've got some bad news right 
now.  The fridge a box of empty space, no sign of eats, not e'en a trace, oh 
how you'd like a tiny taste, your stomach hurts, you find some Certs, 
they're gobbled, gone, but breath is fresh, you're nearing death, you're 
flailing on the kitchen floor, no more! just make the hunger leave, your 
stomach grieves a SNACK you NEED you've GOT TO FEED YOUR CHEETOS ARE ALL 
GONE OH GOD YOU'RE SORTING THROUGH THE TRASH: A WAD! USED PAPER NAPKINS 
QUICK, YOU LICK! DELISH but what a TEASE just PLEASE I need some CHIPS you 
weakly WHEEZE try empty KETCHUPs upside DOWN you LICK THE CRUMBS right off 
the GROUND it's LUNCH LUNCH LUNCH and YOU MUST CHOW the trickling sweat 
drops off your BROW from FRIDGE to SINK you madly DASH where did you hide 
that CHEETO STASH O! during LAST WEEK's ENterPRISE you ATE THOSE CHEETOS not 
so WISE so AS A DESPERATE LAST RESORT you GNAW your left hand's ugly WART 
the TASTY FLAKES of DEAD DRY SKIN have turned this LOSS into a WIN but 
STOMACH LETS his anGER KNOWN it GRUMBLES IN AN ANGRY TONE a FAT GEEK HUNGRY 
ALL ALONE--HELP HELP THE FOOD ! THERE IS NONE HERE! EMPTY BOTTLES OF 
CHEAP-ASS BEER YOU WRITHE ALONG THE GROUND AND FLOP! RELEASE THOSE BOWELS 
WITH A *PLOP* oh GROSS YOU SMOOSH the TURDS so WARM and with a FBLURT out 
trickles MORE but crazed you are. in NEED OF EAT you reach and get some 
BROWN POO-MEAT. YOUR SHIT ALL OVER HANDS AND FACE YOUR TONGUE AFLAME WITH 
POOPY TASTE the DOOR swings WIDE: NERD FRIENDS, a BUNCH  "Hey, Asimov! WE 
BROUGHT YOU LUNCH :O"
%
your mom is so fat that if planck's constant were 1 Js, she STILL wouldn't 
be able to quantum tunnel through a potential of any significance
%
i had a great time last night. thanks for tying me up with carpenters rope 
around my mantits and through the crack of my asshole and then facefucking 
me while pouring candle wax all over my areolas, your spiked-toe boots 
digging into my side while i am on all fours, back arched like a frightened 
cat, begging for mercy as the thick bands of the rope run back and forth 
teasing my grundel and burning my semen-encrusted pubic hairs, the smell so 
engulfing i vomited all over your bed and then you vomited all over me and 
then i shit myself and the rope made it split into two streams all over your 
knees, running down to your ankles and toenails. i'd love to do it thursday 
night again!
%
You give liberals a bad name. You give women a bad name. You give fucking 
everyone who has the title "HUMAN BEING" a bad name.Go outside once in a 
while and stop stuffing your bloated mouth with stale cheetos and flat 
mountain dew. You might feel sexy in that thong but that thick and musty 
smell wafting up your crotch proves that the best thing you could do for 
your sex appeal is to do your laundry, and maybe take a damn bath.Tap, tap, 
tap, your keyboard receives your idle, insipid wanderings. People care! you 
tell yourself. Just look at your comments. There...are a few of them. 
Proving that someone reads your drivel even when you post 5 pathetic little 
vignettes about a tediously pedestrian life in a single day.teh_enchantress. 
A pleasingly clever mixture of an internet in-joke and fantasy archetype? Or 
a slavish parroting of the same tired memes that lonely boys and girls use 
to try to find a place on an internet that refuses no one, least of all 
pedophiles and hate groups?I know, I know. It's something to do when you get 
to your room. YOu know, after a long trip to the bathroom, or having lunch 
with your mom, or going out with your other fat friends. You can come back 
to your computer and rant about how outrageous your recent bland adventures 
were.Well, do yourself and the world a favor. Shut the fuck up forever, you 
wanna-be slut. Your opinions aren't worth listening to, your life isn't 
interesting, you aren't attractive. Live some of life and meet some human 
beings. You're a social bulemic and you've been binging on the paper thin 
personas of your internet friends, most of whom are probably overweight 
engineers working at IBM in sexually frustrating marraiges.You think you'll 
look back on this time of your life and laugh? I dare say you'll look back 
and your lips will become a thin bloodless line as you realize what a 
fucking waste it was. The relationships you could have had. The friends you 
thought you made.And please avoid any real issues. Your understanding of any 
political or social problems in the world is about as thick as your hymen 
after you popped your cherry with a hello kitty dildo you bought while 
tittering on instant messenger with your friends. Wau~~~ so cute. You 
fucking shallow little wretch.In short, you are a female piece of refuse. 
The cigarette butt that your parents smoked for the love they thought you 
could give them, and then had stamped out as soon as they realized what a 
piece of shit had erupted from your mother's vagina, which happens to be 
rather overly-familiar in your neighborhood. Just shut the fuck up. Get out 
of that goddamn chair in which you've spent so many needless hours.I 
guarantee that unless you do something drastic, you should acknowledge that 
this is truly as good as it will ever get. Because from this point on you'll 
begin to realize the gossamer nature of any joy you might have thought you 
were feeling--and that infintely deep well of loneliness will erupt so 
sharply it'll cut your wrists.No, you're not complex. You're not deep and 
you're not thoughtful. The pain torturing you isn't inscrutable and your 
problems are not unresolvable. You're just stupider than you think, and that 
will always frustrate you. You know you're not attractive, but your tenuous 
grip on self-worth demands a lie. And your decrepit social life has the 
prospects of a bumblebee in a Scandinavian September.Good luck doing the 
unlikely. Some steps to help you on the way: plan your diet, start working 
out, find a hobby, and read the newspaper. That is all.
%
Now go back to what you do best, which is apparently poking your nose into 
others business because you're too bored with your own life. *pets joo*
%
We're the math nerds. Uh huh, that's us. Our glasses are thick; our skin 
bleeding pus. Chalkboards are out and computers are in... Mathmatica, dude! 
WTF have you been? We're crunching some primes while chatting on forums; 
Star Trek and Star wars; the Great Pauly Shore--Um, this math problem's 
simple to solve, can't you see? You need to brush up on your pi, roots, and 
e.
%
The nigger is a subhuman monkey, ape, Fat lips, kinky hair, VIOLENT, RAPIST, 
SMALL BRAIN (have you noticed how dumm most niggers are)and broad monstrous 
noses, car jacking saucer-lipped, ignorant fecal colored, ghetto-living, 
welfare-leeching, crack-smoking, hub-cap stealing. fried-chicken and biscuit 
eating, watermelon-stealing, 6-yr-old-white-girl-shooting, serial-killing, 
rapist, robber, murderer, adulterer, liar, fat-assed, white-woman-wanting, 
loud-radio-at-2:00-a.m.-in-the-morning-playing, undisciplined, 
tree-swinging, flat-congo-nosed, greasy afro-sheen, baggy-pants, and 
side-ways cap-wearing, maya angelou-reading, Jesse Jackson-worshiping, Al 
Sharpton, Louis Farrakhan and Malcum X-believing, disco doo-wop playing, 
non-athletic, non-musical, shoplifting, non-political, trashy, nasty, 
filthy, junk-around-the-house and litter-in-the-yard-keeping, incestuous, 
hoe-beating, unfaithful, dice-shooting, numbers-playing, lottery-wishing, 
roach-and-rat raising, lice-keeping, crab-farming, graffiti-tagging, 
gang-banging, drive-by shooting, corner-hanging, unemployed, VCR, 
television, and radio-pawning, cardboard-box-under the-bridge-living, 
pork-rib three times-a-day-eating, buck-toothed, knock-kneed, semi-bald, 
illiterate, cross-eyed, get-it-up-so-you-can-masturbate-to-gay-porn, 
viagra-taking, connection-frequenting, jungle-visiting, cock-kissing 
AfroInfectedDickSucking, spawn of a fat, greasy, nasty, sweaty, unwashed 
slutty bitch whore that should never be trusted or allowed to free range in 
Human areas.
%
Would you leave an otherwise perfect relationship if you found out your 
partner was interested in children sexually?
%
There was this one time when I was so constipated from lack of proper diet 
and opiate abuse that I strained so hard I passed out and hit my head on the 
bathtub. I guess my bowels released when I was unconscious because I was 
awakened by my dog licking a mixture of blood and feces from my swollen and 
prolapsed rectum. To this day the muscles are so atrophied that I must wear 
a special harness to keep my bowels from spilling into my rubber underwear.
%
WELCUM TO MY CHANNEL ON MIRC. READ DA RULES.TXT OR FACE A CONSEUQENCE!! 
RATIO FTPz ONLY 0DAY 0HOUR 0LAMENIZ. DOWNLOADIN FILES OF DA INTANET. SUME1 
SEND ME A KEEJEN FOR DIS PROGGIEZ.  ANYONE WANT TO SHAR PUBZ?????????? my 
brother raped me when i was 6
%
Does anyone else find it ironic that, as your virtual character gains 
experience, wealth and social stature, your reality character is losing the 
exact same things at the same rate?
%
The night begins, so sets the sun, but chatting now has just begun. T'will 
yet be hours ere I am done, for I'm the chat world's favorite son. Although 
by day I am made fun (they say that I weigh nigh a ton, they say ten feet I 
cannot run), sour regrets; I have yet none. They may laugh and they may 
shun, but words cannot match my shotgun; as fast and far as they may run, 
I'll pick them all off one by one.
%
Fuck my ass 'till my ass is filled. Thrust that cock up to the hilt. Ours is 
the house that Shepard built; all cocks hard and none shall wilt! Splatter 
your jizz all over my face. Rub it on in like grade school paste. To my ass 
your cock has laid waste; Mom still thinks that I am chaste ;)
%
Blog People (or their subclass who are interested in computers and the 
glorification of information) have a fanatical belief in the transforming 
power of digitization and a consequent horror of, and contempt for, heretics 
who do not share that belief. Given the quality of the writing in the blogs 
I have seen, I doubt that many of the Blog People are in the habit of 
sustained reading of complex texts. It is entirely possible that their 
intellectual needs are met by an accumulation of random facts and paragraphs.
%
they call me the King, of downloading THings, got bandwidth like no one on 
Earth.  My modems are hot, but the warez I got, adds to my collecting-stuff 
mirth.  I can't burn enough, CD's that are stuffed, with rars, zips, and 
tars of all kinds, but I must be strong, download all night long, ignore 
telltale OCD signs.
%
Guys, what I don't get about plane crashes and falling elevator deaths is: 
why don't the victims just time it so that they jump straight up in the air 
right before the plane hits the ground? The jump would be a little high, 
yes, and you might break your ankle or even your leg, but isn't that better 
than getting smashed to smithereens?
%
Me and my buddy were in downtown chicago and were walking to where he dad 
works and we came across this bum in the walkway. All fucking sprawled out 
across the sidewalk like it was his. My buddy pushed him with his foot and a 
couple 40 oz'ers rolled out from underneath him. Fucking lazy ass bum so I 
kicked him in the gut as hard as I could and he started puking up beer, 
corn, and something that looked like it came outta some gay dudes ass. Some 
security guard saw us and tried to chase us down but we were gone. Then I 
went to see my dad and go to GOLDS GYM to bench press!!!!!
%
I like to show off that I freeball. I love to have my pants just so so I 
show major butt crack also when I am at a urinal at a rest stop or sport 
event I unzip and unbutton my shorts so that when I am pissing the shorts 
drop down and everyone can see my bare ass! I love the feeling of guys 
knowing i freeball. what do you guys do to show off?
%
girl u must be grouphug.us because i would make up any ridiculous story just 
2 be on u
%
Seriously, I have the greatest respect for blacks. One of my best friends is 
African-American. These people put up with so much hardship, just like 
sufferers of Down's syndrome and mongoloidism.  I'm just so proud they've 
earned their place in American society.
%
why would I want to participate in your lousy conversation, you demagogue 
clown. i find no interest in you. you used to be a good friend of mine, and 
but you turned your back on me. you stabbed me right in the heart. the court 
has found you guilty. you have been sentenced to death.
%
oh yeah you're such a dirty girl arent you year girl why dont you jack off 
daddy yeah take daddy's hard cock in your tiny little doll hands oh yeah 
that feels so good now jerk daddy's cock off back and forth you little whore 
oh yeah
%
ur a very ugly jew thats thinks ur all that .. hope ur reading this cause u 
look like a fukin whore with that nazty ass makeup... U fukin peice of shit 
i hope ur dad rapes u till u cant move a muscle ... wat are u 14 and ur dads 
like 60... ur parents sure like to get it on ...Blink Blink...I hope u and 
ur jappy ass girl friends and boy friends die in hell where they will meet 
hitler and have some fun with him in bed .. if u kn ow what i mean
%
Pudge Picnic :  chubs on chubs with flab to spare.  "No condoms!" yelled, 
but we don't care!  Dude's be fucken, dudes be fucked, dudes be shittin, 
dudes be sucked.  Writhing on the concrete floor, these chubs are sluts. 
They're obese whores!  And gross! They've never taken baths.  Too much 
chili!  Awful gas!!!
%
PENIS in BUTT.  SPERM mixed FECES.  FASTEN your SILVER COCK to my GOLDEN 
HOLE.  My STOOL is the SATIN SHEET for your VISITING HARD-ON.   Ejaculate 
RAPIDLY and REPEATEDLY on my BACK and ANKLES.  DELICIOUS.
%
a little squirt of doody came out when I was picking up that heavy jug of 
milk, when i took of my spideyman underoos to check it out there were little 
squiggly things in it.. they were moving : (
%
Holy lord you are being duped. Napster is really run by the MPAA and when 
you download the music it tracks you on a FEDERAL GOVERNMENT server and it 
begins to hack ur toonz. Then the service goes under and the files self 
destruct leaving your HDD as a pile of googabits.  Cant you FOOLS see that 
this is just a plan to get you to JERK your DUMB NUTS while wearing ASSLESS 
CHAPS so that the MPAA hax ur data and enters ur base to kill ur doodz. If I 
see anyone using CRAPster or iCOONS i'll be sure to beat their head in using 
my engorged dong for their own safety ohh yeah.
%
I cut myself because I find it an artform, just like tattoo's, but I LIKE 
cutting a beautiful drawing into myself, as I did it and I drew it. But I 
did cut along time ago so, that might be it. Anyway, I only cut when it 
fades and needs touching up, but it sure feels good!
%
Sometimes I cut my penis when I get depressed...Unfortunatly, I managed to 
half-circumsize myself last night, after I got incredibly depressed about my 
girlfriend leaving me. I was devastated.
%
In all the outcry against them, too many people are forgetting the 
contributions pedophile catholic clergymen have made to our society. Did you 
know that the term "Joshing" someone, meaning to kid actually comes from 
Joshua Fairbanks, an altar boy famous for believing Father Jacob Cooper's 
laughable claim that he could perform the miracle of transubstantiation if 
Joshua allowed him to ejaculate in the boy's mouth.  ohh yeah
%
Shut the fuck up, you fucking hippy. No one cares about the fact that you 
don't own a TV or think TV is only for idiots, or whatever other attitude 
your elitist comment is about. Take it to the coffee shop, asshole.
%
Dr. Huxtable broke into the clinic and held me at gunpoint. I was his 
patient, in for my yearly pap smear. I couldn't believe it when he came in 
the door for the exam with a machete in his hands. He demanded that I take 
off my clothes, and begin to fellate him. He waved the machete around like a 
madman, so i complied. I was forced, at knife point, to take his entire 
penis into my mouth. Then I rubbed my clit and got off ohh yeah
%
Dude's fucking dudes. Everybody on the floor. No condoms No condoms!
%
yo what drugs u into? im all about the opiumnitrous / dxm / ketamine / acid 
/ weed / hydrocodone / ultram / oxy / demerol / morphine / codeine / 
dihydrocodeine / heroin / mdma / salvia / 5-meo-dipt / 5-meo-amt / amt / 
rohypnol / ghb / mda / hash / kavakava / adderall / dexedrine / ritalin / 
ephedrine / caffeine / alcohol / cocaine / shrooms / tobacco / xanax / 
klonopin / valium / ambien / soma / flexeril / zanaflex / zoloft / paxil / 
ether / spraypaint / phenobarbital / ativan / air duster
%
girl you must be alan greenspan because you have just raised my interest 
rate by several percentage points
%
wiggle thatass.pop a tab and smoke a fatty. happy everyday until we crash at 
your dads. boom tisk in our ears and amphetamines in our blood.giving 
blowjobs in the stalls to pay for $10 water.this moment will last 
forever.mom and dad broke up because of me
%
Again and again and again, I grow weary of junior high school English 
teachers trying to correct people's speech only because they encounter 
language forms they aren't familiar with. For the love of Mary, face it! 
Your English is only good enough to teach the average Mexican or Cambodian 
refugee to put together three-syllable words into coherent sentences used to 
beg for money, alcohol, drugs or shelter. Stop pretending you know English 
better than God and everyone else. Comprehend that the mere fact you were 
teaching English in the first place means that you weren't smart enough to 
do anything more productive and therefor your language skills are firmly 
confined to the mediocre. STFU.
%
These goddamn trolls interrupting my flow. These niggas don't respek us with 
a +o.  They gotta color spam and fake invite, bombing with asciis in yellow 
on white.   Shit yeah. it's bright, you 12 year old kiddie.  You ain't got 
pubes and you ain't seen titty.  I'll jupe your chans and ban your ass.  
Don't message me with plz unban, your chance has passed!  Other opers 
crappin up our relay net.  Why haven't you delinked your 386 yet? ircd needs 
xeons and dual cpus.  When it comes to irc hardware, you can't be a jew.  
Shit, nobody knows the trouble I've seen.  On invites for websites with 
naked teens.   Begs for ops and packet attacks.  Shit from users who use vi, 
not emacs.  Another long day of patrolling the IRC.  Eating my doritos, and 
having a jerk, I chat with TheWalrus and #nanog faggots.   All this niggas 
do is complain "the lag it's--  bad, chat is slow, and we're getting 
harassed."  Shit, trolls, this k-line is your last.  Once more and it's "G" 
and you're gone for good.   Banned from the internet chatting neighbourhood. 
 It's lonely at the top. Just me and CHANFIX.  Day in and day out. Banning 
trolls with my linux.   We give safe harbor to chatters world wide.  From 
pedophiles to hacker thieves.  Yeah, I won't lie:  IRC is a cesspool of 
e-misfits.  EazyCheezes and bagel-cutters like that nigga BitS.  But at 
least we're the best.  Disagree and you're gone.  BRB, mom just told me 
gotta mow the lawn.
%
but dont 4get 2 take ur pills ok GUY'S dumb bastards.....LMFAO..and yes i 
can spell un like u DUMB-EEESSSS .and i like caps 2
%
I enjoy black butts, butts in my face, butts which haven't been wiped, black 
dongs in my rectum, big sweaty black balls in my mouth, thick black dongs 
slapped across my face. I enjoy pressing my face into asses and sniffing 
them. I can take 2 cocks in my asshole and 3 in my mouth. I lick cocks and 
butts. I shake my ass in front of people's face before they fuck it hard. I 
wear a cock ring and enjoy letting people chain me up and piss on me.
%
i'm going to jump through my screen and through the internet and into your 
face
%
im gonna lift you with a forklift so high you'll beg to come down
%
Hey website administrator, suck my motherfuckin' dick, you shit-lickin' 
asswipe. You probably fuck your mother up the asshole, don't you? What a 
little, wet, wimpering vagina you are! P.S. Herbert Mantooth, you are the 
love of my life and I want to ram my shit-covered cock up your juicy 
rump-hole and then suck your balls raw, you big-city bad-boy bitchass 
buttfuck!!! Then I want to piss in your ass...
%
I'm so sick of all this "digital" vs analog crap. Guys, if you ANAL-logue 
people want "Warmth" just mix white noise into the sound file, or use shitty 
cables. That's what you're paying $5000 a preamp for, suckers!
%
i heard some wolves dig up natural cannabis plants and get thc in their 
paws, but i never thought it was true until a wolf was hit by a car in front 
of my house! i smoked the paws and was six different kinds of fucked up
%
Dumb Dongs, Dumb Dongs, Why Have You Left Me.  How I miss those long nights, 
when you raped me so deftly!  As the rain pitter pattered the shanty's metal 
roof, and my back felt the sting of your biting tooth. a single tear down my 
cheek, the pleasure of pain. Dumb dongs, won't you come back again?  Again, 
I pray...please, to me!  Dumb dongs is what I want to see!  And if you'll 
never come back to nest,  I can't be blamed for what comes next.  Now I 
furiously scrape my Mach3, on my wrists for from life I flee.  My skin 
getting all irritated, but I fear my dumb-dongless death is fated.  Dumb 
Dongs, we had good times, and we had bad.  From that first fondle when I was 
a lad...to teenage cockparties where semen was drunk.  But I'm left with no 
Dongs and I'm utterly sunked.  Dumb Dongs, au revoir, my lovely stiff pal.  
Fuck this suicide shit. I'll jus t fuck gals.
%
DING DONG WONG GOT A RAP FOR MY CLOWNZ  IM FAT AND UGLY; DEY PULL MY PANTS 
DOWNZ  AT SCHOOL, AND ITS CRUEL AND DEY TINKS DEY IS COOL  BUT NIGGAZ GONNA 
GET WHOOPED LIKE A NON-CLOWNY FOOL  WHAT WHAT DONT MESS WITH JUGGALO DUDES  
OR ELSE WE WILL SIT ON YOU AND YOULL BE DOG FOODZ  IT'S NOT THAT IM FAT--MOM 
SAYS MY BONES' BIG  SHUT DA FOOQ UP BEFORE I SPLITZ YA WIG FOOdongs
%
Now, what do you kids expect from an operating system coded by a man named 
Linus. You expect complete compatibility? He always has to carry a blanket 
with him wherever he goes, and asks Charlie Brown (hes a clown!) for help. 
He's supposed to be the saviour of the computing world? I'll put my money 
and my computer in good hands with Bill Gates and Microsoft. Because even in 
this review, you have to make reference to Windows XP, proving your 
inferiority complex. Good day.
%
The Fart Fantasy: Expel your gas, I deeply inhale.  The fresh fart from an 
athletic male.  Ohhh yes it's good, sweet and pungent. An aromatic fecal 
luncheon! with delicate bouquet and wispy taste, this fart's among the best 
I've faced.  Your nose wrinkled in abject disgust?  Oh no, it's good.  Try 
it--you must! Farts are nature's true delight. If you want some, theres no 
need to fight! Form a line right at my ass. Just wait for me to pass that 
gas. Your taste buds exploding, flavor extreme. I dont know about you, but 
it makes me cream. My pants that is, spurting now. Theres only one proper 
response - WOW.
%
OMG U WILL NOT GET THE TRANSIENT DAMPENING U NEED U MIGHT AS WELL UZE UR 
RADIO SHAK EARFONES 2 MIC UR DRUM KIT WHICH IS MADE FROM 5 GALLON BUCKETS 
WHILE PLAYING UR MILK CARTON UKELELE AND INSTEAD OF RECORDING IT JUST HAVE 
SOME GUY PROMISE TO TRY REALLY HARD TO REMEMBER WHAT IT SOUNDED LIKE SO HE 
CAN TELL EVERYONE LATER
%
i gobbled up turds. Yes. it was me!! I creeped into the mens room of my 
local mcd's.  Murder is wrong, and sodomy's a sin, but there ain't nothin 
wrong with this shit eating grin.  Shit eating grin!  Shit eating grin.  I'm 
a fecal feasting faggot, always have been.  Shit eating grin!  Shit eating 
grin!  Well hey you guys, what's happenin? :)
%
Folks, as we reflect on this massive tragedy, it behooves us to consider 
another giant wave sweeping the globe killing indiscriminantly, a wave of 
zionist oppresion. We need to divert funds away from this piddling natural 
disaster to fight the REAL threat: the Jewnami
%
the only reason they are fighting for the marriage thing is just to bitch 
about something, if they get the right to marry theyll bitch about something 
else nothings good enough for homosexuals and various forms of coloreds. not 
only do they have forced equality but they have extra benifits and weak 
minded people tiptoeing around them trying to be PC. and then they try to 
force beliefs onto people. its ok for them to disagree and feel and think 
what they want, but then they try to enact various forceful tactics on 
people who are equally but oppositely off the norm as they are, such as 
racists. they have just as much right to feel the way that they do as a 
homosexual does to feel the way they do. marraige is not a civil right, but 
the ability to hate something is
%
Anime characters gone wild. Non stop hardcore erotic anime moments captured 
on film, Shockingly hot steamy scenes of famous anime characters exploring 
wild sexual fantasies. Warning: Anime Fiction contains explicit raunchy 
content (yeah baby!) and is definitely not suitable for a candlelit romantic 
evening with a loved one, unless you both like watching anime characters get 
it on!
%
why dont you linux users just shove all this open source bullshit up your 
own ass.  no one cares about compiling or configuring or any of the bullshit 
you constantly jack off about.   we normal people just care about chatting 
and sending email to our friends and viewing the www so please shut the fuck 
up about foxfire or whatever the fuck tangent you're going off on.  thanks 
for reading this. dongs.
%
Chat. Chat. Till the sun is gone.  Chat till your eyes sag and your cheeks 
are wan.  Quickly sip that fizzing mountain dew.  Pop a few cheetos in your 
mouth and chew.  Pimply fat nerdlings huddled on the puter.  #Chatterz: 
Final Destination for those without a future.
%
The Flu Fuck: blow that snot into your hand.  wipe it on your tongue oh man. 
 crunchy crunch, the boogers go.  Gulp! you swallow. Down they go.  Uh-uh-uh 
here comes sneeze.  Achoo! You're bent, hands on your knees.  A prodding's 
felt, betwixt your cheeks.  What the heck? It's a linux geek  With cock 
unfurl'd, he rips your pants. Nothing can stop this fag's advance.  In it 
goes, his cock doth plunge. Your memory will never ever expunge: this 
terrible memory of assrape uncouth.  Why didn't he wait? Only 10 feet from 
glory hole booth
%
It's about time I told the truth. The reason I don't like gays is that when 
I was in the navy I had several homosexual experiences and so i know what 
faggots get up to is the devils work. This black guy in my dorm used to make 
me suck his dick and then he'd pump my ass full of his vile semen and there 
was nothing I could do about it. The shit eating faggot had me trapped there 
for months at sea so I had to suck his rancid sambo dick until we got back 
to port. That's why faggots will burn in a lake of fire and why I now have 
to wear a colostomy bag.
%
MTV is responsible for brainwashing the youth into thinking that niggers are 
gods and that rap is music! The garbage that they pump into kids heads 
should be punishable by death via anal electrocution! And has anyone seen 
the advertisement for the video game called grand theft auto-san andreas? 
Isn't that special? A game that glorifies niggers selling crack and running 
the streets with rocket launchers, shooting at cops and speaking ebonics! 
God I hate niggers so much I can taste blood!
%
Perhaps the hottest thing to do with Ashlee Simpson would be to 
(consensually) punch her in the face as hard as possible, busting her nose 
and lip, licking her bloody face all over, sticking your tongue down her 
throat and swapping blood and saliva for hours whilst playing with her raven 
hair and rubbing your hard-on against her thigh and crotch.
%
I can't yawn loud enough. Every person has met you. The "crazy guy" who 
comes up with half-inspired shit.
%
TAKE THE RED PILLTAKE THE BLUE PILLTAKE THE RED PILLTAKE THE BLUE PILLTAKE 
THE RED PILLTAKE THE BLUE PILLTAKE THE RED PILLTAKE THE BLUE PILLTAKE THE 
RED PILLTAKE THE BLUE PILLTAKE THE RED PILLTAKE THE BLUE PILLTAKE THE RED 
PILLTAKE THE BLUE PILLTAKE THE RED PILLTAKE THE BLUE PILLTAKE THE RED PILL
%
hahahah shit face, yes i'm so jealous of you!!! i wish i was some ugly ass 
kid who lived his entire flaccid existence for the joy getting hits on some 
internet forum. it must be better than getting hits to the face that your 
alcoholic step father gives you, right? you fucking piece of miserable shit. 
i feel sorry for your shit parents.
%
Still dialing 911 for emergency police services? If you're like many people 
in the New York area, these simple numbers can be a painful reminder of 
loved ones lost in the terrible tragedy of September 11, 2001.
%
Trolls of trolls. You don't get this.  We make jokes that you're sure to 
miss. LOL at LOL, Rolling on the floor.  Laughing or Crying? You ass-ruined 
whore.  This troll's so meta you choked on a chip.  Too much ranch dressing, 
you slant-eyed nip.  Go back to Everquest and pretend you're a girl.  We're 
the royalty of trolls. Kings, dukes and earls.
%
For those of you who dont know: The south beach diet consists of eating the 
moist turds from the discarded bathing suits abandoned at the beach.
%
People, am I the only one who realizes that binary packages are almost 
useless? Except a few basic packages (as in USE independent, e.g. gcc), the 
result depends greatly by the USE variable. Let's take for example the 
mod_php package. How useful a binary mod_php will be?
%
buddy, if you were a girl i would take u out to a nice steak dinner (w/ 
plenty of steak fries) and a movie (has to be matinee tho)
%
hi my names jimmy and im 13 and the other day i was playing with myself 
while watching showcase and i realised i couldnt quite reach my fireman with 
my mouth. so what i did was i took a small straw and shoved it down my 
urethra. and i started to blow really hard.. now i have a small bubble like 
figure on the side of my fireman.. could this be from blowing into the 
straw???
%
Algebra is the class today. All these numbers are making me gay. Square root 
of this, cosine of that. Goddamn the math teacher is fat. Equations and 
proofs, I can't take any more. She might be fat, but hey : She's a whore. 
I'll calculate the angle to ruin her cunt. Drive in my protractor, for a 
calculator I hunt. Need to calculate this math bitch's weight. Oh fuck I've 
been crushed ; too late.
%
Uhm, excusez-moi, but as a regular on the richest channel on EFnet, I think 
I have the authority to deem you a pusillanimous troll.  Go back to dipping 
your stale cheetos in your ramen, you white trash 
too-poor-to-afford-neutrogena too-stupid-to-know-Biore-is-better pizza-faced 
nerd. I'm going to go ejaculate into a fresh silk scarf, hand made by a Thai 
company in which my father has a controlling interest. I'm just glad your 
inane blather only took a small portion of my glorious 30" Apple LCD.
%
I also like to eat poop. One time my girlfriend came over and i just ate her 
poop. She got very very angry wehen i tried to kiss her she like said " you 
are the sickest person in the world you sick fuck" then i said what you 
don't like to eat poop. I mean i don't see the big deal i mean i have been 
doing it since i was a kid. I nevver had any friends because i would always 
eat there poop after they pooped it out. Since i never had any friends I 
just made friends with my poop. I would make racecars out of my poop and 
burn my penis with cigar buds. I think you should just live with it
%
fuck with me and i'll instant message you with text size 25
%
I flogged my engorged penis in a manic phase. My scrotum, hairless and taut, 
basked in warm rays. Glistening with sweat, Oh how it did shine. The helmet 
of a gladiator from olden time. Two bronzed eggs, such a glorious sight. A 
symbol of manhood and all that is right. You may choose to snicker or call 
me queer. Make no mistake; I don�t take it in the rear.
%
Look here "dad", the thing you need to understand about your daughter is 
that she WANTS to be raped. She LIKES it. Look at the way she dresses! If 
she wanted to be left alone she would wear the burqa allah so wisely 
dictates. Instead she dresses like a western harlot, she desires to be 
beaten and raped like all sluts of the west.  If you were a better father to 
her, this wouldn't have happened but that was then, and this is now, and I'm 
not going to let you stand in the way of her happiness any longer. If you 
want to get untied any time soon, I suggest you quit screaming and let me do 
what must be done in peace.
%
You wouldn't think it to look at me, but I am a serious badass and I will 
mess you up if you so much as look at me funny. A lot of people were 
executed last year in this state for that deadliest of crimes: Fucking with 
me. So step back off of my IRC channel if you know what's good for you, 
BITCH. 
%
Earlier today, while talking to a client about her policy, I accidentally 
said "I'm pro rape" instead of "I'll pro-rate your account". She tried to 
ignore the slip up, unfortunately I complicated matters by gagging her with 
my necktie and repeatedly raping her. Sometimes I think I must not care 
about Geico shareholder value at all.
%
I cant believe this. I bought this Radeon X800XT and I'm only getting 70 FPS 
in the latest action game. The manufacturer's drivers are shit, and the 
programming for the game is sub-standard. I spend my good money, and I 
demand 72 FPS for my entertainment pleasure.  I will attempt registry hacks, 
extreme overclocking/cooling and DLL replacement to achieve the necessary 
result, but if I am not successful, this game is the worst in history and 
should be consigned to your recycle bin. Good day.
%
This fucking faggot just pisses me off becuz he and I were internet dating 
and he broke up with me for some other fuckin newbie. Ima tell you what 
don't internet date him cuz he cheats on you and he is mean. Im going to 
hack him soon and hes going to wish he never met me that fuckin faggot.
%
Insane Clown Posse MegaRap -  We're da Insane Clown Posse. We're overweight 
and bossy.  Oh shit you gotta know what's up.  To be hardcore you need 
make-up.  Closet faggots all are we.  Fiddle my balls and my pee-pee. Insane 
Clown Posse? More like Loony Queer Gang. One dude who's more attractive than 
us: Shredder's pal Krang.   We're weird and we're angry and we don't conform 
at all. Of course we've never faught before, we'd run from any brawl.  You 
coward! You goddamn pussy.  Can't you handle us?  It's not our fault cheetos 
taste good and we've got ample guts.   Raw raw, I'm Violent J and I play the 
trombone.  I march in the school marching band; I've got a loving home. My 
life sucks bad and I kill cops and shit on toilet seats.  I curled my hair 
and did my face and now I'm selling beats.  For legions of you fat-assed 
fucks think I'm the coolest thing.  But all I do is amplify my farts and 
yelling, sing.  In secret I buy Eminem to study up his rhymes. but I don't 
get it, how he does, I cry to Mom and whine.  My favorite sport is Ninja and 
I always dress in black. It looks a little awkward in gym class when I run 
track.  I never bring the proper clothes--of changing I am scared.  What if 
the jocks see how my tighty-whities are all teared?   I only wear one pair, 
of course. For more would be a waste. And after a long day, well, I just 
LOVE it how they taste.  That sour sweet of sweat and shit forever on my 
lips.  It's not my fault if briefs well used will in time, rip.  Wash my 
clothes, you dare suggest? Hygiene's invoked my ire.  I scrub myself with 
oil from a pack of Oscar Meyers. Dead people, gore and blood. It's shocking 
is it not?  Check it out, my older brother might get me some pot.  Once my 
dad gave me some beer and yes, I took a sip.  Let me say, it's good! I 
couldn't even handle it.   And tuesday after school my friend named Mike 
gave me a cig! But I was scared of smoke-caused cancer. Maybe when I'm 
big... Instead I wrestle with my pals in first or second grade.  I want to 
beat those little punks, but in truth, well, I'm afraid.  They pin me down 
and kick me in the head so violently, and when I lay, a sobbing heap, they 
squat on me and pee. Juggy Juggy Juggalo two four six. This is Linkin Park 
produced exclusively by hicks.  I'm the terror from Vermont, the danger 
state with trees.  Yeah, I'm from the cuts. It's practically LBC.   I'm good 
at mathematics but I don't like history. but more than doing homework I read 
Nancy Drew myst'ries.  So you see it doesn't get any more hardcore than this 
clown. You better watch yourself or--OOPs O shit! I just made brown.  I 
don't have such a good control of muscles in my rear.  Just one drawback of 
being an HIV plus queer. Sometimes Dad dresses like Gandalf, does me up as 
Frodo.  My mom watches--she kind of looks like hunchback Quasimodo.  The 
ring of power tween my cheeks; his middle in my earth, his burly arms fast 
wrapped around my rarely-cleansed girth.  I try to tell my teachers of my 
plight, my awful tale.  But when I get to Frodo: "Holy shit I DO NOT CARE." 
A juggalo cannot exist if Daddy is a-rapin.  But in truth, you get to like 
it so there's no escapin'. What's it matter that my songs completely lack a 
tune? My customers are tone-deaf pusillanimous poltroons.  They listen in 
the desperate wish that they'll become less nerdy.  "I can't go to parties," 
they say. Bed time is seven thirty.   Rebel they will, alone in a bedroom 
with door a-signed. "No girls allowed," boldly proclaimed. I don't think the 
girls mind.  Sipping mountain dew and with a pop a new can-Pringles, they 
protest online. Forum posts. these fags: forever single. I'm ninety pounds 
above the line. They say I'm overweight. So what if I could never ever ever 
get a date. Yo! I'm a clown and I'm crazy and I sing scary shit. I've got a 
gang of white kids who in front of Linux sit.  The white screen pales their 
faces which are pocked with pimples many, they spend their nights with pants 
unzipped, jerking to Brain and Penny.  This you see's my posse and you betta 
represent.  Don't be male or have a cock--our pants'll be a tent. This's 
Violent J now, signing off, concluding this show live.  It's time to show my 
true ID! Love, Mega Man 5 I LOVE PEE
%
hi, i came across a picture on 'rate my poo' a few weeks ago, of a female 
bent over in a forest or something, with a long 'log' coming out of her 
backside. it's since been vanished from the site - any chance of it being 
re-posted, or getting a copy of it emailed to me? that would be great! 
thanks.......
%
I'm a Vietnam Vet. I don't like gooks, Islam and all that shit. It is a just 
war in Iraq. Those son of a bitchin Iraqi's are trying to make other people 
live like them, including you. Look at what they did to the Kurds, the 
invasion of Kuwait and the beheadings of the internationals who have nothing 
to do with the war. They're cowards and eventually will be eliminated if for 
anything, their oil. The John Kerry liberals of the world are also your 
enemies along with the fuckin' U.N. Koffi Annan is nothing but a 
lying/stealing thief with interests in the middle east. Fuck 'em all. I'm 
glad we went to war without 'em. Remember, it wasn't too long ago that we 
were at war with G.Britain, Germany, Japan. North Korea is next. Kim Il Jung 
has shit for brains and will also meet his fate. Don't trust those fuckin' 
Russians either. The history of war always repeats itself. I would rather 
fight and die, not for the liberal fagots of this country, but for my own 
piece of mind and revenge. Fuck all that talk about colateral damage. How 
much colateral damage was done in New York?
%
Just as there are warnings on cigarette packages that smoking will give you 
cancer, White people should be warned that their risk of getting AIDS is 
increased dramatically by having sex with Negroes. Not that a National 
Socialist, or any racially aware White person, would ever in a million years 
have a desire to have sex with a Negro! However, many of our racial brothers 
and sisters are victims of anti-White propaganda and actually believe that 
race-mixing is a good thing. These people should be made aware that their 
chances of getting AIDS is increased by such actions.Negroes, who only make 
up about 13% of the US population, now account for more than half of all new 
H.I.V. infections, according to the Centers for Disease Control and 
Prevention. Negro females account for 72 percent of all new cases among 
women. These facts should shake the racially numb White into reality!
%
You have all been brainwashed. Yes the airwaves taught you that hating 
blacks is wrong and they do not stop there. They are telling us that we must 
accept faggots rights. They tell us when we are preaching the word of God 
about how God hates the HOMOS that we are commiting hate crimes. Another 
buzzword for you simpletons to use to make yourself think you are a tolerant 
intelligent person. I guess you folks think you are smarter than God. You 
tell the semen drinking feces eating faggots that they have a right to do 
what they do even if it kills them with disease. You say I cannot preach my 
bible and warn these filthy faggots where they will spend eternity should 
they continue this vile lifestyle. Does anyone have tolerance for a person 
living a Christian lifestyle. Who sticks up for us?
%
I always told myself I would try anything once but this was a total failure. 
Was smoking some killer hash in denmark and met this american african woman 
named shawna. She seemed to be educated and we hit it off. One thing led to 
another and then She gave me a BJ which was really good and when I went down 
on her I vomited. I lied and told her I had a cold with post nasal drip. I 
have sores in my mouth. After wiping the vomit off of her and a couple lines 
of coke I entered her doggy style. Good thing she would have made me 
dismount after the expression of the stench I experienced. It was a terrible 
diareah stench which from what i hear is normal. I had to take yet another 
line of coke to finish the job. The sex was below average and dismal if you 
consider the hideous odor I went through. Just got back from the Doctor and 
I have the clap. I thought Americans were clean. WTF?
%
FUCC ALL U DAYM HATERSZ..U CAN JUX EAT DIS FRESH LAO PUSSY RYT HER NIGGUH!!! 
I DONT GIVUH DAYM IF PPL CALL ME A FUCCIN HOE CUZ I NOE IM NOT. DATS ALL U 
GUYS FUCCIN DO IS 2 TALK SHIT ABOUT ME?? IS DAT ALL U CAN FUCCIN DO? U NO 
WAT? I DONT GIVUH DAYM CUHZ! FUCC U NIKKAS DER AINT ROOM 4 HATERSZ IN MAH 
LIFE AND SOUL NIGGUH FUCC U! DIE N GO 2 HELL BITCH! ALL U DO IS JUDGE ME BYE 
DA WAY I DRESS AND U DONT NOE DA WHOLE STORY. DONT JUX JUDGE DA BOOK BY DA 
COVER! READ DA WHOLE STORY FIRST!  I FUCCIN HATE ALL U FUCCIN HATERSZ! U 
DONT NOE WAT IVE BEEN THREW! U NOE WAT! FUCC ALL U HATERSZ! U FUCCIN DISGUST 
ME! U MAKE ME WONA SPIT AT CHU! NiKKuH FuCc aLL Da HaTeRsZ uP iN DiZ ShiiT!
%
Well, what else is open? Besides your mouth...when you're like kissing on 
some gay dude and like holding his muscles, cuz his arms just are like 
wrapped around you...and you feel like so safe cuz you're like, you know, 
not like you're gay or nothin' but God you just want to like bury yourself 
in his chest and just live there forever.
%
Mac supporters are always criticizing Intel processors for their deadend 
CISC processors.  Well, I just have to say it's not worth the weight gain.  
So what the G5 has a more promising future? I've seen the obesity figures on 
Mac users.  Is using a Bisque processor worth the risks of being overweight?
%
Computers affect almost every aspect of our lives, from driving to alarm 
clocks to music to refridgerators to our leisure time to our social lives to 
ad nauseum. These things are intertwined with our lives in ways that are 
often unnoticed, yet they affect us directly - so directly that I think that 
when we are talking about the latest Mac product, we're not talking about a 
"product" but about a way of life.
%
your a little bitch..all you do is sit at home on ya comp looking for free 
homosexual website...................come to arizona mother fucker.the 
desert juggalos will be waitin.hows bout you o to every state and walk up to 
some real juggalo killas and tell em to they face icp sucks..then we see 
whos tough....your talking hit through a fucin creen......HA HA HA HA HA 
pussy
%
White women simply can't get enough black dick, it's a proven fact. You may 
think your wife is faithful, but this is generally only the case if she's 
not attractive enough to land a black cock of her own. Don't believe me? 
Think about how many black men your wife or girlfriend interacts with EVERY 
DAY. Odds are, she's fucking at least one of them, maybe more!
%
I've been running Windows XP since beta2, and it really kicks ass. I don't 
have to recompile my kernel when I want to install an ethernet card, it 
automatically detects it and installs the drivers no matter who the 
manufacturer is. Dual monitors? No chore with windows, get two video cards, 
two monitors and it's set up! I don't need to edit config files with editors 
that are 20 years old, and show it. Intellimouse custom buttons? Piece of 
cake, with my Intellimouse software.You want to run games? Great! Choose 
from an array of tens of thousands of games that run great under DirectX and 
the NT subsystem. Stability got you down? Not in this version, I have had 
uptimes of over a month (and then the damn power goes out). Good internet 
browser? No need for Kommunist shit, you've got the great Internet Explorer 
6 a click away. Doing some development? Nothing but the best for Windows 
users, choose from a suite of Visual Studio products that suits your needs, 
with one killer IDE. Or, pick up a beta edition of Visual Studio.NET if you 
have 200 megs of RAM to spare! You Linux faggots can keep rooting for your 
piece of shit operating system that Windows 3.1 tops in terms of 
compatibility, all the while hindering your experience for something else 
you could be doing, while I use the operating system of choice (or by 
default) for over 200 million others in the world. Anti-Microsoft zealots 
piss and moan all you want, but your queer little OS won't be the reigning 
desktop champion anytime soon.
%
Yep, Heidi Klum has done it, she�s shown just how low she will go. It�s sad 
in a way, but to be expected, she isn�t getting any younger, and what better 
way to bring attention to yourself, than to show the world you�re a 
low-class nigger-loving slut-whore black pole-humping piece of euro-trash? 
At one time, early in her career, she was quite beautiful, but now, she�s 
just another pig. She�s no different than the usual white trash that ends up 
dating/marrying this unevolved species that time forgot. So, farewell Heidi, 
hope you get pregnant, and have the opportunity to raise future criminals, 
murderers and rapist, er, I mean children
%
A special warning about Matrox; they are from Canada, and so their products 
do not meet the demanding electrical standards required of American computer 
equipment and because their chipsets are mostly illegal counterfeits of 
American chips, you may encounter unexpected bugs and compatibility problems 
with standard APIs such as DirectX. ATI is also Canadian and has the same 
problems; counterfeit computer part manufacturers are   attracted to Canada 
by its lax intellectual property laws.
%
Don't open those emails. Don't surf that page.  Lock yourself in a faraday 
cage.  Your monitor'll pop and your CPU will fry.  All I have to do is click 
the button labeled: Die.  I've got your IP targeted, your DNS uncloaked.  
Surrended and pony up, or click and Boom: You're smoked.
%
The closest I've ever come to sucking my father's dick was the time he 
caught me going through the trashcan in his bedroom. As a teenager growing 
up, I would always search my parents' bedroom trashcan for used condoms. I'd 
slide the used condoms over my own cock and jerk off with them, excited by 
the feeling of my father's jizz and by the idea of adding my own fuckload 
into his. Well, he eventually caught me kneeling over the trashcan, sticking 
my tongue deep into one of the sticky used condoms and stroking my cock with 
my free hand. I was literally caught with my pants down, and there was no 
way for me to hide what I was doing. After what seemed like several horrific 
minutes of stunned silence, he finally mumbled something about the fact that 
at least I was growing up into a healthy young man, and that I shouldn't 
stop what I was doing or I'd get blueballs. As embarrassed as I was, my cock 
didn't want me to stop what I was doing, either. My father sat next to me on 
the bed while I continued to sit on the floor jerking off. The novelty of 
this situation had me horny as fuck but also a bit nervous (sort of like 
performance anxiety) and it took me a while to finally pump out my cream. As 
I started to shoot off, I felt an unexpected sensation on my shoulder. My 
father had been stroking his own cock as well, and he orgasmed at the same 
time I did. I quickly turned around and saw him pump out another two or 
three streams of cum. His eyes were screwed tight, and that fact made me 
bold enough to lean in close enough to gently lick on the slit of his 
swollen cockhead. I got the last drop of his spunk on my tongue. If he 
noticed, he never let on. So I actually tasted my father's jizzcream, both 
from his used condoms and directly from his cock, but I never did actually 
blow him. But maybe one of these days I'll have the guts to ask him if he'd 
let me. I think he might just not mind!
%
Did you know? The real reason slavery was abolished in the United States was 
the discovery that niggers would gladly continue working in the fields all 
day in order to buy themselves shiny shoes and fried chicken in order to 
demonstrate their newfound wealth and freedom to other fellow niggers. By 
removing the financial sensibilities of the white man from these shitskinned 
jungle turds, our society has flourished greatly in the last 140 or so years.
%
It's just retarded 10yr old humor. Oh wow, Topless chick made out of pixels, 
being zoomed in on by a perv. The desert comment doesn't even make sense, 
there's grass there. Also, You can clearly tell she's dead, So that would be 
fantasizing necrophelia. Good job. Sick bastards.
%
We need to remove laws which prohibit civilian ownership of rocket propelled 
grenades and mobile surface to air missiles to enable our patriots to 
overthrow the state in the event a tyrannical government takes power.
%
My mouth is at your disposal. Use it for your pleasure as I'm a GREAT 
cocksucker. Use it for your toilet as I'll drink your piss and eat your shit 
turd logs. You may treat me however it is that you want, whatever makes you 
HOT HARD and HORNY. I like guys 50 yrs or older. Straight/Bi/Gay 
Married/Single/Whatever...I am discreet. I am single and live alone in Long 
Beach California, so would like to keep action in Long Beach California, so 
would like to keep action in the LA/Northern Orange county area. I can 
either host or come to you. I await your golden logs, mouth watering.
%
what is the point of gay marriage ? marriage as an institution exists to 
keep people who don't love each other together for the benefit of their 
offspring . why do gays want this?
%
It's a shame the gooks beat you good in Vietnam. (though you probably won 
the unofficial underage girl rape contest)You fucking rambo wankers
%
<3 BUSH, ONWARD CHRISTIAN SOLDIERZ, NEW WORLD ORDER, MITE MAKEZ RITE, THE 
SWORD CHOPZ OFF THE ARM HOLDING THE PEN, MANIFEZT DESTINY, REPREZENTIN' DA 
ZOG CLIQUE, MACHIVELLIAN, DIDN'T NEED 2 SERVE IN VIETNAM TO BOMB DA KORAN, 
BANG BANG, IRAQ THE NEW SOVIET BLOC, GUN-BARREL DIPLOMACY, VOTE NADER VOTE 
NADER VOTE NADER
%
As long as I can remember, I've been picking at this small scab inside my 
right nose near the nostril opening alongside the bone area. Sometimes its 
flaky and hardened and thats why I pick at it and it never really goes away. 
Other times, its perfectly fine. Your thoughts?
%
Hello.  I am rich, and have the biggest computer. In addition to this, I 
also masturbate into the most expensive monogrammed towels you'll ever set 
your eyes upon.  You can not even possibly compare to me.  Good day.
%
I saw in a recent magazine that companies are legitimately selling catheters 
as gaming accessories.  Sitting immobile in a chair, hooked up to a catheter 
for the rest of your life..  does this sound like anyone?? Christopher Reeve 
tried in vain for years to escape what you people do to yourselves willingly 
every day.  My God, get some priorities!!
%
speaking of policy, at least my country has enough sense to limit itself to 
two moderately similar political parties.  you disgust me with your 
parliamentary coalitions that don't manage to do anything except to 
highlight the evils of socialism
%
OMG RIAA MPAA STARFORCE 3 DA SCENE IS DYING FTP FBI CYBERCRIMES DOJ RIP 
ISONEWS MITNICK SCENERS CODING MOUNTAIN DEW LEECH ACCESS DISTRO HONEYPOT 
UNIVERSITY SERVER OC192 TOPSITES CLICK HERE FOR FREE WAREZ CRACKIN 
PHREACKING HPVAC PHRACK MAGAZINE 2600 MITNICK MITNICK MITNICK FXP COLECO
%
WTF LEAVE CHEESEBURGERS OUT OF THIS WHAT DID THEY DO TO YOU!?  JUST BECAUSE 
YOURE SOME PO-DUNK NIGGA FROM DA GHETTO DOESNT MEAN YOU GOTTA BE BASHIN ON 
COOKED COW I MEAN SERIOUSLY ILL BET MONEY THAT YOU EAT ENOUGH FRIED CHICKEN 
TO FEED THE ENTIRE CONTINENT OF AFRICA AND YOU PROBABLY GUZZLE ENOUGH MALT 
LIQUOR TO FILL 200 BOEING 747S SO SHUT THE FUCK UP YARD APE
%
I fail to see how you're a genius; passing up people who can actually play 
instruments for rappers who blubber into a microphone. However, I pick up on 
the hints that you're an African American and you would support your fellow 
"musicians" in their tirade of encouragement for shootings, drugs, and 
whores. Little do you know you're only fueling this society's demise by 
encouraging barbaric hip hop culture. Have a great day.
%
Of course, the day will come when the stupids and the normals such as 
(chances are) yourself will fuck things up with your free-market, 
all-American, freedom-loving life-style to the point where the rest of us 
who have more than two brain-cells rubbing together will have no choice but 
to exterminate you all. Sure, eat another cheeseburger and add another 
pound, pretend to be a sensitive, caring guy when all you really want to do 
is sneak into your room and see if you can find any pornography where hot 
blondes are forced to eat shit and suck black cocks while hot Asian lesbians 
suck menstrual blood out of their wet cunts. Just keep your head pointed 
straight at that little monitor of yours, and you won't even see us as we 
sneak up and put the gun to your head. We will show you no mercy. We will 
find you, we will slit your childrens' throats, and people like you will 
hang from the street lights. None shall escape the holocaust of the useless!
%
Would you like another piece of waddymelon to go with that fried chicken and 
malt liquor? Beat it shitskin banjolips. This is a place for humans.
%
yea i'm in class and fell upon this site, i'm no techie but am quite 
intrigued by the discussions taking place here. altough, i mean you guys 
sound like internet geeks, the kind with acne and anime and weight problems. 
do ya really need to resort to vulgarity against your own kind?  express 
your opinions, this country was built on those kind of freedoms, but take a 
chill pill.yes, i did just type that.
%
i bet you shop at thinkgeek you faggot, go jack off while wearing your 
binary watch before you cry yourself to sleep in your tux blanket
%
YOU KNOW GUYS I THINK INSTEAD OF CAPS-LOCK, WE SHOULD START SAYING CAPS-LOL, 
BECAUSE IT CERTAINLY IS AMUSING WATCHING CERTAIN UPTIGHT INTERNET NERDS GET 
ALL AGITATED OVER A BUNCH OF UPERCASE LETTERZ.
%
Typing laughter on IRC!While I understand that your knowledge of the world 
outside the Frances-strewn shards that, on any other day, would have 
comprised your double-wide is rather, shall we say, limited; Here in the big 
scary city we "America Haters" like to call civilization, there are rules 
that govern behavior and, to put a finer point on it, internet humor. And, 
although one could argue that, having missed out on the more elegant points 
in life such as color television or refrigeration, that you should be 
exempted from said governances - I find it best to point out that ignorance 
of the law is no excuse.This fact, combined with your abhorent 
neoconservative indoctrination only leads one to conclude that your mental 
stature, while irrefutably suited towards a more custodial vocation, does 
not serve you well here on the fifth-gear world of the "information 
superhighway." Indeed, I would be remiss if I did not instead point you to a 
more, shall we say, rewarding hobby such as admiring your reflection in the 
murky waters of the local "crick" or, if you fancy, arguing with trees.
%
slitting open the urethra, cauterizing the prostrate, inflicting corporal 
punishment, blistering the penis with caustic acid, flaying the penile skin 
with razor blades, sewing the prepuce shut with metal wire, encasing the 
genitals in plaster or in lockable metal cages, or fitting the penis with 
penile rings studded with sharp metallic teeth to discourage erections
%
The doctor performed fabulously with his textbook execution of a four-point 
circumcision as he burst into my wife's room in the maternity ward, pinched 
a clamp around my son's foreskin, and inserted an instrument between the 
foreskin and glans. I covered my ears as the infant's shrieks intensified, 
and the doctor was gracious enough to quickly tear the foreskin lengthwise 
as my little son's head shook back and forth ohh yeah
%
I can't believe I just took a shit in my bellman uniform at the front desk. 
What the fuck? I can't stand up and take it to the employee lounge because I 
am literally wading in nuggets of my own ass gravy. Any attempt at movement 
would send this rancid post-chili splurting all over my wingtips and into 
view of every tranny prostitute within the hotel lobby.  It doesn't help 
that I've been doing the night audit all night! I can barely stay awake! 
What am I going to say to the hotel manager when she comes back from getting 
chili dogs and asks what I just did in the presence of the hotel guests? 
She'll make me drop trau in front of everyone again. There it is, the 6'5" 
shemale on meth just asked me if I could smell 'that'. I gotta go.
%
This is how I calculated the how the PS3 would be about 4-6X more powerful 
than the current PS2 according to Moore's law. Assuming that the clock speed 
and other performance metrics of the PS2 stay relatively proportional, in 18 
monthes the speed/power doubles to 600MHZ, in another 18 monthes (2005) it 
doubles to 1200MHZ. 1200 divided by 300 gives you 4. I added the range of 
4-6 b/c I know that SOI yields more efficiency and they certainly are going 
to use more and faster memory...hence the range of 2. Either way, the PS3 
ain't gonna be 1000X more powerful. You'd have to be a gullible fool to 
believe that.
%
What the fuck does that have to do with anyhting. Do you have a dick in your 
ear or something. i dont want your fuckin apology, I want you to just log 
off, stop fuckin writing me period and then go to your mothers room, eat her 
out, beside the drawers, next to the trash cans, and then tell her I 
appreicate her shaving my balls b/c its really hard to do it myself. Until 
next time, fuck you and use your teeth to pick the hairs off my ass. ha ha.
%
oh yeah you dick likcing fuck. you are a waste of sperm your mother should 
have fuck that truck driver other than that dirty as german (your 
father).<---(you're not smat enough to get it, stupid fuck) Maybe you would 
be doing something better with you life other than argueing with me about 
posting meaningless shit.
%
Guess whoes back talking shit this mutha fuckin faggot is a mutha fuckin 
bitch saying he hates rap with a passion then all I got to say is fuck you 
you mutha fuckin bitch I fukin say alot of curse words because I fuckin hate 
when you start hating on rap if anybody gots a problem with the way I think 
then you could find a fuckin short peir and take a mutha fuckin walk I hope 
you fuckin die a long and painful death you fuckin bitch later you mutha 
fuckin haters word to your mutha fuckin mutha
%
before yall bitchmade mutha fuckin computer nerds come on here talkin shyt 
like u hard get da infos straight..da man dat did my site TOLD ME STRAIGHT 
OUT he did juice's site so b4 u call me a fuckin biter get all your facts on 
da table u ignorant ass mutha fuckaz!!!if I MADE DA SITE u would have every 
right to call me a biter...i didnt do shit to dat site..da man contacted 
me..showed me juices site and said he did it...and then did mine and didnt 
even finish it so fuck all yall hatein ass mutha fuckaz!!if yall wana run 
lip do it face to face fuck dis computer shit..HOLLA!!
%
I've been into just about every car scene, truck scene, motorcycle scene and 
yes the import scene is the worst. Main reason is because we got a bunch of 
little pricks who drive around and think they're badasses cause they gots a 
body kit y0 and in all reality I could take on 10 of them at the same time 
and make em cry. I'm getting to the point to where I don't even wanna go to 
car meets anymore cause of all the stupid bullshit thats goes on and that I 
get associated with it cause I drive an "import". I'm about ready to go buy 
another 5.0 or camaro and be done with imports all together just so I'm NOT 
associated with all these fucking morons driving around now. I drive my 
Grand Cherokee all over the place and I always have other Jeep owners wave 
at me.
%
take this short quiz to see if u qualify to meet me: ugly? stupid? mean? 
ghetto? non english speaking? not from ohio? if u answer yes to any of the 
above, don't click to meet me cuz i hate all of the above :)
%
It's not so much that I hate anime, well I do its utter shit, but that's not 
too bad because the world would be boring if we all liked the same thing. 
Anyway what really gets to me is anime fans or 'otakus' as they have dubbed 
themselves. They think that liking anime makes them superior to those who 
don't, they think that if someone does not like anime it means they are too 
stupid to understand it and they worship Japan. There ongoing obsession with 
Japan makes me want to kill myself, they all want to learn japanese and move 
to Japan to be an anime artist. They insist on speaking in broken Japanese 
all the time, trying to show off to there fellow anime losers just how much 
they know and they get offended if you say a slight word against Japan. They 
also have an obsessin with gay people and yell and scream whenever they see 
one, they say that gay people should be treated the same as straight people 
yet i don't see then shout and scream when they see a straight couple do 
you? No, they only reason they love gay people is becasue they are desperate 
to show the world how openmided they are and they just wait for someone to 
something like 'thats so gay' so that they have have a 3 hour discussion 
about it.I myself don't have anything against gays but to be honest i don't 
really think about it. I could go on for hours but I can't be botherd just 
know one thing Anime couldn't be crapper if it tried.
%
I don't know about you guys, but knowing that gay marriage exists here now 
has hurt marriage. Whenever I try and fuck my wife, all I can think about is 
two sweaty, heaving male bodies joined together in government sanctioned 
disgusting decadent man sex with large calloused hands grasping and moist 
gasping lips joined with giant throbbing cocks ohh yeah
%
NO I SAY PEOPLE LIKE YOU HAVE SMALL DICKS COS YOU DO BUTT MUNCH YOU DONT 
EVEN HAVE A NAME YOU SAD FUCK PISS OFF NO ONE WANTS YOU HERE ON THE PLACE OR 
IN THE WORLD YOU FUCKING JEW NERD HITLER SHOULD HAVE KILLED YOU FUCKING ASS 
YEARS AGO AND THE REASON YOUR PISSED OFF IS COS THE TRUTH HURTS YOU WHY DONT 
YOU GO BACK TO WEARING A PINK DRESS AND BEING FUCKED BY YOUR UNCLE YOU 
LIITLE DRAG QUEEN GO TAKE YOUR FAGGOT SELF AND JUMP OFF A CLIFF SMARTGIRL IS 
BETTER THEN YOU WILL EVER BE YOU ARE NOTHING AND FOREVER BE NOTHING LATER 
GEEK
%
I, for one, feel that Fox TV has gone too far with their programming 
excesses. Have you seen their new show, the X-Files? It's simply ludicrous! 
I mean, demonic possession? Aliens? Come on, that's ridiculous! But the 
worst thing is that it implies our government lies to us! Hey, Sergeant 
Muldower: This is America. Love it, or leave it!
%
HAHAHAHAHA FOOL YOU COUNTRY WAS FOR CONVICTS TO THEY ONLY THING THAT WAS 
DIFFERENT IS ALL YOU FUCKS HAD IT SO BAD YOU GOT CRANKY AND HAD A WAR OF 
INDEPENCE COS THE BRITISH WERE ABUSING YOUR ASSES HEY AND YOUR COUNTRYS A 
REST ROOM FOR MEXICANS LEAST I DO SOMETHING ABOUT OUR PROBLEM WHAT DO YOU DO 
ABOUT MEXICANS THATS RIGHT NOTHING COS YOUR A CHICKEN SHIT WHAT DO YOU CARE 
IF YOUR WOMEN LOOK GOOD YOUR GAY AND THATS WHY WE ARE NOT ALL FAT CO
%
for all of you non believers. please just answer 1 question 4 me. If God 
didnt exist then how did the earth get here.You will probably come up with 
some answer like , a bunch ef gas and dust and a star formed the earth. but 
if all that is true then hoe did that gas and dust get here. i am a 
Christain and i encurage you all to be 1 aswell. You will be much happie, 
take it from a kid that knows
%
ASIANS FUCKING SUCK THERE EVERY WHERE DOWN IN SYDNEY FUCKING OVEL EYED 
GOOKS. WENT DOWN TO CHINA TOWN 2 WEEKS AGO BASHED A COUPLE OF THE 
DICKHEADS.THE PROBLEM IS THEY BREED LIKE RABBITS THEY JUST GO ROUND FUCKING, 
SPITTING OUT BABYS AND SPREADING THEIR CHICKEN FLU AROUND DAMN FILTHY 
ASIANS. 88 HAIL HITLER SKINHEADS FOREVER
%
TO THAT PISS ANT COWARD FUCK COS I'M NOT A PATRIOTIC AMERICAN YOU NIGGER 
LOVER I'M A PATRIOT TO WHITE SUPREMACY YOU SMELLY TURD. YEAH AND I'D LIKE TO 
SEE YOU TRY AND KILL ME YOU CANDY ASS FUCK WHAT ARE YOU GONNA DO BEAT ME TO 
DEATH WITH YOUR HANDBAG. I'M A SKINHEAD YOU FOOL I'VE HAD MORE FIGHTS THEN 
YOU'VE HAD HOT DINNERS. STUPID FAG SO SHUT THE FUCK UP OR I'LL PUT YOU TO 
WORK ON MY COTTON FARM
%
FUCK YOU FATSO YEAH YOU CAN TALK SHIT BEHIND YOU COMPUTER YOU FAT NERD. IF I 
EVER SEE YOU IN THE STREET I'M GONNA STAB YOU IN THE FACE WITH MY HITLER 
YOUTH KNIFE YOU STUPID CHEESEBURGER CHEEKS THEN YOU'LL FALL TO THR GROUND 
AND CRY LIKE A LITTLE BITCH STUPID LITTLE RICH VAG YOU DUMBASS SKINHEADS 
COME FROM MANY DIFFERNT BACKGROUNDS RICH, POOR, MIDDLE CLASS ALTHO I 
WOULDN'T ACCEPT A PANSY ASS SKIRT LIKE YOU INTO MY GANG
%
fuck asians I am from flushing queens newyork and I'm pissed the fuck off 
because ugly inferior orientals are taking over my home town of flushing 
putting up prices on houses and speaking there ugly chinese languages. 
orientals ARE not smart that's a fucking myth. orientals will NEVER be 
white. p.s. DROP DEAD INFERIOR ORIENTALS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
%
as far as i can tell, mexico sucks.  i've never been there, but i have 
mexican neighbors.  they suck.  15 of them live in one house.  only one of 
them has a job.  the rest collect welfare.  one of them was even arrested 
for molesting a 12 year old girl.  funny thing is, i took a dump on their 
porch.  i'm pretty sure i saw one of them watching me.  i wiped my ass with 
their news paper and jammed it in the mailbox.  they suck anyways.  which is 
why mexico sucks.
%
congratulations on getting modded up you simpering idiot! maybe with all 
that infamy you can convince a geek surgeon to remove some ribs so you can 
suck on your own nub penis you fucking faggot!!!
%
I pray to the wonderful Lord Jesus Our Saviour and thank Lord God in the 
Highest Heaven for all the beauty and love in the world every time I fuck a 
nun with a glass-covered bone-carved  dildo. Tear that dry and wrinkled 
punani!
%
Objectivism is nothing but selfishness with a philosophical bumper sticker 
stuck on its ass that somehow purports to elevate it to respectability. 
Objectivism will succeed as soon as human nature is purged of empathy, 
sympathy, love for one's family, love for one's community, love for humanity 
itself. In other words, never.The only people who take this shit seriously 
are earnest but naive college students with too much philosophy classes 
under their belt and no real life experience, 40-something assholes behind 
on their alimony payments, and nutjobs who horde guns in the woods and 
consider themselves to be part of the minutement militia, 2 centuries 
hence.Objectivism has as much a tenuous hold on reality as the KKK and 
neonazi skinheads. They deserve our attention as much as the mating habits 
of dung beetles. Oh yeah, I forgot, Ayn Rand is selfish racist classist 
elitist bitch. Am I making an impression on you here, you fruitcakes?Stay in 
the woods and spout your ignorant mumbo-jumbo, the real world doesn't need 
you. we'll take your selfish asocial bullshit seriously when hell freezes 
over.
%
I work at a University IT helpdesk, and after far too many malware problems 
from far too many dumb lusers (and many of them repeat visits), I've adopted 
a new policy.If a student or member of faculty comes in with malware 
problems for the first time, I fix it for them and I give them a Gentoo 
Linux install CD to go away with. If they come back with viruses/spyware a 
second time, I tell the luser to stop bothering me, and that I gave them the 
solution to install last time. Linux is an OS immune to these kinds of 
problems.
%
Anyone think jews are really hot? Especially rabbis! Those greasy curls send 
me wild.Sadly there's no jews in my region of the desert, so camels have to 
do.
%
mexicans are lazy?? umm no we are theopposite of lazy. we are taking 
overthis country and you white americans andblack americans people are not 
doinganything about it.all yall do is say"fuking wetbacks go back to 
homecountry" or "you taking our jobs,, nowwe are unemployed" you know what 
boo hooyou call us stupid or whatever, butatleast we know how to get a 
job.if youask me you americans are the lazy people.
%
Women are too fragile.  The mere suggestion of being able to play a female 
character in Doom 3 is laughable. Well, I guess you could play as a maid or 
cook. At least that would be just about as boring as the current 
storyline.It has been proven in many scientific studies that women are 
inferior to men. This is why women are deservingly payed less for doing the 
same work as a man. The only valuable skills a woman can ever hope to learn 
are cooking and cleaning. Men are too busy with important business dealings 
to worry about cooking and cleaning for themselves.History is littered with 
evidence of this. For instance, Joan of Arc led an army on the battlefield, 
only to be subsequently raped, tortured, and killed. In the Bible (the word 
of God), Eve was tricked into eating the forbidden fruit because she was 
weak-minded. Many men said that a woman could never fly around the world 
alone. Amelia Earhart proved they were right.At least the countries in the 
Middle East have their priorities straight. Their women are not allowed to 
go to school, hold jobs, and in some cases they are not even allowed outside 
without a male escort. That's how it should be here. Women should be treated 
as property of men. In the future, I think there will no longer be printed 
or coined currency. Instead, we will walk the streets with a couple women 
around our arms and trade them for various goods and services.In conclusion, 
go the kitchen and make me a sandwich.
%
fuck all this elexctronic shit. Give me a typewriter, a pushbutton 
telephone, and a bank of teletype machines with yellow paper. Then you could 
make sense of this crap
%
Now, if i were ever to meet one of you people who flames me in real life, 
let's just say thine attitude might change a little. Ive studied tae kwon do 
for 4 years, and studied kung fu as a young child. I am going to take up 
judo soon, and also casually jeet kune do. I lift weights every day, and 
have been in a fight before, and won. That's the thing, that behind the 
internet you can say whatever you like to me, but you know what? Im secure 
in the fact that i am popular in my circle of friends in real life, and dont 
need to be accepted in some faggot forum to boost my self esteem, i am also 
confident that i could kick most of thine asses in real life, so what do i 
care?
%
Ok Im New To This I Posted One Picture Of Me On My Website And Now Im Trying 
To Post Another But All I Do Stay In The Log AndIt Says Uploading Picute May 
Take A Few Seconds Then I Check My Site And Nothing No Posts Or Anything 
Someone Please Help
%
Yes I do like the Muslim Girls also. They get me very JIHARD.
%
One time at camp, well let me just get to the point, It was 3am and I heard 
the cabin door open and all the other boys leave. Then all of a sudden i was 
being anally rampaged by Mr.Sunny, the counselor. He kept pillaging my raw 
anus until it bled. Needless to say, I still have a fear of campfires.
%
You know what's keeping the black man black, in addition to that attitude, 
and that erstwhile PBS miniseries? It's affirmative action, fatty foods, 
cheap alcohol, tasteless jewelry, and Kwanzaa. And of course, the worst 
culprit. Niggers.
%
OK WELL ONE TIME I WAS DRIVING A STOLEN POLICE CAR AND I HAD A SYRINGE 
HANGING OUT OF MY NECK VEIN AND I HAD A FUCKING HOOKAH IN MY LAP AND 3 
DISMEMBERED CORPSES IN THE PASSENGER SEAT AND I WAS BASSING AND I TOTALLY 
RAMPED MY CAR AND BLEW UP THE SPACE SHUTTLE CHALLENGER
%
by the way i can' tsee a word your saying so if you're laughing at your own 
comments in vain mr. wantin to complain about an ego mother fucker, then 
you're really truly laughing at your very own comments in vain of YOU
%
Muslim babes turn me on. Those one's who dress entierly in a black bedsheet 
head to toe. I want to squirt right into the eye-slot.
%
Fact: The word "mizer", traditionally meaning a one who is excessively 
frugal, was originally short for "sodomizer". This is because in the 18th 
century it was routine, and even expected, that the Comptroller of a 
business would punish wastefulness by engaging in mandatory buggery.
%
I like terrorists who use bombs, especially nailbombs. And let me tell you 
why. I was once a victim of a nailbomb attack and a searing white-hot nail 
happened to go right up my japseye, welding itself to flesh. It was so good.
%
The Jerk-Off Walk :  Drop that trau right to your feet.  Thrust your hips 
and beat your meat.  Squelch and splurt go your oily cock.  Leave the house 
for a jerk-off walk.  Strolling the streets while you're slapping your dong. 
 It feels so good it can't be wrong. Here comes your neighbor, eyes askew.  
You saunter on up and ask, What's new?  A hand on your shaft and a hand 
outstretched, your neighbor made a gagging sound and promptly retched. Since 
when is a stroke against the law?  You say as you start to fiddle with her 
bra.  And there you start, right on the sidewalk.  The morning rape's begun, 
other pedestrians gawk. She screams and hollers so you punch her face.  Who 
cares if she dies? She's of the nigger race!  Your cock already stiff begins 
to invade, and you twist nips proper like Marquis de Sade! Pullin out quick, 
and you spurt in her eye.  Standing and you kick, right between the thighs.  
The bitch is all mangled and your cum is all spent.  Your pants, at the 
apartment, your soft cock: bent. Now the task is done and it's time to head 
back.  Your tired wang hangs like a rope so slack.  The nigger curled up in 
a ball so tight, you smile as you think: This shit's done right. I hope you 
enjoyed my anthem true.  Now best of luck and fortune, love, Mega Man II
%
"LOCUSTS INVADE HOLY LAND..." was a deceiving web link.  When I first saw 
it, I thought to myself: "Whoa - Locusts in Vatican City?  I've got to check 
this out!"  Unfortunately the "Holy Land" described in the link described - 
get this - Israel.  Is there nothing those cursed jews won't do to get 
attention?
%
Guys, the funniest thing about linux is that the average linux user spends 
from 50-75% of his (and I use the pronoun literally, because let's face it; 
women just have more common sense) computing time configuring and 
troubleshooting his operating system just to get it to run. Come on you 
dolts. I know you're short a chromosome but does it take a vagina to figure 
out that this is just stupid ? Do yourself a favor, put on a clean shirt, 
get a copy of windows xp, and spend that time at the gym instead of 
compiling your kernel endlessly. You'd be surprised how many women don't 
notice your complete lack of social skills!
%
The Chub Chant: Rub a Dub Chubs Three Plumpers in Tubs - Watch them Squirm 
as they Wash Their Nubs - Delight in the Sight of their Big Juicy Butts - 
And the Sudzy Soap loving Slippery Fat Sluts - Cum Take a Dip in Our Super 
Sized Tub - And Sing with us Rubba Dub Chub.
%
My favorite episode of Family Matters was when Steve locked Laura up as a 
joke. He stood near the vault excited at what he had done. He pressed his 
cheek against the metal, feeling the coolness and the tiny thumps on the 
door as Laura pounded for her life. Laura's screams were deep and guttural. 
Steve felt their vibration against his groin as he pressed against the door. 
Aroused by the power of life and death, he exposed himself and masturbated 
as he listened to Laura's screams. His eyes glazed in ecstasy as he chewed 
on his lower lip and jerked vigorously to his ultimate climax.
%
Hey guys, did you ever consider what would happen if Star Trek perchance 
waged war with Star Wars? Who do you think might win such a conflict and why?
%
why dont you install a real OS and make some room in your head using the 
space you have to devote to remembering the 100000 ways to parse a text file 
in linux (with zero ways to get any actual work done)
%
this ignore list is for losers, boozers, those boring and self-whoring and 
folks unwilling to represent memories of Tupac and keep the dream of the 
Black Planet alive.
%
I have looked at much gay porno and gotten no erections or arousal. I find 
it amusing. Gay culture on a whole I find grand, gays are often snobbish and 
excellent physical specimens which I find very admirable.
%
Apparently everyone is up in arms about this new racist Six Flags Atlanta 
ride, they say it negatively portrays african americans. I guess the name is 
a little bit insensitive. They call it the 'Nigger Experience' and the ride 
is: when you get in the parking lot at the end of the day, you realize that 
niggers have broken into your car and stolen your stereo. I don't know what 
to think.
%
Coon Tune : There exists a people called the Shitskins. They're only fit for 
stuffing cotton into bins. You might say "Hey thats crass!" , but you can 
shove it in your nigger lovin' ass. I do believe that God set it up this 
way, slaves for working,and a partner with which to be gay. Thats right, you 
heard it here first, I love my gay nigger slaves, signed Fred Durst
%
KING GOLDI SIGNS WITH DICKSUCKERS INC and NOW LOOKING TO SIGN ALSO WITH 
FAGGOTS SOUTH!!!!!! PLAYA FLY IS LOOKING TO SIGN WITH SEMENLOVERS!...MEMPHIS 
NYGGAZ BOUT TO COME OUTA THE CLOSET..THIS IS WHAT THE INDUSTRY NEED FROM THE 
SOUTH...REAL FAGGOTS!
%
Gotta Crap Rap: Poo knockin on the door, My rectum can't hold it no more.  I 
firmly clench to keep it inside, but there's no defense for this poopy tide. 
 My tighty whities stained with ass sweat, my quivering asshole hasn't given 
in yet. Holy shit I just felt a spurt, this is a disaster I could not avert.
%
FUCK U!!!!! I WILL FIND U AND KILL U A HUNDRED TIMES SEVEN!!!!! U CAN COUNT 
THE DAYS ON UR HANDS THAT U HAVE TO LIVE BEFORE I SLAY YOU IN THE STREETS 
AND BUTCHER U LIKE A CATTLE!!!!!! NO ONE DARES TO DO DISGRACE ME AS U 
HAVE!!!! WATCH UR BACK, FOR I COME WITH MURDER ON MY BREATH!!!!!!
%
Put on your party hats, its four more years of no legal pot, no stem cells, 
abandoning abortion, tons o' guns, throat choking pollution, Big Brother 
monitoring your every internet move, and best of all -- thousands more of 
your copatriots will die needlessly on foreign soil!
%
I can't believe John Kerry just took a shit in his power suit at the podium. 
What the fuck? He can't walk off and take it to the portalet, because he's 
standing in feces-filled underwear at this very moment. Any change in his 
standing position will send his poo spilling down his legs and into view of 
every voter within 30 feet of him. There is no way he can play this off as a 
fart. It doesn't help at all that he's been on the trail for 3 months. He 
can hardly stand up straight! How is he possibly going to explain this to 
his wife Theresa Heinz-Kerry when she comes back from getting ketchup to ask 
him what the fuck he just did in the presence of his supporters? She'll make 
him drop trau in front of everyone again. There it is. The undecided voter 
standing below the podium to the right of him just asked if anyone could 
smell 'that'. He's gotta go.
%
I've gone and done it again.  After shitting on the toilet seat I took a dab 
of crap and worked it into my hair.  Now my bald spot is a uniform brown 
along with the rest of my hair.  I mussed up my hair enough for it to look 
plausible.  I'm back in the conference room now and no one is willing to 
meet my gaze.  I have to clench my stomach to keep from vomiting.  My penis 
throbs with an intense erection.
%
Sitting at the beach takin' a nap , didnt notice my bowels, now I've taken a 
crap. Sitting in the diarrhea, think I should be sayin' "Mama Mia!" Can't 
take it to the ocean, too fast a motion, poo would spill out in a commotion. 
Too stinky to be a fart, I cant stop my pounding heart. Drugs have spun me 
out for days, I'm in such a haze, can't explain it to my wife , my life is a 
maze. Pooped in front of my kids, its worse than watching shitty itty bitty 
titty vidz. On her command my trau I'll be droppin' , my poo will be a 
floppin'. Beachgoers asking if I could smell "that" , Its just my poop, 
smooshed in between my ass fat. Word.
%
Adolf Hitler, the Fuhrer himself, burst into my room one eve and whisked me 
away on a dream vacation to the Bahamas! We toured the isles together 
arm-in-arm, and made love on the sandy beaches and in the clear, blue ocean. 
I fell in love with Hitler that weekend. Unfortunately when it was over, he 
disappeared, but I know that one day, mein Liebe will return and take me 
away to his castle in the clouds.
%
Dick Cheney has an odd habit. This bastard loves to masturbate using 
Nickolodeon Gak. You know, that slimey stuff. Years ago, when he was a 
congressman from Wyoming, he used to come into my toy store and buy my whole 
stock of Gak once a month. I never asked because hey, hes a congressman. But 
one day I was walking around Casper and I saw Mr. Cheney in his car. He was 
totally naked , and was masturbating. His cock was covered entirely in this 
Gak! He had 2 empties in the passenger seat, and was really working his 
cock. I was sickened, and was about to leave when the future Vice President 
lowered the window and asked me to join him. I couldnt believe he said that. 
I jumped in the car and slurped his Gak-infused cock up ohh yeah
%
guys i am shitting in my pants at this very moment i can feel the turds 
smashing against my white cotton briefs ohh yeah
%
Asimov, I want you to fuck me in the ass please. I am dying to be anally 
accosted. I want to be ravaged like hog. I want you to dress like a farmer 
and make me oink like a pig. I want an ass reaming like no other. Asimov, I 
haven't had this kind of lust for you since the crazy college days. We used 
to butt fuck each other in the stalls. You always told me not to flush and 
preferred using my feces as opposed to real lubricant. ember your chocolatey 
member, your manhood, draped in my feces. Man, Asimov, I remember. I was day 
dreaming, escaping into a nether world where we used to fornicate and live 
in fornicatory bliss. You used to like to keep your tube socks on to enhance 
the gay look. We were so flitty and light on our feet. I am so very confused 
these days. I have difficulty conceptualizing the time that was then in 
contrast to now. I mea were a raging homosexual, now you wont look me in the 
eye because of this anime woman. I know that bitch is a transvestite, and 
you lust after my ass while you are being tentacle raped. You are closeting 
your homosexuality and denying your roots in my ass! Don't be fooled! Asimov 
knows how to suck a dick. He may nibble, and bite, and pretend to be 
sheepish at first, but deep down this cock loving acolyte of shaft licks bar 
maid. I am destabilizing. The world is going dark to me. I have 
scintillating threads of motley thoughts; my ability to control my self 
evanesces away! I have only an adamantine desire to see your balloon knot 
once again, and to have you ravage mine! Asimov - I NEED YOUR HOT MAN SEX 
NOW. This is your long lost butt buddy Joe, please come back.
%
Instead of crapflooding the Slashdot I managed to literally crapflood the 
toilet at my workplace. I sprayed diarrhea all over the bowl, filled it with 
foul smelling semi-liquid and left it unflushed!
%
Gilles de Rais had us all fooled, with his two sided life. On one end, he 
was a fabulously wealthy nobleman. On the other side he broke into my 
farmhouse , grabbed my son around the waist, and carried him off! He took 
him to his chateau for a glorious night of rape, followed by death by 
suffocation on Mr. de Rais' dong. He was nice enough to have an artist 
record the event, and to ejaculate in my mouth as my son died ohh yeah
%
Willem Dafoe gave a fabulous performance with his real-life portrayal of a 
monstrous child molester as he smashed through my son's window, grabbed him 
around the neck, and raped him viciously. He was gracious enough to use 
lubrication, and to jerk my sons little cock back and forth ohh yeah.
%
Hitler, Hitler, our glorious fuhrer. With all his jew gassing, he'll make 
the race purer!
%
Chaps Rap : Wearing Assless Chaps, its really easy to take craps. Showing 
off your erect cock, such a shock, every hour is jerk-off-o'clock. Your buns 
in my face, I have to taste, otherwise what a waste. Jerked you off so you 
could tuck away, its not Gay, Balls didnt touch anyway.
%
BongToke BongToke Two Four Six,  Mari Juana Stiff long Dicks  My chin is 
bruised from Pounding Scrote  Chuggin cum made tummy Bloat  Smokin Weed 4 
Peace an Warez  As long as theres Buttsex I've no Cares
%
Cock Jam : Jerk That Shit Holmes, Jerk it Up. Jerk it like the world is 
endin', Jerk it till your mind is bendin'. Crunchy and Mushy, catbox. 
Jerkin' fat cocks. Pearl of the Orient, gotta represent. Pants in a tent, 
I've jerked it ; now I'm spent.
%
Fact: The product Miracle Whip is named after a mythical whip used to beat 
slaves in the south that would turn them into highly efficient and 
intelligent workers.
%
to late dip shit, I hope your not as stupid as you seem, giving me your name 
and email to give to my buddies down at the hate crime lab.
%
Isn't it great to spend night after night online in the company of your best 
friends?  Nothing like shooting the shit with your pals after a long day of 
watching Star Trek VHS tapes.   After the long walk upstairs, it feels so 
good to sit down in the Archthrone of your Painkeep, rip open a new Pringles 
can and start sipping a freshly concocted Mountain Dew-Quik shake you call 
the "Polyjuice Potion" in honor of Harry Potter. (uNF Ginny!!) You call it 
that because after you drink it, you transform into something completely 
different.  Your deep cyst acne clears up, you forget about your obesity, 
and you can chat about anime with people who genuinely care about you. After 
a few hours, the chat slows down and you wander over to some Russian child 
porn sites you subscribe to.  Here's hoping the feds don't track your 
Citibank card! Hehe.  A good long session of stroking your four inch penis 
finally results in a few drops of clear semen on your flabby fist, which you 
wipe all over your lips and chin, inhaling deeply. Finally feeling a bit 
drowsy, you click off your monitor and crack open your Gentoo laptop so you 
can finish explaining why Babylon 5 shouldn't have been cancelled while in 
bed.  You fall heavily onto your greasy mattress which has a stained pillow 
and a discolored blanket half draped on it.   You sleepily type in a few 
lines of chat while popping some throbbing zits on your cheek, making more 
pin point stains on your pillow. Just as you see some orange glow around the 
edge of your sheet draped window you decide to catch some sleep. You hate 
this time of night (day?)  Now your loneliness hits you like a wall.  Almost 
every real friend you've ever made has forgotten about you or is disgusted 
by you.  Why do you act like that?  Why do you LOOK like that?  You 
represent everything they don't want to be.  Why couldn't you just stay on a 
diet?  Why carve up every last pimple until yet another bloody crater has 
been dug out of your cheek? Go to sleep...go to sleep, you plead to 
yourself.  Tomorrow is Season 4 of Voyager... Seven of Nine.  You like to 
imagine that you're on that spaceship, part of something, part of a group.   
But you never will be.  Tears mingle with pus stains on your pillow as you 
squeeze your eyes shut trying to push the terrible reality of your singular 
aloneness.  If only you had done better in school, if only you could find a 
job... and you remember Mom wants you to mow the lawn tomorrow morning.  
Goddamn it, you're turning 30 this November and you're still doing this 
shit. Your life is a prison and there's no chance for parole. Seven of 
Nine...
%
I right clicked the clone brush over the head of the penis but when I click 
on the anus it puts a ballsack in there, wtf!!
%
I've gone and done it again. It always happens when I need to keep my cool. 
During the seventh-inning stretch at the baseball game, I went into the 
urinal area and pissed right into my mouth. God, it tastes so bad. I think I 
got the front of my shirt all wet. I just hope we can come back from 3 runs 
behind. Allright, I need to get back into the stands, now that I'm refreshed.
%
we can argue this all fucking day, and in the end it didn;t matter any more 
than it did when you guys started
%
I cant go a day without punching myself. It is the only thing I get pleasure 
from, so I end up with bruises and I cry myself to sleep because the only 
thing I enjoy is painful. I tried to kill myself once, but then I stopped 
because my mom threw a beer bottle at me.
%
I have been worst than offended by faggots who've sought homosexuality from 
me. I have never beaten a homo, but there was a time when a faggot, a 
brotha! and this subhuman cat approached me in a GreyHound bus terminal 
asking me could he give me some head!!! I would have murdered this beast but 
I wasn't tryna go to prison outta state where I couldn't get no bail.
%
randomd's songs: Niggers Niggers, our dark skinned friends.  If they're not 
out working, they'll rape your girlfriend!  For jail's their domain, they're 
society's bane-- Let's hear it for our friend the Nigger! Linux, linux, it's 
free as in beer.  But if you installed it, you're a goddamn queer!  To clear 
up your pimples, the solutions quite simple-- Just take a bath and use a 
face wash! Jews, jews, their noses are long.  They've got to clean the extra 
skin on their dong!  They'll steal all your money, the kabelah's funny-- 
Let's go for the final solution!
%
I have something resembling lava temperature pumpkin pie filling spilling 
from my cock and my right nut has swollen to at least 3 times the size of 
the other. I have a large, angry lump in my armpit that I swear makes noise, 
my cat shit in my bed, my sister is fucking all my friends, and someone 
keeps leaving little Cornish game hens stuffed with used condoms on my 
doorstep.
%
I'm a 4'2", balding, port-a-let cleaner with dirty fingernails that lives 
with his step-mother. My dad died in an controversial felching accident when 
I was 5. Now they call me turd-gerbil. Instead of an asshole, I now have a 
nice cluster of hemorrhoidal "grapes" gently tucked between my butt cheeks 
and for some reason, they smell like clams. My last bowel movement was 9 
days ago. They hurt so bad that every time I try to shit, I cry. Speaking of 
shit, a hooker shit diarrhea in my eyes four months ago... I still can't see.
%
ONEZ ZEROZ BINARY DIGITZ HACKIN CRACKIN STAYIN UP ALL NIGHT BUFFER OVERPHLOW 
U GOT OWNED L33T5P34K IPARTYZ CONFIN PHREAKIN ----++++THEMENTOR++++---- BBS 
LANPARTY WIN NUKE OOB EXPLOITZ MATIX HEAP OVERFLOW HEX-O-DECIMALZ NO CARRIER 
FLIP THE BITS NULL ROUTE COMPILIN TWENTY FO HUNNERD BEE PEE ESS HAYEZ MODEM 
PEEK N POKE SHELLCODE COFFEE N BAWLS COCKTAILZ OCTAL SYN ACK PACKETZ LEAVE 
B4 U R EXPUNGED
%
When I was a little jew, my Ima told me that if you swallow matza it stays 
in your colon for forty years. After I was interred I told a Nazi and he 
laughed until he gassed me unconscious and then bulldozed my corpse 
viciously into a shallow hole!
%
YOU CAll me fagit? IN COLORS? HAVE YOU no SHAME? I will break your glasses, 
you nerd. I fucked Dor GITTELAMN, watch your ass, MODER FUCKER.
%
Hey, I totally agree that she was stupid, but could you please not use the 
word "retarded" in this context? I know I sound like the PC police, but 
that's not my intention - it's just a word that really offends me.
%
Never, never, never, never forget what subhuman Muslim Islamic pigshit 
terrorist filth did to the US on 9-11-01. To put the destruction into proper 
scale, this GroundZero photo essay helps. I've been advocating "camps for 
enemy combatants" since last September 12th, and I still think it's way past 
time to round-up Middle east suspects and intern them in the desert. The 
Muslims and Arabs, who are proven terrorists, should be tried by military 
tribunals and executed quickly. Radical Islam is an insane murder cult, and 
"moderate" Islam is its Trojan Horse in America. Islam is a gutter religion, 
full of deviant faggot girly-men, and women haters, and intolerant zealot 
scumbags, who aren't fit to join the modern world. Kill all Islamic, Muslim 
and Arab terrorist filth in the madrassas and in the US cities where they 
hide.
%
When at last our orgasms had subsided, she suddenly leaned forward across me 
and hugged me tight, whispering in my ear, "I don't believe it! I can't 
believe I just took a shit in your mouth and watched you swallow it. That 
has got to be the wildest, hottest thing I've ever done or seen. And I've 
got to say that I loved doing it and watching it. I must have gone crazy at 
some point, but I did love it." She hugged me tighter, and I squeezed her 
back as I felt the pieces of shit she had dropped on my chest earlier 
mashing between our trembling, hot and sweaty bodies. She felt it then, too, 
and realized that it was smearing both of us as she crushed the turds 
against me. At that moment, though, she didn't care.
%
No idea why people still code in C++ and Java. Get with the times! 
Macromedia Flash is gaining ground very quickly, and will soon overtake the 
aging "popular" programming languages. Those who have already tuned in to 
the wave of the future are using flash to program everything from command 
line utils to MMORPGs. You crusty unix programmers need to stop clinging to 
your old ways and modernize!
%
low level format your hdd at once before you lose data
%
Niggers are not just African-Americans. Some niggers are Caribbean-American 
niggers. And there's plenty of niggers outside of the USA too, like in 
Africa. Trust me, I'm an expert. I am seething with hatred for those cursed 
apes.
%
"The Swastika" is the oldest cross and emblem in the world. It forms a 
combination of four "L's" standing for Luck, Light, Love and Life. It has 
been found in ancient Rome, excavations in Grecian cities, on Buddhist 
idols, on Chinese coins dated 315 B.C., and our own Southwest Indians use it 
as an amulet.
%
I GOT SOMETHING FOR ALL U DAMN MOMS. IT SOMEWHAT RESEMBLES THE PECAN LOGS 
YOU GET AT CHRISTMAS. THATS RIGHT ITS A BIG BLACK PECKER!
%
Any stupid fucking jobless fish eating rice farming waps think tou can fuck 
with a real person come get it you stinking fucking retarded ass mother 
fuckers. If you want to go back to where you came from i'll open up the ass 
cheeks of the world and buy you a fucking fishing trip back to your 
birthplace of infection.
%
I've done it again.  It always happens when I need to keep my cool.  During 
the coffee break half way through my big sales pitch I went into the 
bathroom and carved "nigger" into my chest again. God, it stings so badly. I 
think the blood is seeping through the paper towels.  I just hope my suit 
jacket covers me enough.  All right, I need to get back into the real estate 
mindset again.
%
I felt a glorious climax approaching. "Jesus we need more balloons," I 
grunted as I shot my load all over the assembled crowd. "More mother-fucking 
balloons!" As my acidic semen splashed onto them, I watched as everyone 
screamed and writhed on the floor in agony, their skin melting away. Oh, 
they would pay for taking my balloons. They would pay dearly. I wiped a tear 
from my eye and whispered "more balloons" as I started to fondle my balls 
again. This will be a long night.
%
Niggerbabble is the unintelligible babbling that comes out of a nigger's 
mouth. Niggers often issue forth these babblings while grabbing their 
crotches, in a desperate attempt to keep their sexual organs from falling 
off due to the effects of the many niggerborne communicable diseases they're 
infested with.
%
I just saw a preview for "Renovate MY HOUSE!", and some uppity female negro 
saw her new house for the first time and was shouting "THANK YOU JESUS!!!". 
The only way I would say "THANK YOU JESUS" is if he got rid of all the 
people of a certain race if you catch my drift. :D
%
girl did you install back orifice 2000 on me because you just caused my cd 
tray to eject
%
Listen, dont make me stick my finger in your dirtbox. I'll fill your gaping 
manhole with slimy man seed and pump some hot cock snot into your fart box.
%
When I was little a friend told me that if you swallow chewing gum it stays 
in your stomach for 7 years. After I was married I told my husband and he 
laughed until he choked me unconscious and then raped me viciously in every 
hole!
%
Hey, faggot! Those assless leather chaps are pissing me off. How can you 
possibly walk around in public without anything covering your erect cock, 
and clean shaven balls. I cant believe anyone does this for real! You should 
find some sort of underwear before I come over and put my hands on your 
genitalia, to provide some modesty! I will happily stroke your penis so it 
can be tucked away inside the chaps if you insist, but I'd rather you just 
put on some boxers. Yes, I know I have pink pants on, and a rainbow shirt. 
Im still waiting. Get those chaps covered up, and get your hot, tight buns 
out of my face before I go crazy.
%
shut the fuck up you obviously have no idea w-t-f you are talking about why 
dont you give up and go back to playing yu-gi-on on your little borther's 
GAYCUBE because you are obviuoulsy too stupid to comprehend a real game like 
final fantasy 8 (argubly the best game of the series)
%
Guys, does anyone ever have that thing happen, where you've just defecated, 
and are wiping yourself, and the toilet paper seems to kind of... snag, and 
then you realize it's sucking into your rectum and the next thing you know 
the cardboard tube from the toilet paper is just spinning on the holder and 
you've inadvertantly sucked an entire roll of quilted two-ply into your anus?
%
Human perception is subjective. The human mind is a higly subjective thing, 
subject to an endless parade of subjective factors, a democratic "neuron 
voting" process, nutritional and hormonal factors, and so forth. Therefore, 
any philosophy created by humans is necessarily subjective, and so I find 
your so called "objectivism" laughable to a degree, which, while subjective, 
is still quite high. Enjoy the rape fantasies kids
%
Do not try to sexually assault the 13 year old girl. That's impossible. 
Instead only try to realize the truth. There is no 13 year old girl. Then 
you'll see that it is not the 13 year old girl you are sexually assaulting, 
it is only yourself.
%
girl you must be a drow elf sorceress because you have cast level 3 ensnare 
on my heart
%
You know, I know that this sheep shit doesn't exist. I know when I put it in 
my mouth, the Matrix is telling my brain that it is juicy and delicious. 
After nine years, do you know what I've realized? Ignorance is bliss. But 
the funny part is, I'm not even in the matrix! It was reality!! I REALLY ATE 
SHEEP SHIT!!
%
Anime? Could you be any more of a fucking useless nerd? Seriously. I know 
people like that who go to my high school, they wish their whole goddamned 
lives were anime. Probably because their parents got divorced and TOTALLY 
DON'T CARE when they come home and announce that they're gay or something.
%
201 Come back in like 10 years or something, maybe science will have 
developed a pill that'll make you happy and pretend that you have giant blue 
eyes and purple hair. Until then just keep cutting yourself and writing 
shitty poetry.
%
Does anyone remember that commercial on TV where the kids would drink Yoohoo 
or some other beverage out of one of those juice boxes with the red and 
white striped straw? They would get sucked into the box and have on giant 
party. I always thought that if I sucked hard enough I would get to go there 
and party.
%
gays don't belong here you fucking faggot with rippling muscles and clean 
shaven smooth skin. you need to just take your lisping moustached mouth out 
of here before the urge gets to be too much and you start fucking people in 
the ass because you're a gay fag who fucks guys in the ass and sucks dick. 
now put on your thong and leather pants and get out.
%
Miatas can't handle as well as other cars or SUVs because they don't have 
all the weight to let the tires grip right.
%
I'm sort of new to this linux thing, but there's this directory on my new 
install of Debian 3.1 called "/usr/bin". It was all messed up when I first 
went in there. None of the files had descriptive names, and it took me like 
an hour to figure out they were executables, since none of them had .exe on 
the end of them. Furthermore, whenever I double click them, they just pop up 
a command prompt for a few seconds then go away. I was gonna delete them, 
but I got kinda afraid that they might be my kernel, so I fiugred I'd ask. 
It's ok to delete this stuff, right?
%
You would make a perfect Liberal � homosexual, self-absorbed, hates America, 
anxious to impose your values on everybody else.
%
What do you call a gay jew? � A sodo-miser!
%
Bill O'Reilly is a very important news personality, one of the only 
prominent news anchors who puts politics aside in favor of reporting pure 
facts. Democracy needs a whole lot more Bill O'Reillys to weed the 
propaganda out of the popular media.
%
So, /. must be the Berekely if the internet. I don't mean in terms of actual 
politics, I mean in terms of the mindset that assumes everyone thinks like 
us, or would if they were intelligent. Ogg people are sort of like 
Trotskyites, when you think about it. An infinitesimal minority that tends 
to disrupt the conversations of others with their irrelevant diatribes.
%
I will freak you like an animal, putting my sting in you sideways. I will 
hit you up doggy-style until the sun comes up. I will whisper in your ear 
that you are the most precious, sexiest gift of God that has ever existed in 
all of creation. And I will do it in sheets made of the most exotic European 
satin.
%
Learning about lunix is not about compiling everything from scratch. linux 
is all in the configuration, not the bootstrapping and compilation. Debian's 
package management tools pull down precompiled binaries, automatically, with 
dependencies, PLUS, with a kernel-recompile and a bit of knowledge with 
menuconfig, you can "optimize" the kernel (which is all that really matters) 
to what hardware you have. Gentoo's motto: "life is too short to be spent 
rebooting all day, but long enough to emerge openoffice (mozilla, kde, 
gnome, any of the big suites.) Debian lets me install the packages, and get 
on with configuring them. You're not going to learn any more about linux by 
watching "gcc -lncurses -o main main.c -DOMGWTF" scroll by for hours.
%
From my experiences on irc, the only reason i can see for using any non 
windows OS (linusex, freebsd, sun, barbieOS, macOS) is so that you can 
appear k-rad to your irc peers.
%
Hi, my name is Gareth. I'm from Brisbane, Australia. I'm into emo and zines. 
I actually used to do sexual stuff with my father. It was kinda weird when 
it first happened, but it's cool now. We jerk each other off and sometimes I 
rub his load into my nipples. It's pretty cool. I like to taste it. It's 
salty. Sometimes I mix our semen together. It's like a party for our sperm. 
They get some "social time." For a little while we used to play with each 
others faeces. It was gross for a little bit, but once you get over the 
whole "it stinks" part, it's awesome. It's like playing with DIY play dough. 
That's pretty punk. I would love to play with your faeces. Some would think 
faeces is faeces but hot chick faeces is alot better. Yours would be THE 
SHIT. LOL. GET IT?
%
i remember once my dad sleeping on the couch and something was sticking out 
of his pants, i thought it was a knife, so i went up to him and i touched it 
and tried to pull the knife off his body and he woke up with me holding his 
penis
%
The lowest requirements for Doom 3 are a Pentium 4 1.6 Ghz, and as we all 
know the fastest pentiumIII is faster than the slowest pentium 4, so I think 
I'm fine. If not, I'll just wait for the Linux binary to come out so that I 
can run it on my ultra fast compiled-from-scratch Gentoo box. No M$ slow 
downs for me!
%
Listen: Freebsd is for amateur tinkerers and college kids. Only some old 
fart who started working in the 90s would still use BSD for anything 
important. The last time FreeBSD was ahead of linux in anything was what? 
1996? maybe 1998? Name anything freebsd actually does better than linux? 
There is never anything specific backed up by facts. It's always just some 
"well it's like more robust or something..." crap which means nothing and is 
not even true. BSD is running on fumes of hype right now, once people wake 
up and realize it sucks it will be all done.
%
excuse but this person promised me he would send me shemale snuff porn if i 
was to send him some of mine, he lied. i sent him massive amounts of 
tranzgender fucking sucking,blowing and jizzing and he still hasnt returned 
the favor.please to not trade porn with this man on internet relay chat
%
It's a good thing we have conscientious websites like slashdot.org to report 
this kind of stuff, it was completely ignored by the mainstream press.
%
I live with my best friend of many years. He and I eat dinner together, 
watch TV together, and drink together. While we were in the living room 
watching TV, he asked me if I wanted to masturbate with him. I hesitantly 
said okay. I let him get started first and finally got the courage to do the 
same. I was amazed at how much I watched his penis barely looking at the 
women in the video. I saw him glance at me several times as well We 
currently masturbate together about 3 nights a week. After the first month, 
I told him I wanted to do what I like to but didn't want to freak him out. 
He said okay, and after I ejaculated on my stomach, I scooped it up and ate 
it. I've always done this. Just last week he shocked me by ejaculating in 
his hand and asking me if I wanted it. I licked it out of his hand and that 
was it. Can I be doing this and not be gay?
%
i will make a point to you people that the youth cant buy doom 3 as it has a 
thing called an age rating, and if you dont want your children to play this 
game thats fine by me.You shouldnt go around trying to get things banned 
that us p.c gaming nuts will play and enjoy. Do something constructive like 
donate money too the poor or help old ladies across the street than sitting 
in front of a computer trying to get a video game banned.
%
Hey shithead. If I find any of your posts modded down I'll metamod in 
agreement with the moderator. You are a piece of shit asshole who deserves 
to be modded down.
%
Sometimes I'm convinced the only reason ipod users are so devoted/obsessed 
is the fact that Apple treats its customers like shit. You know, the whole 
abusive spouse paradigm
%
You present a real and true perspective. A perspective of one who spends all 
his time surfing conspiracy websites and schizophrenic web forum postings, 
disregarding anything that conflicts with a predetermined conspiracist 
conclusion.
%
You're just a common or garden onanist. You open with a question, but then 
gab on and on and on and on about yourself. You are a virgin who calls his 
mother every night and then sobs quietely into his imported Japanese brandy 
while masturbating impotently to a DVD freeze frame of Janeway with her hair 
a little mussed. You will never know the touch of a woman, and never have 
any friends outside of your widescreen 19" DVI LCD. When you die, your 
arteries choked with Cheetos fat at age 32, your last thoughts will be of 
blessed relief, and nobody will mourn your passing.
%
My cock stayed hard after coming from his fist slamming my prostrate with 
each punch, the onslaught continued. He slide his fist back in elbow deep 
and with the other hand untied my restraints. "Now turn over on your back 
with my fist in your ass and then raise your legs high above your head so 
your cunts fully exposed" I flipped over feeling that massive arm rotating 
in my ass, almost making me cream again. I held my ass up high for him as he 
held my leg with the other arm and the fisting started again. I looked down 
to watch deep long fisting stokes, my asshole complaining with gurgling and 
sucking sounds as he pummeled my asshole.. My balls were tied of tight as I 
began to jack my cock "Go deep, really ruin it master!" He pulled out, wiped 
his hands clean and untied my balls. "Hit the showers, slutboy! Your asshole 
is totally wasted" I could feel huge lips flapping between my cheeks, afraid 
to see what he has done, I know I never shit right for a awhile.
%
your thighs sweat from the cheap velvet of your walmart shorts, the 
cellulite sticks out like a sore thumb. you sit in front of your webcam with 
the dorito crumbs on your chest still left over from last weeks smorgasbord
%
Do they teach english in Palestine? You stinky fucking sand nigger. That's 
right, I am to the Arabs as Hitler was to the Jews. My job is to exterminate 
every last one of your race, starting with YOU, you disgusting wretch of an 
Arab dog. You'll lick my boot right before you dig your own ditch, and then 
I'll shoot you in the back of the head. You're naked, stomach swollen, 
hungry, exhausted. You're my dog. If you're lucky, I won't feed your remains 
to the pigs. Nothing can save you from your fate, the fate of all the Arabic 
peoples: to be wiped off the face of the earth like the plague you are. You 
can try to ignore me, but let's see if you can ignore a pistol being waved 
in your face. You have no hope. You're stuck somewhere in the Middle East, 
sucking donkey cock all day because your dirty Arab hide has no other way to 
get nourishment. I'm in the wealthy west, sipping champagne and laughing 
myself to tears as I watch your race get massacred on my 40" hdtv. I'll take 
a dip in the cool waters of my olympic sized pool as your corpse rots in the 
hot equatorial sun.
%
Touching, long handshakes, grasped buttocks, even walking hand in pocket by 
two males is common place in the Arab world. A considerable number of Arabs 
touch more between the same sex, to show liking--not sex. They hold hands at 
urinals, hug each other, kiss if close friends, sometimes with tongue. This 
is a pivotal part of Arab society that few westerners understand!
%
GOD DAMN SKATEBOARDERS ARE GAY...YOU LITTLE FISHY CUNTS SOUND LIKE A BUNCH 
OF WOMEN ARGUING OVER SHOES. GOOD JOB LADIES...HOW ABOUT THIS...TAKE EACH 
OTHERS COCKS OUT OF YOUR MOUTHS AND GET OVER IT. THE WHOLE WORLD IS MONEY 
DRIVEN AND RUN, AND ALWAYS WILL BE. ILL BET MOST OF YOU ARE 15 AND HAVE NO 
CONCEPT OF HOW EVERYTHING REALLY IS. ITS SO EASY TO SAY ALL THE STUPID SHIT 
YOU ARE SAYING WHEN YOU DONT HAVE HUMAN BEINGS DEPENDING OON YOU TO SURVIVE 
(ie: children). OH...AND REMEMBER...FUCK ISLAM AND ANYONE OF MIDDLE EASTERN 
NATIONALITY....ROUND THEM UP, PUT THEM IN CAMPS AND LET THEM SIT THERE UNTIL 
THINGS ARE SOLVED, OR UNTIL WE DECIDE TO EXTERMINATE EACH AND EVERYONE OF 
THEM IN THE USA
%
It has been brought to my attention from a fellow of mine that he fingers 
his asshole while he jerks off. We were talking about Ninja Turtles the 
other day and he was like have you ever given yourself a Donatello? And I 
had no idea what that meant so I asked and he said it was when you stick 
your finger(s) in your asshole while you jerk off. So to that I say no and 
ask him if he has ever given himself a Donatello, and he gives  me some kind 
of faggish grin. So I call him a fag. He says it helps him get it up faster 
and cum faster. I still dont quite understand, why in the hell would you 
want stick your fingers in your asshole. Is there something up there 
special? The farthest I would ever go is wiping my ass. I just can't 
imagine, I mean I've licked an asshole by mistake once, but voluntarily 
sticking your fingers or objects in your ass while you jerk off just strikes 
me as vile.
%
You see, Bob Barker was in New Jersey with a 42 year old woman. At any rate, 
Bob and this Jersey broad, told the Jersey broad's teenaged kids to throw 
pennies at hasidic jews. A cop saw it, and bid on door number one. Bob 
Barker had him castrated... he now goes by the moniker "High Pitched Eric." 
The rest is history.
%
Ah yes, the Nazi's come to play. Wonderful, the only thing more ignorant 
than a homophobe is a racist. Well god help you my brother, because if your 
Hitler youth ass ever steps foot in GA, I will find you myself.
%
I have problem with my sister husband. He started about a while back to 
bring his friend over when he visit to start acting funny with me. Because 
he is my sister husband I felt I could not refuse it and now it has turn to 
sexual acts of an improper nature. Although intercourse had never occurred 
he has shot his sperm on my face, placed objects in my anus and made to 
drink his urine. How do I stop before things go farther. Thanks.
%
Guess what, asshole? I was one of the earliest hackers in the 1980s. I KNEW 
Kevin Mitnick. Phone Phreaking is as secondary to me as skullfucking your 
daughter. I'm going to keep calling your house, OVER AND OVER, and the phone 
company will NEVER be able to trace the call. You're going down.
%
I have survived fights by always expecting at least one more attacker than 
what you see and [I] always expect weapons. The time that I was seriously 
cut? I was caught by surprise with a guy drawing a hidden straight razor. 
That was in my early days. I have been fortunate enough to survive attacks 
with my attackers presenting guns and knives. Usually two or more attackers. 
I have also come out of fights relatively unscathed where I faced 
approximately twenty gang members, several times, different occasions. 
Mostly knives, chains, and pipes there. ...My first fight with a gang? I was 
in high school ...I was determined that no one was going to get my buddy 
from behind. The gang guys all started taking off their belts and rolling 
them up on their fists. We walked out of that fight at the end of that fight 
and he had no more trouble from that gang as long as he lived there ...It 
was a stand up fight. I think I wouldn't let myself go down because I didn't 
want to let my buddy down. ...We showed up at the agreed upon time and place 
and there were about 20 of the Chinese gang members who were there to make 
sure there was a "fair fight." Sure, that was why there were 20 of them 
against the three of us and they used pipes and knives. 'Course we used 
nunchucks, three sectional staff, and chain whip. That ended the fight real 
quick.
%
you must be real smarte to be albe to make a space robot, my parents have a 
dvd player thing, can you turn that into a robot, it has a lasre in it
%
Since I was a kid I always thought of Adolf Hitler as a great leader. When I 
took a Holocaust class in school and the teacher preached about what a 
scumbag he was and how much Germany fucked up I told her to go fuck herself 
and I walked out a dropped the course. Everytime I see her I give a Sieg 
Hiel and the salute. I wish Germany won World War II and the U.S. lost 
miserably. The world would be such a greater, cooler place.
%
Picking your nose and eating it is one of the best ways to stay healthy, 
according to a top Austrian doctor. Innsbruck-based lung specialist Prof Dr 
Friedrich Bischinger said people who pick their noses with their fingers 
were healthy, happier and probably better in tune with their bodies. He says 
society should adopt a new approach to nose-picking and encourage children 
to take it up. Dr Bischinger said: "With the finger you can get to places 
you just can't reach with a handkerchief, keeping your nose far cleaner. 
"And eating the dry remains of what you pull out is a great way of 
strengthening the body's immune system.
%
U CANT FOOL ME WITH YOUR HACKED PROXY OMG DDOS DRONE NET PAQUETS REVERSE 
TRACE HAXORS SUB7 PAQUETS PAQUETS PAQUETS NMAP MOUNTAIN DEW HUGE ASS UNIX 
FREEBSD SLASHDOT OPEN SARCE DATA RAPE FIREWALLZ PAQUETZ XPLOIT VIRII DDOS 
SCO LUNIX PARENTZ BASEMENT
%
What do we see? We see the figure of a muscular man laying back on some kind 
of rocky outcrop, resting on a piece of animal skin. His left arms is tucked 
behind his head, while the other drops to the side of the rock. His muscular 
torso is well defined while his legs are raised up and seperated so that 
both of his inner thighs are shown. It is clearly evident what part of the 
male anatomy is being emphasized here as one's eyes cannot help but focus 
upon the area between the thighs and alight upon the man's genitalia.
%
The girl can probably never be said to truly enjoy the experience if she is 
fearful for her life or suffering the trauma's of the victimization but it 
still seems funny to be that if she is going to be raped anyhow than she 
should at least get a good fuck out of it.
%
She smiled as she felt her finger become drenched in her mother's hot cunt 
juice. She was surprised. She reached into her bathrobe and pulled out 
Karen's panties. If her mother had not been snoring so loudly, Karen would 
have worried that she was in an alcohol induced coma. Karen pissed for a 
long time, completely drenching her mother and the bed in warm piss.
%
My Band, although composed of 2 flute players, and almost soothing at times, 
is comparable to the sound of Kenny G, but our music holds messages of hate, 
genocide, and anal sex. We played the title track off our album, "Hitler was 
the World's True Leader", which talks about killing Jews and acheiving Nazi 
ideological clarity.
%
No more group sex in the Jacuzzi, got it? You all kept me up until 4am, and 
all the chlorine in the world wouldn't get rid of the shit that I found 
swimming in this thing 20 minutes ago.
%
SCIENCE TRIVIA: Did you know that the more members an instrumental rock band 
has, the worse they are? Studies have shown that the optimal number is zero
%
Trolls are utterly impervious to criticism (constructive or otherwise). You 
cannot negotiate with them; you cannot cause them to feel shame or 
compassion; you cannot reason with them. They cannot be made to feel 
remorse. For some reason, trolls do not feel they are bound by the rules of 
courtesy or social responsibility.
%
I didn't get laid. She said she was "bi but doesn't date guys", so we're 
just friends. God I'm such a fucking loser.
%
So assuming that I know how to write cronjobs, bash scripts that change the 
color of my prompt, and DOS batch scripts, which language should I try 
learning first?
%
Who is John Edwards? A Disingenuous, Unaccomplished Liberal and Friend to 
Personal Injury Trial Lawyers
%
EvenFate's members form so clearly the pool of their music: the ripples of 
each individual's craving for creation and the ripples of music that has 
influenced them. Stark, bold, complex, and moving, Even Fate intends the 
listener to let the waves inspire them, so the waves bounce back, and 
inspire Even Fate
%
you guys got no life and you have shitty computers cause you can only run 
old warez
%
An Apple computer user has at least three of the following features:he is 
gay; he thinks he's straight, but yearns to get out the closet; loves the 
smooth curves of plastic; has more money than brains; always ends up 
"accidently" in a gay bar to "use the payphone"; has at least once 
fantasized about blowing Wozniak in a shower; likes running through a field 
of daisies; has an IKEA card; has worked as a "graphic designer" for at 
least two years
%
Okay faggots, listen up. Mandatory drug tests today. Only this time, instead 
of pissing in a cup, you'll be pissing on each other's faces. Sure hope you 
like asparagus.
%
Not only would I kick your ass if you came and said this shit to my face, I 
would shove your head so far up your ass, you would smell the mousse in your 
hair. I would also make sure I bend your your ribs sequentially and throw 
water on your face the whole time to make sure you remained conscious 
throughout the entire ordeal. Then I'd call 911 and turn myself in to the 
cops, make bail and go home. You'd be in pain for a long time. I'd be home, 
in bed. Self defense.
%
I just heard sad news on talk radio - Laughingstock/operating system *BSD 
was found dead in its Walnut Creek server this morning. I'm sure we all 
won't miss it - even if you likely didn't use it, you've probably been 
served a webpage by it. Truly an icon of uselessness.
%
If the choice of a sexual partner were protected by the Constitution, 
prostitution, adultery, necrophilia, bestiality, possession of child 
pornography, and even incest and pedophilia also would be. All of these acts 
should be legal as long as no one is coerced. They are illegal only because 
of prejudice and narrowmindedness. Some rules might be called for when these 
acts directly affect other people's interests. For incest, contraception 
could be mandatory to avoid risk of inbreeding. For prostitution, a license 
should be required to ensure prostitutes get regular medical check-ups, and 
they should have training and support in insisting on use of condoms. This 
will be an advance in public health, compared with the situation today. For 
necrophilia, it might be necessary to ask the next of kin for permission if 
the decedent's will did not authorize it. Necrophilia would be my second 
choice for what should be done with my corpse, the first being scientific or 
medical use. Once my dead body is no longer of any use to me, it may as well 
be of some use to someone.
%
Like any red-blooded, masculine man of the male gender, I love PVC weaponry. 
You should too. If the concept of heading on down to the local Home Depot 
and transforming $100 worth of random pipe bits into a killing machine 
doesn�t appeal to you, you�re a goddamn pansy. Also, you�re probably sane 
and will live significantly longer than I will. Nonetheless you disgust me, 
and I take comfort in the knowledge that your obituary will be nowhere near 
as humorous as mine.
%
this is how you hit on a woman, you punch her in the guts so nobody sees the 
damage. then you grab her stupid girly head and make her suck your cock and 
if she doesn't swallow and say mmm mmmm hallo i love 2 suck ur big cock 
please give it to me baby" then you need to rape her in the butt ok don't 
let these little sluts get away with showing their tummies and bra straps 
you know they want to be fucked so just fuck them
%
niggers must really throw some nasty shit out. because you know damn well 
they'd treasure most of what white people throw out.
%
I hope you have an ulcer and vomit your guts all over the ground, and then 
I'll do a saucy jig on your entrails while you lay face down bleeding out 
your nose, mouth and ass.  then when you are almost dead I'll jerk my cock 
hard and start throat fucking you your stomach juices will make for a spicy 
lubricant. your last earthly sensation will be of hot jizz squirting down 
your throat, and your death rattle will be more of a death gurgle as you 
belch out your last breath in the form of a cum bubble
%
Cassini Probe touched Saturn's junk liberally. It strapped its camera into 
Saturn's rings and wouldn't keep its offensive snapshots off it. It was 
performing many red-filter image captures. Saturn couldnt believe what the 
fuck was going on. Saturn told the Cassini probe that the solar system would 
not approve of a human-manufactured orbital device taking pictures of a 
gas-giant for free.  It doesnt help at all that the probe has been enroute 
for seven years. I hardly had time to prepare and hide the massive alien 
population living on me. How am I possibly going to explain that to the 
scientists who analyze the images in detail? They'll make me drop rings in 
front of all the other planets again. There it is. The aliens are recieving 
a transmission from SETI. I gotta go to a different solar system.
%
anyways i had a dream where i was sol badguy from guilty gear x well i had 
all his powers but i looked like me which made it 10x more badass and i was 
hella fighting people and i had a dreamone time i was venom. but i looked 
like me, and my suit was way iller =\
%
UMMMM OK WHO ARE YOU? WHERE DO YOU LIVE? I WILL MEET YOU WHERE EVER AND WHEN 
EVER YOU WANT AND I WILL FIGHT YOU. UR A BITCH ASS NIG-GA TALKIN @#%$ LIKE 
WHO YOU ARE. DONT MAKE A GAY RESPONSE TO THIS AND SAY "O UR NOT COOL, I WONT 
FIGHT YOU, IM NOT TELLING YOU WHERE I LIVE" I DONT CARE HOW OLD YOU ARE I 
WILL STILL F-UCK YOU UP. @#%$. UR PROBABLY A SAND NIGGER. STUPID SAND 
NIGGERS ALWAYS GETTING INVOLVED IN STUFF
%
Aren't you a bit fucking fat to ride a horse? what gives you the guts to 
call yourself a cowboy? you probably haven't been outside in so long you 
probably don't even know what a horse even looks like. cowboy my ASS. you 
fucking poseur. you are just a nerd. go back to your computers and slashdot. 
a horse could whop your ass any day.
%
I even named my computer mouse Scabbers after Ron's pet in the Harry Potter 
books. It's really fun. Sometimes I'll talk to it while I'm working as 
though it's a real pet. "Hey Scabbers, I'll give you some cheese if you open 
that .exe file." Or something like: "Scabbers, you little rascal, did you 
just cause my computer to freeze?"
%
You know what? I took the plunge and installed Linux today. Top Hat or some 
hat version. But now I have a problem. Im getting these big red lesions all 
over me. Im not allergic to anything that would cause that, and I havent 
become infected with any diseases, my doctor checked me out fine. Then I 
figured out what Linux really is. Open Sores. Linux is killing me! Help!
%
ok. i installed linux. and it brought up this screen. i needed login and 
password. i finally figured out to put "root" as login but then i brings up 
this thing like [root@localhost root]# now what the fuck am i supposed to 
put there
%
guys do you know when tupac is coming home? Im worried about him. He wears a 
bulletproof vest so he usually is safe. but i made supper for him and he 
hasnt come home yet! his potatoes and shake n baked chicken are starting to 
get cold!
%
The worst terrorist attack in recorded history occurred just a two and a 
half years ago, followed by a Holy War against Islam, and now Israel and the 
Palestinians as well as India and Pakistan are teetering on the brink of 
their own war, Argentina is in the midst of a financial crisis, America is 
considering launching attacks against North Korea and Syria, and you people 
have the gall to be discussing video games???? My *god*, people, GET SOME 
PRIORITIES! The bodies of the thousands of innocent civilians who died (and 
will die) in these unprecedented events could give a good god damn about 
video games, your childish image macros, your nerf toy guns and whining 
about the lack of a fun workplace, your Everquest/Diablo/D&D fixation, the 
latest American Idol episode, or any of the other ways you are 'getting on 
with your life' (here's a hint: watching American Idol in your jammies and 
eating a bowl of Shreddies is *not* 'getting on with your life'). The souls 
of the victims are watching in horror as you people squander your finite, 
precious time on this earth playing video games! You people disgust me!
%
If you expect companies to follow the copyright of the GPL, you should 
support the RIAA going after infringers of its copyright. If not, you're a 
hypocrite.
%
AHAHAHAHAHAHHHAHAHHAHHAH YOU FAGS ACTULLY THINK NINTENDO BEAT XBOX 
HAHHAHAHAHAHH HOW AMUSING HAHAHHAHAHAHHAHHAHHAHHHHHAAHAHAHHAHAHAHAH JUST 
GIVE IT UPHAHHAHHA YOUR NOT GOING TO WIN !!HAHAHAHAHAHAHAHHAHHAH!!!!!!! A 
NEW GAME COMING TO GAY CUBE CALLED PRINCESS NINTENDO IT COMES OUT THE SAME 
TIME HALO 2 COMES OUT WHILE ILL BE PLAYING HALO 2 YOULL BE PLAYING PRINCSS 
NINTENDO AHHAHAHHAHAH HELP MASTER BILL GATES CONQER THE WOURLD AND LET THE 
EVIL EMPIRE RING HAHAHHHAHH JOIN I THINK ALL GC / PS2 OWNERS SHOULD BE SHOT 
IN A FIELD DAM PS2 SUCKS AND GC SUCKS DAM SHAME THE GC IS WINNIG OVER THE 
PS2 HAAHAAHAHHA SEE BILL GATES OUR XBOX LEADER WILL WIN US TO VICTORY DONT 
BE MAD BECUSE YOU BOUGHT THE WRONG SYTEM JUST BUY AN XBOX NOW!!! AND SPARE 
YOUR SELF WHEN BILL WINS THE COSOLE WAR!!! HAHAHAHAHHHHAHHAHHAH7TH 
COLUM!!!!!1!1 GUES S WHAT YOUR USING BILL GATES COMPUTER ARENT YOU GAME CUBE 
PEPOLE HAHAHHAHHAHAHHAHHAHHAHAHAHHAHAHAHAHHHAHAHBILL GATES OWNS YOU 
HAHAHHAHAHHAHAH!!! ENJOY ZELDA MASTER QEST WHAT A GAY GAM HE WILL NEVER KILL 
MC LINK IS A FAGGOT THAT CAN TUN INTO A FUCKING KID !! ENJOY SUCKY GRAPHICS.
%
Or maybe i snatched your ip out of the irc stream and ran a backwards trace 
against it, but hey, who knows right? Security exists for those who do not 
know how to break it.
%
God damn it. I am sick of these extremist arab fucks. I wish we would turn 
the region into green glowing glass. Don't feed me this "america caused it" 
bullshit either, they are a bunch of fucking animals and should be treated 
as such.
%
YES WE KNOW IT HAS DUAL XEONS NOW FOR FUCKS SAKE WILL YOU STOP TWISTING 
EVERY SINGLE CONVERSATION AROUND JUST SO YOU CAN MENTION IT YOU STUPID, 
PATHETIC, WHINING, LIFELESS VIRGIN PIECE OF SPOILT RICH-KID BUTTSUCKING SHIT
%
Batman whipped out a cease & decist from his utility belt. he slinked 
towards me slowly like a g thug. "I believe this is for you" batman 
bellowed. just as i was about to reach and grab the legal paper Batmans 
hands thrusted towards my bean bag and he squeezed me into a coma. now its 
10 years later. i have woken up. something smells funny. there is the batman 
symbol on my bed as a shitstain. i have been violated. 
%
Hi, my name is Najeeri Mongo and I am a quadrapelic who is deaf, dumb, and 
blind. I also have a very blunted sense of touch. I have spent months 
learning to read braille with my mouth so that I can come onto the intenet 
and ask you all to help me. One of the care workers is touching my penis, a 
lot, and no one seems to be doing anything about it. Please respond if you 
can help me.
%
Have you eaten ground beef recently? Ground beef is the result of everything 
outside of the cow's bones (including nerves) being ground up. Ground beef 
often contains prions (misfolded proteins) which due to mammalian protein 
metabolism act virally and will cause you to come down with 
Creutzfeldt-Jakob Disease (CJD) where your brain slowly decays due to holes 
forming in your brain, as the proteins in your body lose their ability to 
fold properly. Do you feel as smart as you were last week, or last month? 
You may have it.
%
PS- you'll fail at everything you ever try. Leave writing to the pros, sit 
back, and feel the germs crawling all over your amoeba-like body. What's 
that? Did you leave the oven on? Sorry, I'm so itchy, I can feel tiny mites 
burrowing into the skin of my scalp, behind my ears, biting my ankles, god, 
they'll go right through to my brain if I don't scratch them out. I just 
remembered that I need to go refold all my clothes!
%
(���������) (���������) FOUR HOTDOGS (���������) (���������)
%
YOU'RE DOOMED TO A LIFE OF LONELINESS YOU WILL NEVER FIND ANYONE WHO TRULY 
LOVES YOU EVEN YOUR PARENTS REGRET YOUR BIRTH YOU SPEND ALL YOUR TIME 
CHATTING WITH FAKE FRIENDS ON THE MODEM AND YOU SPEND THE REST OF YOUR TIME 
PLAYING WITH OPERATING SYSTEMS AND OTHER BORING SHIT GO BACK TO WATCHING TV 
BECAUSE THAT ESCAPIST SHIT IS THE BEST YOU WILL EVER GET FAGGOT DIE DIE DIE 
DIE DIE DIE DIE TIT ASS NIGGER
%
I HATE FAGS, NIGGERS, KYKES, CUNTS(IF IT BLEEDS IT DON'T FUCKING VOTE IF YOU 
ASK ME YOU FUCKING FAGS), SPICS, SLANT EYED SLOPE ASS SMALL DICKED COMPUTER 
USING BAD DRIVING THIEVING CHINAMEN/JAP/GOOK DUMBASS MOTHER FUCKERS NOW ALL 
YOU ALL MOTHER FUCKERS BETTER GET WITH ME AND HOP ON THE WHITE TRAIN. 
FUCKING NIGGERS DON'T HAVE SHIT ON MY WHITE MAN RIFLE, YOU WANNA KNOW WHY WE 
OPRESS YOU? ITS BECAUSE YOU DIRTY THIEVING NEGROES SMELL LIKE A WHORE'S 
ASSCRACK AND DESERVE EVERY PELLET OF BUCKSHOT IN MY POINT BLANK SHOTGUN 
BLAST TO YOUR FILTHY GUTS.
%
O'Brien broke my will liberally. He sent me to room 101, strapped the rat 
cage on my head, and would not keep his offensive rodents off me. He was 
performing many red flag tortures. I could not believe what the fuck was 
going on. I told O'Brien the Spirit of Man would not approve of the Head of 
the Outer Party torturing the last humanist for free. It doesn't help that 
the Ministry of Love has been holding me prisoner for months. I can barely 
recognize myself! What am I going to tell Julia when she comes back from 
room 101 to ask me why the fuck I told them to take her instead of me? 
She'll make me commit thoughtcrime in front of everyone again. There it is. 
The table next to mine is standing up for the Two Minute Hate. I gotta go. I 
love Big Brother!
%
Saying that Java is nice because it works on all OS's is like saying that 
anal sex is nice because it works on all genders.
%
The planes on 9/11 must have run Windows ME because they sure crashed 
quickly. Not a lot of uptime, if you get my drift.
%
I'm selling a wireless Dreamcast Modchip, you dont even need to open it up! 
you put it just to the right of your console (where the fan is) and it will 
work. I have 10 on stock, 5$ each, or 10 for 45$ , msg me if you are 
intressted
%
Your hands are filthy, covered in vast amounts of fungi, bacteria, and 
viruses. Underneath your fingernails is even worse. Also, the stove is on.
%
I think the PRESIDENT is the BOMB. SHOOT, sometimes, I think about GEORGE W. 
BUSH and wonder if he would like the ISLAMABAD deli on 14th st here in 
WASHINGTON, DC. I think the falafel is to DIE for. Or even to KILL for. It's 
so good it makes me wanna declare a falafel JIHAD on all the other INFIDEL 
falafel stands in the capital -- from those near THE WHITE HOUSE to those 
near CAPITAL HILL. they give me heartburn, though. it's like they 
ASSASSINATE my belly. it really KILLS me.
%
the link is only old because you are a loser and have nothing better to do 
than FIND THE MOST CUTTING EDGE LINKS ON THE INTERNET.
%
A recent incident (last night) not really wanking but being wanked. My gf 
was tossing me off in her parents spare bedroom as she didn't like giving me 
head, as she always thought it might "taste funny". Anyway, lying bollock 
naked, being careful not to make too much noise, my gf suddenly, and without 
warning decided to suck my boaby. I let out a "gWaARgh!" and started spewing 
a massive amount of testicular dairy into her mouth. Her dad then burst in 
to  o see what I was doing to his daughter, she shits herself, and sprays my 
cum all over me. I was nearly sick, and she just pissed herself lauging. Her 
Dad dissapeared very quickly, and has been making subtle jokes ever since in 
the presence of everyone!
%
your modem touched my junk liberally. he strapped me in to his comms rack 
and he couldnt keep his offensive rj11s off of me. he was performing many 
red flag RX/TXs. i couldnt believe what the fuck was going on. i told your 
modem the internet would not approve of a telecom device touching an 
underage kid for free. it doesn't help at all that your modem has been 
lagged to hell after touching everyone's junk. he can hardly whistle at 300 
baud after touching Chali's diseased junk. how is he possibly going to 
explain this to the internet when he is responsible for 99% packet loss? 
they'll make him drop carrier in front of the whole network again. there it 
is. al gore just called and asked why your modem hasn't responded. he has to 
go.
%
Turn ons include: Star trek TNG slasher fanfics (_NO_ rikker) and 
fabricating an intricate web of self delusion. Turn offs include the word 
"Kawaii" and the rancid smell of my own festering ass-crack.
%
John Stamos is getting divorced just as the Olsen twins turn 18. 
Coincidence? I think not. I think someone is going to be entering the 
backdoors of two little houses very soon.
%
Did you know that spiders cannot physically die of natural causes? If kept 
safe, a spider can continue to live and grow larger for a theoretically 
unlimited amount of time. In fact, in China there exists a collection of 
'holy' spiders, hatched some 2,800 years ago during the height of the 
Mang-Tsun dynasty.
%
Hitler was a horrible monster. Is it even worth debating? He was a failure 
as a leader and a human being; this is universally accepted. Why even 
discuss the actions of this mad demagogue? I mean, think about it... the guy 
rises to a position of absolute power, with (arguably) the most powerful 
army in Europe.  He's Blitzkrieging all over the place, Churchill is trying 
to appease his demands to avoid a full-out war, he's essentially 
unstoppable: and then comes the horror of the Holocaust. What kind of 
demonic possesion would cause a man in his position to use his power to 
practically wipe out the jewish people and culture in Germany? The final 
death toll was estimated at 4-6 million jews, despite the -years- in power 
that they could have been executing the Jewish people. The death toll could 
have been much, much higher. Hitler was a disgrace to the human race, more a 
monster than man. Even discussing his actions, despite his motives, is an 
affront to all that is pure and good. The most unfortunate thing is that he 
took his own life before the proper punishment could be bestowed on him for 
his terrible failure.
%
Taking an idea that I came up with a few years ago, but just never found 
time to execute (well they really didn't steal this idea) they took the 
original Legend of Zelda "overworld" theme for the Nintendo Entertainment 
system, put a stronger beat over it, and turned it into a great rap song.
%
XTC RAVEZ CANDY VISORZ WATER BOTTLEZ LOVE PEACE TRIPLE STACKED PAUL 
OAKENFOLD PLUR GLOWSTIX LOCKJAW PACIFIARS TURNTABLES PLUR EX STROBE LIGHTS 
LASER SHOW UNDERGROUND RAVE RAVE RAVE XXX FUCK FUCK FUCK LOVE EVERY1 KANDY 
BRACELETZ ACID WEED POT DRUG DRUG DRUG SPESHAL K TRANKWILIZER EXXXST
%
that does it. i am going to write a 4 panel gag manga about this very 
situation, and it's going to cast you in a very unfavorable light.
%
hello are you familiar with playagain website if not maybe you can still 
help i have downloaded a file from there, but not just there a chd file 
using bittorrent and the file i cannot open th extract whats in there i do 
not have a program to open it or even know what format it's in the file has 
a white backgroung and a microsoft windows flag on it. please help
%
I just ate some fried chicken. The breasts were juicy, and the buns were 
soft and warm. Afterwards, the division manager of Popeyes came up to my 
table and asked me how the meal was.I said I was satisfied, but the meal 
lacked a certain je ne sais quoi. He apologized profusely, and said he had 
something to show me that would make up for it. He lead me to the back of 
the popeyes, to a room soaked from floor to ceiling in blood. In the center 
of it was a live horse, chained by all four legs to the structural supports 
of the warehouse like room. As I watched, employees of the popeyes cut large 
sections from the horse, which was whinneying and screaming in horror, the 
remaining sections of its body covered with festering sores and a froth of 
sweat. The popeyes employees took the chunks of horseflesh and sliced them 
into pieces, then they rooted around through the bags of trash strewn around 
the room to find discarded chicken bones. They quickly tenderized the meat 
with sledgehammers and fed it into a machine which formed the horsemeat 
around the bones, then they breaded and deepfried it. I asked the division 
manager why he had led me back to this place, and he pointed at the steed's 
rump, the diseased asshole puckering rythmically with terror, squirting pus 
with each convulsion. {We're just about to use that section, would you like 
a crack at it first?} I quickly unzipped my pants and wasted no time jamming 
my erect penis into the stallion's defenseless asshole. With each thrust, I 
donkey punched the horse in the back of the head, making it clench its ass 
even tighter. I came just as the horse died. I was delighted. Popeyes 
definitely went the extra mile to make me a satisfied customer.
%
Eat your own shit. That's a great way to start then move on to another hot 
guy's load. The smell is a big turn-on for me and that gets me going and 
wanting to eat the guy's shit. My first experiences with was a guy smoking a 
cigar...and I gotta be honest, that still gets me going.It helps if you have 
a feeder who can feed me slow and not all at once...but then some guys like 
it all it once I guess...different strokes for different folks. What I would 
suggest for someone who finds the smell harsh is try eating slowly if 
possible and holding your breath at first...it will come with time if you 
let it.Sometimes it helps to lie under a rim seat with a mirror nearby so 
you can see how much your partner is enjoying it too...this is a real turn 
on for me...giving pleasure gets me pleasure I find...and vice versa...
%
There is a new online code out, kinda lol and brb.  This one is a little 
different though.  You all know how it feels when you're talking to someone 
online,and your Mom is standig right behind you, reading every word that is 
on the screen.Then of, course,the other person swears  or talks about how 
much you luv your crush or something and your Mom reads it and tells you to 
get offline that instant, and not talk to that person anymore. Well, what 
can we do about that? To solve this problem, now we have started the {Code 
9} system. In code 9, u simply press 9 when your parent or sibing is 
watching over your shoulder as you type That way, the other person will know 
what you are talkin about, and begin a conversation about homework or 
something. When your Mom or dad leaves, press 99 to let the person know that 
they r gone, so u can have a normal conversation again. NOW, SEND THIS TO 
EVERY1 YOU KNOW, SO CODE 9 CAN GO INTO EFFECT!!! IT IS VERY IMPORTANT YOU 
SEND THIS EMAIL TO EVERYONE YOU KNOW>>
%
BEST DAM WAY TO COOK COLLAD GREENS BE REAL DAMN SIMPLE.  SNATCH 2 O' 3 DEM 
PUFFED HAM HOX N PUT EM IN SOME FAT ASS POT WIT SOME  WATA.  BRING DA SHIT 
TO A BOIL N LET DAT SHIT BOIL FO 4 HOURS.  ADD MO WATA BITCH BFO  YO ASS 
GONNA LET DAT SHIT DRY OUT LIKE A MOFUKKA.  DA BRAINSTORM BE TA LET DAT SHIT 
BOIL TIL DEM HOX BE ALL FALLIN PART N SHIT.  COOK EM REAL DAMN THOROUGH OR A 
NIGGA BE GETTIN LOCKJAW.  GRAB DA GREENS AN SEPARATE DEM LEAVES. BDP USE DA 
SCREEN OFF THA NAYBUHS CRIB. TASTE DEM GREENS, MAKE SURE THEY BE ALL SPICED 
UP LIKE A NIGGA ON A MEXI HO N FLAVA IF NESSARY. SERVE WIT CHIITLINS. NOW U 
BE KNOW WHAT GREENS BE LIKE BEAT DOWN POSSE STYLE.
%
While jerking off with some sort of lubricant, mount something like the 
corner of the bathroom sink so that your balls are rubbing.  This adds 
intense pleasure to your nut sack.  Also, try lubing up something like your 
toothbrush handle and stick it up your ass while jerking...it hits the 
G-spot nicely.
%
Software piracy is WRONG! You are stealing from hard working programmers. 
Your IP HAS been noted, and is being forwarded to the SPA with a 
reccomendation that they investigate your CRIMINAL activity. Please delete 
all your pirated software before you are arrested!
%
Linux is illegal! You are breaking the law, and hurting yourself and your 
family with your ILLEGAL SOFTWARE. Your ip has been noted and is being 
forwarded to the SPA with a reccomendation that they investigate your 
CRIMINAL ACTIVITY. Please destroy all your unpatriotic linux software before 
you are arrested!
%
I'm a guy and my friend is a guy and for whatever reason I've always wanted 
to ejaculate in his face. For his birthday one year, I decided to bake him a 
birthday cake. In the middle of the baking, I decided I'll ejaculate in the 
cake. He ate the cake. Therefore I indirectly ejaculated in his face.
%
My favorite way to masturbate is to purchase some Nickelodeon Gak. For those 
who don't know its a strange little gel substance that's really cold and 
slippery. It makes me feel like I'm having sex with an alien.
%
CALLING ALL 3RD GRADERS! How can you people think this game is entertaining? 
i bet you also like pokemon, rayman, tak and the power of really stupid 
games, and megaman battle network.  why dont you grow up and play some real 
games like Resident Evil. Oh wait, i forgot, your too dumb and your mommy 
wont let you buy M-rated games. BOOO-HOOO! or the greatest game ever forged 
by mankind....DIABLO 2!!!
%
MMMM........mmmm i'm abit confusing right now......why will they eat their 
own poo-poo where it smell so terrible? Actually, mushu is very good in her 
toilet training. She'll only pee & poo on the newspaper i prepared for her. 
But she eats it when i'm away! After i beat her twice, she seems to bark at 
the poo first before she goes near it. Then she'll smell it & play with it. 
Then she'll put everything into her mouth!!!!! Yucks!!! But i didn't get the 
chance to see it but my housemates did.
%
yeah it si ok bcuz if an older hamster itz his\her own poo they get the 
mineral and vitamins thats left behind and was missed so it go though 2 
times and for the babys it is ok bcuz they need to eat the older hamster poo 
so their stomach can get the bacteria and other stuff so it can help the 
baby im not saying to pick up poo and stick it in the nest they willd o it 
them self......(you wont see them)
%
2 to the izzle and 3 to the shizzle, see you on the flopside. your friend, 
Riley Michel
%
My band, although hardcore, and almost scary at times, is comparable to the 
sound of Limp Bizkit, but our music holds messages of much value. We played 
the title track off our album, "This Road," which talks about working hard 
to achieve goals in life.
%
I FOUND THIS REALLY COOL GAME CALLED EVERQUEST EVER HEARD OF IT LET ME TELL 
U ABOUT MY ADVENTURES BTW I USE CHEETO CRUMBS FOR BABY POWDER WHEN I GET 
MOISTURE PROBLEMS IN MY CROTCH
%
my name is Akmar and i am 7 yrs old and dad tied me in the basement and tell 
me to have all dos game by 7 o clock or i get no food plz help
%
I'm not a goth. Many goths say this, but I'm really not one. Well, OK, I 
wear black. And I like goth music. And regularly go to goth clubs. Argh, and 
I've been known to wear silly goth outfits when I go. But I'm still not a 
goth.
%
I've learned over the last week that I really like oral sex. I've learned 
that every guy tastes differently and overall I like the taste. But. Cum is 
best served fresh and hot. Cold cum is not my idea of a good meal.
%
I may not be as tech savvy as Linus Torvalds, but I know my way around the 
Windows registry.
%
I really cant wait to get the money for the full version and my own server 
with my clan so I can kick fags. Its amazing to me the capacity some people 
have for being assholes and losers in a video game
%
IRAQI PRISONERS TORTURED? THIS IS NO DIFFERENT THAN WHAT HAPPENS AT THE 
SKULL & BONES INITIATION...I'M TALKING ABOUT PEOPLE HAVING A GOOD TIME. 
THESE PEOPLE -- YOU EVER HEARD OF EMOTIONAL RELEASE? YOU EVER HEARD OF 
NEEDING TO BLOW SOME STEAM OFF?
%
"If a man finds a girl who is a virgin, who is not engaged, and seizes her 
and lies with her and they are discovered, then the man who lay with her 
shall give to the girl's father fifty {shekels} of silver, and she shall 
become his wife because he has violated her; he cannot divorce her all his 
days." (Deuteronomy 22:28-29, NASB)  Can you imagine the mental torment and 
terror such a woman would endure after being married to her rapist?
%
Christ clearly came to destroy Judaism and had nothing but contempt for the 
Jews. He rejected their laws and customs, called them the spawn of Satan, 
and basically condemned them to hell. How can anyone deny that the Jews were 
directly responsible for the death of Christ when Christ himself directly 
blames the Jews prior to his death? There is no Judeo-Christian religion, 
tradition, or anything else. There is a war between God and the children of 
Satan (Jews) that God will win, but nothing else. To speak of a 
Judeo-Christian tradition, is like speaking of a Satanic-Christian tradition.
%
Yo, dawg, are you hitting on me? God, I hate fags! I wish one was here right 
now. I'd make him fuck me up the ass and jerk off all over my face. And then 
I'd lick his nipples while cupping his balls in my hands and be like, 'Is 
that how you like it? Huh? Is that how you like it, fag?' And then I'd make 
him take a dump on my chest while I masturbated. That'd teach that goddamn 
queer.
%
I'm Jordan. I just wanted to see what my rating is, so please be honest. I'm 
a good guy with a nice heart, and I love to read poetry. I am a full time 
christian and I love the world. Live life to the fullest. Peace.
%
Ever since I was three I knew that something was something different in my 
sexual preferences, as time went on I realized that I liked anime babes and 
Hentai. Ever since then I have been looking at anime porn and such, I`m not 
attracted to real girls that much. If I see a girl naked I won`t like it but 
If I see hentai I`m all in for it. Since I`m a christian I`m wondering if 
God made me this way for punishment or something, I don`t blame him at all. 
He didn`t have to make me anyway so I thank him for simply making me. Anyway 
is it normal for me to like anime babes or not? Should I tell my parents or 
hide this secret from them? I`m looking at this HOT anime babe in her bra 
and panties and I`m hard as heck! But is this a sin?
%
Like you've ever been to an arcade. The skin on your back would peel off if 
you ever extricated yourself from your oily throne of cheeto crumbs and 
mountain dew stains.
%
Im in the middle east. Middle eastern people may have dark skin like a 
grl.......face it bitch...ur a motherfuckin dick suckin man 
hoe!!!!!!!!!.........ur a faget ass punk pussy lil girl......ur da gayest 
person ever........go to hell bitch!!!!
%
your fuckin gay you should be shot and put in a gas chamber you fuckin peice 
of trailer trash....you put your moms dick back in your mouth and shut the 
fuck up the song fuckin rules
%
I�AM�CAUSING�YOUR�XTERM�TO�SCROLL�THE�CAUSE�OF�YOUR�XTERM�SCROLLING�IS:�ME�
%
I thought ocd was like a car, too, but then my psychiatrist suggested that I 
don't have to wash and wax my car and walk around it three times every time 
before I drive (some of the paint is comming off, and it is only a 2002 
lumina) so I tried not doing it and that very same day, I got in a car 
accident and they had to amputate part of my foot. Luckily I walked around 
the car ONCE, or I might have been killed! I used to think cutting was self 
destructive, but that was before it made me rich, famous, and helped me meet 
the love of my life. Boy am I glad I never put down the razor! If you care 
about yourself, cut EVERY DAY. If your boyfriend has OCD, you can Trick him 
out of it. Try moving his car keys when he's not looking, changing the 
ingredients in his food, swich his computer to spanish text by default, make 
subtle hints that you are sleeping around on him. This will jog his brain 
into working correctly, and he'll know you're only doing it because you love 
him!
%
If your son has requested a new "processor" from a company called "AMD", 
this is genuine cause for alarm. AMD is a third-world based company who make 
inferior, "knock-off" copies of American processor chips. They use child 
labor extensively in their third world sweatshops, and they deliberately 
disable the security features that American processor makers, such as Intel, 
use toprevent hacking.AMD chips are never sold in stores, and you will most 
likely be told that you have to order them from internet sites. Do not buy 
this chip! This is one request that you must refuse your son, if you are to 
have any hope of raising him well.
%
There are, unfortunately, many hacking manuals available in bookshops today. 
A few titles to be on the lookout for are: "Snow Crash" and "Cryptonomicon" 
by Neal Stephenson; "Neuromancer" by William Gibson; "Programming with Perl" 
by Timothy O'Reilly; "Geeks" by Jon Katz; "The Hacker Crackdown" by Bruce 
Sterling; "Microserfs" by Douglas Coupland; "Hackers" by Steven Levy; and 
"The Cathedral and the Bazaar" by Eric S. Raymond.
%
Did you Europeans quit when you were behind in your butchering Jews like 
unwanted fetuses? Don't bother booting up En Carta, genius, the answer is 
no. My yarmulke wearing Sergeant Grandpa had to fly his jet over there and 
knock the gas chamber remote out of your assy smelling fingers himself. And 
while he was at it I think he popped a WWII era cap right in your sunken 
euro-chest. I'll never forget the stories he told me about how he and his 
buddies and a bunch of foxy WAVES liberated ol' San Francisco from you 
slanty-eyed motherfuckers.
%
Another Infected Dick Sucker - that's what AIDS stands for. I'm going to 
live to see the day you queers die a horrible death. There's no reason for 
you to be here on earth.
%
So let me guess, you were one of those guys late up at night. jobless, and 
tired of going to your dead end job, until you saw a commercial for an 
exciting career in "Information Technology!" offered by the DeVry institute 
where you will be trained in as little as 3 months in the field of 
INFORMATION TECHNOLOGY! Promising you the career of $50,000 a yearAnd now 
with this knowledge and your A+ certification, you join random channels in 
irc in the hopes of you connecting with other INFORMATION TECHNOLOGY! 
professionals so you can show off your shiny new {Certificate of completion} 
from the DeVry institute.
%
The Quran requires the infidel, whether Jew or Christian, to be killed. ... 
That's a core essence of the religion. ... Muhammad was a pirate who killed 
infidels and who advocated the killing of infidels. Not a nice guy. Osama 
bin Laden is in keeping with his fine tradition.
%
BSD, Lunix, Debian and Mandrake are all versions of an illegal hacker 
operation system, invented by a Soviet computer hacker named Linyos 
Torovoltos, before the Russians lost the Cold War. It is based on a program 
called "xenix", which was written by Microsoft for the US government. These 
programs are used by hackers to break into other people's computer systems 
to steal credit card numbers. They may also be used to break into people's 
stereos to steal their music, using the 'mp3' program. Torovoltos is a 
notorious hacker, responsible for writing many hacker programs, such as 
'telnet', which is used by hackers to connect to machines on the internet 
without using a telephone.
%
I'm all talk? Lets meet at a secluded place and I'll show you how much talk 
I am you pussy. I'll burry you so deep that your mommy will litter all of 
California with your missing posters.
%
I JUST HAD THIS FREAK ACCIDENT WHERE I SAT DOWN TO WORK AND I SPILLED DOPE 
INTO THE BONG AND THE LIGHTER FLICKED OUT AND SET IT ON FIRE AND THE WHEELS 
OF MY CHAIR SLIPPED BACK AND I INHALED THE DOPE SMOKE AND ATE A MUFFIN
%
EFnet split my junk liberally. It strapped me into its splitting server and 
would not keep its offensive lag off of me. It was performing many red flag 
timeouts. I told EFnet dalvenjah would not approve of its servers 
impersonating DALnet for free. It doesn't help that EFnet has been run by 
nazis for eight years. Its hubs can barely stay up! What is EFnet going to 
say to comstud when he comes back from a Dianora blow job and asks what the 
fuck EFnet just did in front of 120,000 users? He'll make the hubs squit in 
front of all the opers again. There it is. They just relinked irc.aol.com. I 
gotta go.
%
Finally, a break from the linux tax. Yeah, you know the one -- the one that 
makes you pour hundreds and hundreds of wasted man-hours into using poorly 
written programs with little or no documentation. What can you expect from 
spaghetti code written by hobbyists and students? I'll happily give my money 
to the professionals any day, no matter what News for Nerds declares. 
Honestly, I know most of you agree with me!
%
IF U R ON DIZ LIST, WTACH OUT!!! U R A MARKED MAN (OR WOMAN), I WILL HAV MY 
VENGEANCE ON U ALL!!! U SHALL FEEL MY WRATHLY WRATH, U SHALL RUE DA DAY U 
MADE AN N.A.ME OF DA MAD MATRIX HA><0R!!@#!$
%
When the hell will all those people just curl up and die? I'm so heartily 
sick of that mustachioed hippie free-love deviant ESR spouting his OSS 
filth. When will he realise that he's made all the money he possibly can 
from it, and it's time to just shut up and move along now?
%
Humidity overheated my junk liberally. It strapped me into its ambient 
temperature and would not keep its offensive moisture off of me. It was 
causing many red-flag heat strokes. I could not believe what the fuck was 
going on. I told humidity that the Weather Network would not approve of a 
cool front coming out of the Gulf Stream for free.  It doesn.t help that the 
Humidex has been at 40% for weeks. I can barely walk straight! What am I 
going to tell my wife when she comes back from getting ice to ask why the 
fuck I.m towelling off my balls in the presence of our children? She.ll make 
me drop trau and use deodorant in front of everyone again. There it is. The 
guy across the street just asked if anyone could smell .that.. I gotta go 
shower.
%
HOT XXX YOUNG CUMSHOT WATERSPORTS ANAL FUCK BRITNEY SEX GRANDMA CUTE VOYEUR 
LATINA FACIAL HENTAI PORN JACKOFF PUSSY ANAL SEX BLOWJOBS BACKDOOR HERSHEY 
HIGHWAY CUMSHOT TEABAG $$DVDA$$ TITTY FUCK DIRTY SANCHEZ $DOUBLE 
PENETRATION$ JAPSCAT $GOLDEN SHOWER$ LATTE ENEMAS $TVTA$ SKULLFUCK 
DOGGYSTYLE MISSIONARY $QVQA$ !!!!!!!!!!!!!!!!!DIRTY HORSE BEASTIALITY KIDDY 
PR0N LOLITA.MPG.JPG.AVI.DIVX.BMP.MOV.PIF
%
BANG BANG ALLAH MECCA KORAN AL AQSA BIN LADEN SHAHID YA SADDAM YA HABIB 
UTRUB UTRUB TEL AVIV FILIN FILTIN FILYALLA FALESTIN $$TURBAN$$ AFGHANISTAN 
WAR ON TERROR W.T.C 9/11-NEVER 4-GET JIHAD HEAVEN AL AQSA AL ABDALLAH YA 
SHARIF AL QAEDA THE SHAYKH EMIR ABU ABDALLAH IN SPIRIT AND IN BLOOD WE WILL 
FREE JERUSALEM AND ABU AMAR MATADERRA MATADERRA HAJJ NUJAHID ALLAH EMIR AL 
HABIBBI
%
XTC RAVEZ CANDY VISORZ WATER BOTTLEZ LOVE PEACE TRIPLE STACKED PAUL 
OAKENFOLD PLUR GLOWSTIX LOCKJAW PACIFIARS TURNTABLES PLUR EX STROBE LIGHTS 
LASER SHOW UNDERGROUND RAVE RAVE RAVE XXX FUCK FUCK FUCK LOVE EVERY1 KANDY 
BRACELETZ ACID WEED POT DRUG DRUG DRUG SPESHAL K TRANKWILIZER EXXXSTASY 
COLORS UNDERGROUND RAVE MUZIK XTC DANCE ALL NITE FUCK THE PARENTZ 
DEYHDRATION HUGE PANTS BODY PAINT PLUR PLUR PLUR LOCKJAW GLOW STIX VISOR 
UNDERGROU
%
AUNT JEMIMA UNCLE BENZ RICE PANCAKES GRAINS WAFFLES GRITS HASH BROWNS BACON 
ON POP KOOL AID WATERMELON FRIED CHICKEN OMMELETES BITCHES N 40Z FRIED 
CHICKEN FISH ROLLIN WHEAT GRAINS AND OATS CORN PUFFS WIT WATER FRIED CATFISH 
AUNT JEMIMA CRACK COCAINE SOUL FOOD KITCHEN BAKIN BREAD MAKIN GRITS FRIED 
CHICKEN WATERMELLON SHRIMP WENDY'S SPICY CHICKEN SANDWICH ROLLIN BLUNTS 
SMOKIN JOINTS HENNESEY GIN N JUICE CRISTAL COLONAL SANDERS REPRUHZEN
%
FUBU BIG CHAINZ DUBZ $BLING$ $BLING$ FUCK DA 5-0 BITCHES BLUNTS 40Z KICIKIN 
IT BLUNTED JARNELL BABY MAMMA CHILD SUPPORT CHICKEN AN WATERMELON KOOL AID 
DA RED KIND FOOD STAMPS WESTSIDE $$CASH MONIES$$ DRIVE BY RYDE OR DIE NIGGA 
RUFF RYDA 4 LYFE PHAT ICE PHAT BLUNT DENZEL WASHINGTON ROCAWEAR ICE BLING 
BLING 5-0 187 MURDA MURDA FOOD STAMPS BLUNTS PAPERZ BLAZED WELFARE CHITLINS 
GRITS KOOL AID HOLLA BACK FUCK DA POLICE ROLLIN IN DA BENZ-O
%
420 BONG TOKE PARTY WEED BOB MARLEY SPLIFF CHEEBA TOKE BONG MARLEY JOINT 
WE$D YEAH BOWL PACK WEED SMOKE YEAH NIGGER LEGALIZE SMOKE POT DANK WEED BUDS 
FRUIT OF LIFE KOTTONMOUTH KINGZZZZZZ BONGHITS ONEHITS DUGOUT BUBBLER 
STEAMROLLER ZIG-ZAG PHAT BAG SINSEMILLA HEMP SMOKE GRASS GAS OR ASS NOONE 
RIDES FOR FREE PAPERZ LIGHTARZ LEGALIZ0RZ WHIPITS
%
u dont even know me kid shut the fuck up hidin behind yuor computar id 
fuckin lump u out if u fronted on me like that in person fukin bitchass 
littel nerd hidin behind cmputar screen littel pussy i kick ur ass irl fagget
%
I love to satisfy women in which ever way they choose. I love to please you 
and make you scream and moan until you cant take it no more and grab my head 
pushing it between your legs making my tongue go deeper and deeper until it 
reaches that spot! And then squeezing my head between your thighs! I keep 
going until you are so wet that your sweet juices are drippin and running 
down your thighs and on my lips and all over my face
%
This has got to be the worst 'holiday' ever conceived. First, my friends 
started by playing a mean prank on me, and then even my family got in on the 
act. They took me out back into the woods, tied me to a tree, and paid a 
drunken hillbilly to rape me! First he lubed up my asshole with his spit, 
and then he proceeded to violently penetrate my ass. The stench exuding from 
his unwashed mountain-man body was overwhelming, and only served to make me 
sicker than I already had been. I couldn't help but begin vomiting, and this 
only seemed to turn the hillbilly on more. After he finally finished and 
deposited his semen in my rectum, my family and friends shouted {April 
fools!!} They're going to get what's coming to them next year.
%
My father has been gone on Mar 26 due to an bus accident (fuck Shanghai XX 
bus corp., fuck Shanghai XX hospital), I am very sorry for often making him 
anger. I can't forgive myself, so I decide to stop this project including 
reply service for at least 2 months according to our custom, please forgive 
me. I promise I will be back, but now I am in very pain... Dad, please 
forgive me, please bless mother, sister and me... unf
%
OH IT'S A SLYTHERIN SCARF!!! LOOK AT ME I LIKE HARRY POTTER!!! PS I HAVEN'T 
READ THE BOOKS ONLY SEEN THE MOVIES
%
I bet Blihoorlt is one of those guys who has a "word of the day" calendar on 
his desk, and every morning he nearly pees his pants because he's so excited 
that he's going to learn a new word that he will use all day long (and 
usually incorrectly), and then promptly forget it the next day when he tears 
off the page.
%
Hyndmost, you appear to have a "sounding smart" fetish. But in reality I bet 
you're a depressed nerd who dropped out of school because you couldn't take 
getting made fun of anymore. Maybe if you didn't spend 5 minutes looking up 
words on dictionary.com, it wouldn't take you so long to reply.
%
i claim to be liberal, and for the most part part i am...but i can't help it 
that i just do not like black people. i want to but whenever i see one on 
the street or something i can only think "Nigger!" i want to like them and 
every once in awhile i meet a nice black person but most of them just seem 
to be stupid niggers.
%
Your are thr reason this world going to hell your fucking piece of shit ...i 
hope you get strike down by lighting in the middle of the field and then 
wolfs eat your smodlering carcus you fucking physco path!!
%
Ladies: walk through the woods, grab a lumberjack, toss him to the ground, 
strip him, suck his cock, piss his face wet and then get down to some dirty 
dung duty.
%
Yesterday I was cooking some food in the kitchen and I heard an electric 
shaver in the bathroom.  The only other person in the house was my roommate 
who is female.  I rolled my eyes, realizing she must be shaving her pubic 
area.  When I later entered that bathroom, the trash can had a sizable ball 
of brown curly hair in it.  Gross.
%
There's a pubic hair on my keyboard. What the fuck?? I "mow the lawn" so 
it's not mine. Gross.
%
Gentlemen, I am pleased to announce the following: My testicles and penis 
are larger than the average size by a considerable degree, which women find 
very attractive. I also possess a great deal of wealth, including sports 
cars, real estate, works of art, and extensive liquid assets, which are also 
very desirable to women. In short, your genotype has no chance to survive. 
That is all.
%
I'm not racist (okay, no more racist than the average middle-aged American 
white guy), but lately I've been barking out (in a really unnatural voice) 
the words "STONE COLD SUPER NIGGER".
%
Please help me before I fry in the pits of hell. I masterbate several times 
a day. My parents bought me the anti-erection ring and I deal with the pain 
just to have that orgasm. I want to be castrated but my parents tell me I am 
to old. They say that at 14 years old i will not be able to handle being 
castrated. But they are wrong.
%
I can't believe I just let loose a fart in my pants at my workplace. What 
the fuck? I can't sniff and make a disgusted face too soon, because that 
would throw suspicion at this very person. Any change in my seating position 
might cause the leather of the seat make a farting noise, alerting every 
coworker within 30 feet of me. There is no way I could play that off as a 
burp. It doesn't help at all that I've been a part timer for 3 weeks. I can 
hardly pay the bills! How am I possibly going to explain this to my boss 
when he comes back from photocopying TPS reports to ask me what the fuck I 
just did in the presense of the CEO? He'll make me drop trou in front of the 
temps again. There it is. The fat guy at the desk to the right of me just 
asked if I could smell 'that'. I gotta go.
%
Niggers fucked my ass liberally. They strapped me onto the hood of their 
Cadillac Escalade and could not keep their enormous dicks out of me. They 
were performing many red flag touches. I could not believe how big their 
cocks were. I told the niggers the city would not approve of an undercover 
police officer shitting blood for a week without a doctor's note.
%
  
1002001001001202301004100102010300101001001001010110101010100203010101010120 
THE MATIX HAS U
%
Yeah I hit her. When I told her to jump on my dick she said she was tired 
and had to finish cleaning. I told her I wanted some fucking cunny now but 
she didn't listen. Yeah I hit her fucking hard and gave her bruises. The 
bitch deserved it. It's all her fault. Christ, now the fucking kids are 
screaming. I'll be right back, I gotta beat some sense into them.
%
Yeah, I hit the bitch. She was fucking asking for it. I told her to go get 
me a beer and sausage and you know what she fucking did? She brought me a 
can of beer instead of a bottle. The fuckin whore, she knows the cans are 
for the kids and I get bottles. DONGS.
%
BADABABABA IM LOVIN' IT : Scat d00d00d00d00 in my mouth
%
fuck shit bitch ass tits. Lets drop some e shoot some heroin and pass out in 
a ditch. 3420 bong toke party. smoke dat herb into yo mind. <3 my mom smoked 
so much weed im suprised im not retarded <31 you dumb fucking f a g g o t s
%
I am white trash and I live in a trailer and it's raining real hard outside 
and I heard some hard knocking on my door and I looked out the window and I 
saw some guy wearing a mask running around to the back of the trailer and 
now I hear him banging on the side and then I saw him looking in another 
window and now I closed all the blinds and now the power has gone out and I 
think he's gonna break in and kill me.
%
I love to lick the sweet pre-cum from a black man. Kiss and lick his nipples 
then deep throat his cock until I gag. I'm willing to travel far for a man 
who's interested in the best suck he's ever had. Please let me choke and gag 
on your cock. I can suck off a 9 inch (22.5cm) cock with ease. I also have 
some great butt pussy. It's tight and can be tamed. Let's deep kiss first! 
We can share a bottle of wine and get sexy together.
%
Oh My!! Straight from heaven. Ide bury my nose deep in that cotton and take 
deep, slow breaths. Enjoying that sweet musky boquet. Suck her taste and 
flavor through the moist fabric and smile. Slip the panel aside and gently 
lick and suck that tastey pink morsel until she grabbed the back of my head, 
bucking her hips and forcing my face into her hot wet snatch.
%
Comcast bid on our junk liberally. They strapped us into their Entertainment 
and Communications portfolio and would not keep their offensive investors 
off us. They were offering to assume many red-ink net debts. We couldn't 
believe what the fuck was going on. We told Comcast the Securities and 
Exchange Commission would not approve of two multi-million dollar 
corporations merging tax-free. It doesn't help at all that we've been 
hypnotizing the youth of America for 67 years. We can hardly turn a profit! 
How are we possibly going to explain this to the press when they arrive and 
ask us how the fuck we lost the Pixar contract in the presence of our 
shareholders? They'll make the Board of Directors drop trau in front of 
everyone again. There it is. The FCC just left us a very pissed-off 
voicemail. We gotta go.
%
I am a gay. My problem is my asshole is very small and even my finger does 
not fit inside. How can I make my asshole wider.
%
The bitch beat the crap out of me. She made me bleed, and left welts on my 
ass and back. She was beating me like she was Furio and I owed money to Tony 
Soprano. She went to work on my ass with a spatula, wooden kitchen spoons, 
everything. She bit my nipples. She even tried to go at my nuts with some 
tongs. It was hilarious, and painful.
%
Hi =) i don't mean to do spam... just thought to let u know that there is 
another channel around. #HyDrO-WaReZ... thanks =)
%
I went to MacWorld and persuaded an Adobe employee to preview the then beta 
of Photoshop 4. He left me to mess around with it on my own and while he was 
talking to some other folks I pulled out an ethernet crossover cable and 
connected his Mac to my Powerbook and copied over the Photoshop Beta.
%
If your tongue is anything like your foot, then I will sweat like a banchee 
if you eat me out.
%
MMMMMMMMMMMMM. Crunchy, mushy CATBOX. The PEARL OF THE ORIENT. You JERK THAT 
SHIT, HOLMES. You JERK IT LIKE YOU'VE NEVER JERKED BEFORE. For the LOVE OF 
CHRIST AND BALLS, JERK like the WORLD IS GOING TO FUCKING END.
%
Sometimes when I put something full of flavor in my mouth, I close my eyes 
and feel like I'm flying-drifting into eternity, above and beyond all the 
craziness of the world below, and I dream that all there is in the world is 
love, harmony and bacon. In an effort to forward world peace, I plan to be 
the first person to send bacon into space.
%
I remember one time at fashion camp Dustin Diamond came up behind me and 
pulled my shirt over my head. He pushed me to the ground and jumped on top 
of me. He took 3 pairs of handcuffs out of his rear pocket. He used one pair 
to bind my hands, another for my feet, and the last one to bind my hands and 
feet together. Dustin Diamond then ripped off all of my clothes including my 
new shirt and silk briefs. He put his mouth on my penis and masturbated me 
for a minute or two and then he turned me around on the ground. Dustin 
Diamond then disrobed himself and lay down on top of me. He inserted his 
penis in to my anus. I couldn't believe what the fuck was going on. Dustin 
Diamond was fucking me in the ass! He continued to fuck me in the ass. I 
counted every second of it. After 27 seconds he ejaculated inside of me. I 
was mortified. The worst part was that my new shirt was ripped and I didn't 
even reach orgasm!
%
But anyway, my dad is said to have a ten inch cock, but I have not seen it 
since I was five, so I don't remember.
%
I can't believe I just took a shit in my bathing suit at the beach. What the 
fuck? I cant stand up and take it to the ocean, because I am wading in a 
puddle of feces at this very moment. Any change in my seating position will 
send my poo spilling down my legs and into view of every sunbather within 30 
feet of me. There is no way I can play this off as a fart. It doesn't help 
at all that I've been spun out for 3 days. I can hardly see straight! How am 
I possibly going to explain this to my wife when she comes back from getting 
chili dogs to ask me what the fuck I just did in the presence of my 
children? She'll make me drop trau in front of everyone again. There it is. 
The family on the blanket to the right of me just asked if I could smell 
'that'. I gotta go.
%
By taking the name of the popular operating system 'windows' and replacing 
the last bit with 'blows' (which is a colloquialism meaning 'bad' or 
'inferior') you've just given the name a whole new meaning, while not really 
changing the sound of the word too much! this is the epitome of both wit and 
humour! other highly amusing (and often underused) slag terms are 'windoze' 
(doze meaning 'light sleep' or 'knap') and {'M$'} (which usually stands for 
MicroSoft, but in this case, the 'S' is deliciously replaced with a dollar 
sign to represent how they unfairly charge for their products!) This is a 
new wave of humour, people. I think we should riddle all our posts, replies 
and (where applicable) everyday speech with these little beauties to forever 
represent that we, the open source community, know better than everyone else!
%
I AM MR DARL MCBRIDE CURRENTLY SERVING AS THE PRESIDENT AND CHIEF EXECUTIVE 
OFFICER OF THE SCO GROUP, FORMERLY KNOWN AS CALDERA SYSTEMS INTERNATIONAL, 
IN LINDON, UTAH, UNITED STATES OF AMERICA. I KNOW THIS LETTER MIGHT SURPRISE 
YOU BECAUSE WE HAVE HAD NO PREVIOUS COMMUNICATIONS OR BUSINESS DEALINGS 
BEFORE NOW. MY ASSOCIATES HAVE RECENTLY MADE CLAIM TO COMPUTER SOFTWARES 
WORTH AN ESTIMATED {$1} BILLION U.S. DOLLARS. I AM WRITING TO YOU IN 
CONFIDENCE BECAUSE WE URGENTLY REQUIRE YOUR ASSISTANCE TO OBTAIN THESE FUNDS.
%
One day Captain Kirk was maiming his cock with a horseshoe when suddenly Mr. 
Spock ran up to him and shoved his pointy ear up his butt. "What is this 
for!" the fag captain said. "FAGS FOR YOU AALL!L!!!" the ancient alien 
howled as suddenly he farted and Captain Kirk twirled around in a daze and 
his foreskin twisted and his kidney stones turned into wooden beads. He 
pulled out his pistol and shot lasers at his chastity belt and suddenly he 
hurdled his dick into Captain Kirk's bellybutton and it tore his flesh while 
Spock fucked his stomach. Kirk hollered out loud and Mr. Spock threw his 
shoes to the floor and wrinkled his penis until Kirk bellowed out to make it 
stop. A maelstrom of shit whizzed around the ship and suddenly a giant fag 
appeared out side and the U.S.S. Enterprise went up his butt. "Oh what the 
hell have you gotten us into NOW!" Captain Kirk said as he oozed a condom 
back on his dick and put his panties back on. OOH!H!!!!!! Mr. Spock started 
fucking him again and shoved his phazer up his butt. He dissolved his glands 
and exploded his turds and finally a queer klingon hurdled through the door 
and smashed Kirk with his butt hairs. A maniac sucked his dick and suddenly 
Mr. Spock fagged Kirk so hard that his intestines burst open and he died.
%
batman touched my junk liberally. he strapped me in to his batmobile and he 
couldnt keep his offensive hands off of me. he was performing many red flag 
touches. i couldnt believe what the fuck was going on. i told batman the 
city would not approve of a millionaire touching an underage kid for free.
%
I'm going to drive a remote controlled car into your mother's pussy and have 
it drive on her clitoris over and over again until she cums on it and it 
catches on fire and she dies from pussy burning
%
 9/11 was done by sandniggers and all 7-11s are run by sandniggers. 
coincidence? i think not.
%
Hello. Did you know Chali is a disgusting whore? Please surf over to Stile's 
Stileproject.com to see her latest pornographic material. This bitch 
disgusts me in her lascivious lifestyle. All day she hungers for sex and 
masturbates and in general pollutes the human condition. Redeem yourself at 
#teens4christ. Thanks for reading this. dongs.
%
O say can you see by the monitors early light what so proudly we hailed at 
the twilight's last gleaming? Whose broad scripts and bright colour through 
the perilous fight O'er the jupes we watched were so gallantly streaming? 
And the rockets red glare g-lines bursting in air gave proof through the 
night that our chan was still there. O say does that #T4C banner yet wave? 
O'er the land of the pedo and the home of the gay.
%
Michael Jackson touched my junk liberally. he slept with me in bed and he 
couldnt keep his offensive hands off of me. he was performing many red flag 
touches. i couldnt believe what the fuck was going on. i told michael the 
city would not approve of the King of Pop touching an underage kid in bed
%
You really do not even know me, child. I demand that you immediately silence 
yourself. You're hiding behind your computer, for goodness sake! I would hug 
you if you ever talked to me like that in person, child.
%
Yo! First off I love the Lord Jesus. My name is Ron. I am a Freshman at 
Winona State. My family is really important to me. I'm not doing this to 
find a g/f. I just thought it would be funny and I like to meet new people. 
Peace out!
%
Kobe Bryant is being attacked by all the media concerning the sex assault 
charge filed against him. It fine when he dunking on the basketball court 
but he a criminal when he going strong to the hole with a white woman. That 
be some bullsheeeee-it. This is most terrible travesties. First they take 
the McRib off the Mack Donald's menu, now this. There will never be justice 
for our peoples.
%
Rory touched my virgin junk liberally. He strapped me into his Trans Am and 
told me we were taking a detour on the way back from the prom. I could not 
believe what the fuck was going on. He vomited red many times as he had been 
drinking heavily. I told him the athletic staff would not approve of the 
star quarterback falling asleep inside an underage girl. There it is. My dad 
found us at makeout ridge. I've got to go.
%
I swear, if these homosexuals don't take a hint and quit sucking my cock all 
the time, I'm going to have to resort to drastic measures, like maybe 
pinning them down to the cement floor of the loading dock with my powerful 
forearms and working my cock all the way up their butt so they understand 
loud and clear just how much I disapprove of their unwelcome advances. I 
mean, you can't get much more direct than that.
%
I think gay cruises should be called something other than a cruise because 
cruising is what gay men do all the time and it's not like they need a 
vacation from fucking strangers am i rite gentlemen?
%
I QUIT IRC FOREVER! I'M THROUGH WITH THIS SHIT HOLE FUCK YOU ALL YOU FUCKING 
QUEERS! GO BACK TO YOUR FUCKING STUPID TALK ABOUT WEB BROWSERS EVERYONE 
KNOWS THAT OPERA SUCKS A FAT DICK ANYWAYS OH AND ALIEN88 - GET A FUCKING 
LIFE! YOU'LL NEVER GET A FUCKING GIRLFRIEND ALL YOU DO IS SIT ON FRONT OF 
THE COMPUTER ALL DAY LONG AND TALK ABOUT STUPID SHIT WITH THE REST OF THESE 
STUPID FAGGOTS! YOU'RE A FUCKING QUEEN !
%
my girlfriend is so mad just because when she was sucking my cock i clubbed 
her with a high heel on the back of the head, grabbed a handful of hair, 
yanked her off and started pissing in her face she was choking really bad 
and then she vomited on my cock. she should understand that is what i am 
into. money ho's and clothes. How can I apologize?
%
i was just awarded a "yellow star" and while i appreciate that you 
appreciate my bidding and doing business on ebay. i must tell you though, 
that since my family has lost many members in the holocaust, it was very 
upsetting to me, to be "awarded a yellow star" . if you are not aware, jews 
were made to wear yellow stars to identify them as jews so they could be 
rounded up for the concentration camps.
%
I got news for these niggers. They can screw 100 degenerate White sluts a 
day and that doesn't change the fact that they're still just niggers. Its 
like the niggers who go out and buy Cadillacs or BMWs imagining people will 
think they're "high class" or rich. LOL! When people see a nigger riding 
around in an expensive car, they automatically know its nobody of any value 
or class, just a dumb nigger trying to act rich.
%
I GOT JUMTED IN WHEN I WAS 11 BITCH IM 13 WITH A BULLET STILL KICKING BACK 
LEVA..... OH YA THE ONE WHO MADE THE WEB SITE GOOD JOB BUT MAKE THE COLOR 
BLUE IN STED OF BITCH ASS RED........FUCK WEST SIDE SNICHES,EAST SIDE 
BITCHES,NORTH SIDE SLUTS!!!!!!!!!!!!!!!!!!!! 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
!!!!!!!!!!!!!!!!!!!!!!!!!!
%
yo fuckin idiot, trying to step up to me/ you should be lookin up like a 
midget standing in front of a tall tree/ i was going to start dissin you/ 
but here's what i'll do/ since you start dissing your ownself/ with rhyme as 
old as a book covered with dust on top of the bookshelf/ you call yourself 
the fuckin idiot/ you must be pretty smart because you came up with it/
%
Horney? Looking for a quick no strings blow job, swing by, walk in, un zip, 
feed it to me, fuck my face, squirt n go. no games, no names, no 
reciprocation! very discreet, I live alone, can host anytime this weekend. 
You: HWP, 45/under. clean and ready to squirt. send me a message with your 
info, age, height, weight and when you wanna squirt. Me: good looking, very 
discreet, white male.
%
Hey, I remember one time out on the ranch I was with my brother and I 
decided to pull a trick on my brother. I took two thick, dense cords of 
sheep feces and put it in a bowl. I gave to my brother and told him it was 
chocolate pudding. He began to eat the sheep feces. In fact, HE FINISHED 
EVERY LAST BIT! My brother ate sheep shit!!! But the funny thing is, I don't 
even have a brother! It was me! I ATE SHEEP SHIT!!!
%
listen you fucking shit skinned coon nigger jungle bunny spear chucker. Shut 
your chocolate tar baby hide before I whip your ass. go back to niggeria and 
prance around with all the Schvartza in the bush you fucking moolie nigger. 
ill fucking brand you toby, and if you try any of that KUNTA KINTA crap ill 
fucking execute you and feed you to pigs.
%
this channel is for ballers, shot callers, those rolling and controlling and 
folks willing to represent memories of Tupac and keep the dream of the Black 
Planet alive.
%
you shut your face you nigger loving pile of intestinal feces, ill rip your 
bowels out and feast on them, then i'll impregnate your girlfriend and wait 
7 months then unwravel her belly button and suck out all the vaginal 
discharge and feast upon the baby. i will fornicate your liver, then make 
you guzzle gallon after gallon of putrid diarrhea. you will gag on my green 
logs of asshole mud butter
%
oh wait you remember when frodo was dry humping bilbo up the ass in a 
classroom at gryffendorf then harry potter walked in and started tossing 
frodo's salad HOLY SHIT I DO NOT CARE
%
u dont even know me kid shut the fuck up hidin behind your computer i'd 
fuckin lump u out if you fronted on me like that in person kid
%
So you guys can go on about your mitsis and your fake idles and whatever 
bullshit you talk about to pass the time and make the constant throbbing 
reminder that your live is a living hell go away. I'll be hanging out with 
my FRIEND, watching anime.
%
I'll fuck you in the ass you punk ass white boy. I'll fuck you in the ass 
you coward, you bitch. You fucking faggot! Come up and take me on you scared 
coward. You white bitch. You ain't man enough to fuck with me, bitch! There 
ain't no-one in the room big enough to take me on. You're just scared like a 
little white pussy. I'll fuck you till you love me, you faggot!
%
It's safe to say that I am one of the world's foremost experts on memes and in fact there is no one I can think of that has a meme resume as impressive as mine. So please tell me, what are your qualifications to say that I don't know what a meme is?